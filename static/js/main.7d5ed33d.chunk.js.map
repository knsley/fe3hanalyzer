{"version":3,"sources":["data/CharacterName.ts","model/Util.ts","sim/StatArray.ts","data/CharacterClass.ts","data/class_bonus_stats.csv","data/class_min_stats.csv","data/class_growth_rates.csv","data/class_requirements.csv","data/FetchProvider.ts","data/ClassData.ts","data/CharacterTraits.ts","data/CharacterGrowths.ts","data/CharacterMaxStats.ts","data/CharacterPresets.ts","data/character_traits.csv","data/character_growth_rates.csv","data/character_max_stats.csv","data/character_presets.csv","data/CharacterData.ts","storage/NestedStorageProvider.ts","ui/ChartColorScheme.tsx","model/Defaults.ts","model/PageManager.ts","model/AppContext.ts","model/AnalysisResultCache.ts","lib/EncodingHelper.ts","model/CharacterProfile.ts","sim/AdjustedGrowthRate.ts","sim/ProbabilityArray.ts","sim/StatGrowthTotalCalculator.ts","sim/GrowthResultAccumulator.ts","ui/ClassSelector.tsx","ui/LevelSelector.tsx","ui/ClassAndLevelSelector.tsx","ui/ClassChangeSingleLevel.tsx","ui/ClassChangeList.tsx","ui/ClassChangeEditor.tsx","ui/CharacterSelector.tsx","data/CharacterPresetLoader.ts","ui/InitialStatPresetDialog.tsx","ui/InitialStatsEditor.tsx","ui/MaxStatLimitModEditor.tsx","images/bylethmale_1.png","images/bylethmale_2.png","images/bylethfemale_1.png","images/bylethfemale_2.png","images/edelgard_1.png","images/edelgard_2.png","images/hubert_1.png","images/hubert_2.png","images/dorothea_1.png","images/dorothea_2.png","images/ferdinand_1.png","images/ferdinand_2.png","images/bernadetta_1.png","images/bernadetta_2.png","images/caspar_1.png","images/caspar_2.png","images/petra_1.png","images/petra_2.png","images/linhardt_1.png","images/linhardt_2.png","images/dimitri_1.png","images/dimitri_2.png","images/dedue_1.png","images/dedue_2.png","images/felix_1.png","images/felix_2.png","images/mercedes_1.png","images/mercedes_2.png","images/ashe_1.png","images/ashe_2.png","images/annette_1.png","images/annette_2.png","images/sylvain_1.png","images/sylvain_2.png","images/ingrid_1.png","images/ingrid_2.png","images/claude_1.png","images/claude_2.png","images/lorenz_1.png","images/lorenz_2.png","images/hilda_1.png","images/hilda_2.png","images/raphael_1.png","images/raphael_2.png","images/lysithea_1.png","images/lysithea_2.png","images/ignatz_1.png","images/ignatz_2.png","images/marianne_1.png","images/marianne_2.png","images/leonie_1.png","images/leonie_2.png","images/manuela_1.png","images/hanneman_1.png","images/seteth_1.png","images/flayn_1.png","images/cyril_1.png","images/cyril_2.png","images/catherine_1.png","images/alois_1.png","images/gilbert_1.png","images/shamir_1.png","images/yuri_1.png","images/yuri_2.png","images/balthus_1.png","images/balthus_2.png","images/constance_1.png","images/constance_2.png","images/hapi_1.png","images/hapi_2.png","images/jeritza_1.png","images/anna_1.png","data/CharacterThumbnails.ts","ui/CharacterThumbnail.tsx","ui/ExportProfileDialog.tsx","ui/ImportProfileDialog.tsx","ui/CharacterProfileBuilder.tsx","ui/RechartProbabilityDisplay.tsx","ui/AnalysisSingleStatDisplay.tsx","ui/AnalysisReportDisplay.tsx","ui/LuckAnalysisReport.tsx","model/AnalysisReportExport.ts","ui/ExportDataDialog.tsx","ui/AnalysisPage.tsx","../../docs/about.md","../../docs/docs.md","../../docs/faq.md","ui/HeaderAndDocumentation.tsx","App.tsx","index.tsx"],"names":["CharacterName","_ToCharacterDisplayName","c","BylethFemale","BylethMale","CharacterFaction","_enumToDisplay","Map","_displayToEnum","getCharacterDisplayName","r","get","undefined","RangeError","getCharacterFromDisplayName","name","i","End","valueOf","enumValue","stringValue","set","_factionNames","getFactionDisplayName","faction","displayName","Player","BlackEagles","BlueLions","GoldenDeer","ChurchOfSeiros","AshenWolves","Other","listingOrderComparer","a","b","_byFaction","sort","Edelgard","Hubert","Dorothea","Ferdinand","Bernadetta","Caspar","Petra","Linhardt","Dimitri","Dedue","Felix","Mercedes","Ashe","Annette","Sylvain","Ingrid","Claude","Lorenz","Hilda","Raphael","Lysithea","Ignatz","Marianne","Leonie","Manuela","Hanneman","Seteth","Flayn","Cyril","Catherine","Alois","Gilbert","Shamir","Yuri","Balthus","Constance","Hapi","Jeritza","Anna","clamp","value","lowerBound","upperBound","iTOTAL","CanonicalStatNamesByIndex","CanonicalStatIndicesByName","getCanonicalStatNameByIndex","statIndex","Array","from","entries","forEach","entry","forEachStat","stat","callback","outputs","forEachStatIndex","output","push","initStats","n","zeroStats","_StatIndexes","_statApply","s1","s2","op","vectorOut","map","addStats","addProbabilities","areEqualStats","every","CharacterClass","CharacterClassGroup","ClassNameToEnum","ClassEnumToName","getClassDisplayName","result","getClassFromDisplayName","getCharacterClassGroupDisplayName","HouseLeader","iterEnd","friendlyName","replace","_byCategory","Unique","Commoner","Noble","Dancer","Beginner","Myrmidon","Soldier","Fighter","Monk","Intermediate","Lord","Mercenary","Thief","ArmoredKnight","Cavalier","Brigand","Archer","Brawler","Mage","DarkMage","Priest","PegasusKnight","Advanced","Hero","Swordmaster","Assassin","FortressKnight","Paladin","WyvernRider","Warrior","Sniper","Grappler","Warlock","DarkBishop","Bishop","Special","Trickster","WarMonk","WarCleric","DarkFlier","Valkyrie","Master","FalconKnight","WyvernLord","MortalSavant","GreatKnight","BowKnight","DarkKnight","HolyKnight","WarMaster","Gremory","EnlightenedOne","ArmoredLord","HighLord","WyvernMaster","Emperor","GreatLord","Barbarossa","DeathKnight","fetchImpl","fetch","location","text","then","response","failure","Error","getFetchProvider","NobleBackgrounds","Set","CommonerBackgrounds","LordBackgrounds","ProtagonistBackgrounds","CharacterGroups","ClassRequirementsMap","getClassGeneralData","characterClass","data","hasClassGeneralData","has","prob","growths","x","ClassGrowths","getClassGrowthRateMod","getRequirementForCharacterAndClass","character","specificCharacterRequirements","requirements","filter","req","matchOnGender","gender","getCharacterTraits","matchOnSpecificCharacter","characters","length","reduce","y","level","getEligibleClasses","eligibleClasses","add","zeroOrNumber","numberAsString","Number","parseInt","StandardParseConfig","delimiter","newline","quoteChar","escapeChar","header","dynamicTyping","worker","comments","skipEmptyLines","loadClassBonusStats","dataFile","fetchFunc","replaceAll","bonusStats","parseResult","Papa","parse","row","className","console","log","statBonuses","loadClassMinStats","minStats","statLine","loadClassGrowthRates","growthRates","parseGenderRequirement","genderInTable","startsWith","parseCharacterRequirement","charactersString","characterGroupLookup","specificCharacterLookup","loadClassRequirements","requirementsMap","ClassBonusStatsFile","bonusStatMap","ClassMinStatsFile","minStatMap","ClassGrowthRatesFile","growthRateMap","ClassRequirementsFile","baseStats","CharacterTraits","loadCharacterTraitsFromDataFile","parseConfig","characterName","isStudent","GrowthRates","loadCharacterGrowthsFromDataFile","CharacterMaxStats","loadCharacterMaxStatsFromDataFile","statMaxes","CharacterPresets","loadCharacterPresetsFromDataFile","title","class","stats","traits","getCharacterMaxBaseStats","mods","maybeMaxStats","maxStats","StrAndSpdUp","LckAndChaUp","MagAndDexUp","DefAndResUp","getCharacterInitialPresets","getBaseStatsFromClassStats","boost","getCharactersWithDefinedData","charactersWithData","CharacterTraitsFile","CharacterGrowthsFile","CharacterMaxStatsFile","CharacterPresetsFile","NestedStorageProvider","key","rootStorageProvider","subKey","rootProvider","obj","this","fromStore","getItem","JSON","item","setItem","stringify","SERIES_COLOR_SCHEMES","baseColor","baseHighlightColor","medianValueColor","medianValueHighlightColor","referenceValueColor","referenceValueHighlightColor","NoValidDefaultClassError","getCharacterDefaultGenericClass","size","starterClasses","baseClasses","classList","aReq","bReq","createDefaultEmptyCharacterProfile","Math","random","initialData","presets","presetsCopy","getDefaultCharacterInitialData","endLevel","max","maxStatMods","startLevel","startClass","startStats","changes","MaxCharacterProfileCountError","message","PageManager","pageListChangeCallback","storageProvider","pages","listeners","listenerCounter","keys","page","profiles","referenceStats","report","delete","pageData","newPageData","onPageUpdate","index","newProfileList","splice","profile","pageListeners","newHandle","getNewPageListenerHandle","handle","handleValue","values","listener","AppContext","modCount","pageManager","analysisResultCache","contextInstance","_currentValue","valueCallback","createPageManager","pageListUpdated","React","createContext","getDefaultContextValue","modCounter","analysisCache","v","updateValueAndNotify","appContextInstance","getAppContext","window","sessionStorage","stringToUTF16","s","buf","ArrayBuffer","bufView","Uint16Array","len","charCodeAt","toBase64","asByteArray","Uint8Array","str","String","fromCharCode","btoa","getNormalizedGrowthProfileString","normalizedClassChangeString","changeStrings","toString","join","getNormalizedClassChangeString","getNormalizedStatLimitsString","getCharacterProfileHash","normalizedProfile","normalizedStatLimits","dataString","crypto","subtle","digest","serializeCharacterProfileToJson","isBoundedInteger","minBoundInclusive","maxBoundExclusive","isInteger","isClassChangeEquivalent","areValidClassChanges","classChanges","isCharacterEligibleForClass","deserializeCharacterProfileFromJson","json","parsed","error","check","isArray","field","isMaxStatModEquivalent","fieldDefinition","asCharacterProfileSchema","startingStats","asArray","isValidStartingStats","guaranteedLowStatUpStats","getAdjustedGrowthRates","rawGrowthRate","pZeroOtherwise","oneMinus","computeZeroOtherwiseProbabilities","pZeroOrOneTotal","p","computeZeroOrOneStatUpProbability","isAlmostZero","abs","ProbabilityArray","minValue","maxValue","offset","width","probability","setProbability","shift","e","sum","scale","clampIndex","clone","clampedProbability","remainder","pStatUp","cap","min","addProbability","pNotChanged","thisProb","indexLower","indexUpper","recursivePermutation","priorProbability","currentSum","statUpProbabilities","cumulative","thisLevelupProbability","computeStatGrowthTotalProbabilities","levelups","probabilities","normalize","clampProbability","computeDistributionMedianForSingleStat","distribution","singleStatDistribution","getDistributionByStatIndex","pTarget","cumulativeProbability","buckets","after","median","pLower","pHigher","pMedian","hp","mag","dex","spd","lck","def","res","cha","levelupTotal","precomputeClassGrowthRates","baseLevelups","getCharacterBaseGrowths","cache","startClassGrowthMod","startClassRawGrowth","startClassAdjustedGrowths","normal","adjusted","change","growthMod","rawGrowths","adjustedGrowths","applyClassChanges","distributions","newDistributions","classBaseStats","applyLevelup","growthRate","caps","stepProbability","GrowthResultAccumulator","perLevel","cachedLevels","cachedGrowthRates","statMaximums","levelupMap","classChange","computedChanges","precomputeClassChanges","baseStartStats","startStat","startDistribution","classBasedLevelupDistributions","cachedGrowths","calculateLevelupDistributions","firstLevelClassChanges","levelFinalClass","firstLevelupDistribution","recordLevelResults","levelSpread","levelIndex","actualLevel","levelupDistribution","statDistribution","growthDistribution","normalized","export","exportStatDistributions","CharacterNameList","ClassSelector","props","characterEntries","disabled","f","group","entriesInGroup","category","getCharacterClassesByCategory","label","handler","event","child","selected","target","onSelected","FormControl","InputLabel","htmlFor","Select","native","onChange","id","style","minWidth","LevelSelector","minLevel","maxLevel","customText","labelStyle","FormControlLabel","control","marginLeft","labelPlacement","ClassAndLevelSelector","classRequirement","selectedClass","effectiveMinLevel","effectiveMaxLevel","containerStyle","containerProps","newClassRequirement","effectiveNewMinLevel","selectedLevel","onChanged","classSelectorProps","l","levelSelectorProps","getClassChipStyle","isDragging","draggableStyle","marginRight","userSelect","ClassChip","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","Chip","icon","onDelete","color","clickable","cursor","getClassChip","isDisabled","DropContainerStyle","backgroundColor","display","flexDirection","flexShrink","flexGrow","flexWrap","paddingTop","paddingBottom","paddingLeft","paddingRight","minHeight","DragOverStyle","borderTop","borderBottom","dropContainerStyle","isDraggingOver","ClassChangeSingleLevel","onDeleteHandler","newClassList","classes","onDeleted","draggableItems","ind","draggableId","onDragEnd","destination","newList","srcIndex","source","destIndex","elem","onReordered","droppableId","direction","Tooltip","droppableProps","placeholder","CONTAINER_STYLE","flexBasis","justifyContent","alignItems","ROW_STYLE","ROW_ELEMENT_STYLE","padding","textAlign","alignContent","ClassChangeList","elements","levelsInOrder","list","fixedLevel","FormLabel","reorderedHandler","deletedHandler","margin","ClassAddWidgetContainerStyle","marginTop","ClassAndLevelSelectorStyle","alignSelf","AddButtonStyle","ClassAddWidget","onSelectionChanged","Button","variant","onClick","onAddButtonClicked","ClassChangeEditorContainerStyle","ClassChangeEditor","useState","defaultClassChoice","defaultClassRequirement","addWidgetClass","addWidgetLevel","getClassChangeEditorDefaultState","state","setState","immediateStateUpdateNeeded","effectiveClass","effectiveLevel","requiredLevelForEffectiveClass","addWidgetChangeHandler","addWidgetConfirmHandler","appendedMap","classChangeList","onClassChangeListChange","classChangeListReorderedHandler","CharacterSelector","entriesInFaction","getCharactersByFaction","availableCharacters","getPresetDisplayName","bundleInstance","PresetsBundleImpl","presetLookup","presetMap","computePresets","loadInitialStatsPresets","PresetSelector","presetEntries","availablePresets","preset","marginBottom","selectedIndex","PresetDisplayRowStyle","PresetDisplayElementStyle","PresetDisplayLabelStyle","PresetDisplayValueStyle","fontWeight","opacity","PresetDisplay","Typography","statDisplayName","InitialStatPresetDialog","selectedCharacter","defaultCharacter","selectedPresetIndex","prevProps","prevState","AvailablePresets","presetsForSelectedCharacter","getPresetsForCharacter","selectedPreset","getStatBundle","presetSelectionDisplay","newIndexSelection","selectableCharacters","getCharacterList","Dialog","open","onClose","onCancelled","DialogTitle","DialogContent","newCharacterSelection","DialogActions","STAT_NAME_LIST","StatArraySelector","forEachStatV","savedIndex","elementStyle","Input","type","inputProps","minimums","maximums","newStats","inputChanged","reconcile","statMaxMods","reconciled","validClasses","specificRequirement","characterMaxStats","statsMin","OUTER_LAYOUT","FORM_CONTAINER_LAYOUT","INNER_ROW_STYLE","CHARACTER_IDENTITY_LAYOUT","CHARACTER_SELECTOR_STYLE","CLASS_AND_LEVEL_SELECTOR_STYLE","PRESET_BUTTON_STYLE","STAT_ARRAY_SELECTOR_STYLE","STAT_ARRAY_ELEMENT_STYLE","InitialStatsEditor","presetDialogOpen","setPresetDialogOpen","statMinumums","classData","dialog","statBundle","FormGroup","MaxStatLimitModEditor","_stats_changed","strAndSpd","lckAndCha","magAndDex","defAndRes","newStatuses","status","Checkbox","checked","CharacterToThumbnailMap","CharacterThumbnail","path","height","fontSize","toFixed","lineHeight","verticalAlign","objectFit","timeskip","src","postSkip","preSkip","alt","BylethMale_Pre","BylethMale_Post","BylethFemale_Pre","BylethFemale_Post","Edelgard_Pre","Edelgard_Post","Hubert_Pre","Hubert_Post","Dorothea_Pre","Dorothea_Post","Ferdinand_Pre","Ferdinand_Post","Bernadetta_Pre","Bernadetta_Post","Caspar_Pre","Caspar_Post","Petra_Pre","Petra_Post","Linhardt_Pre","Linhardt_Post","Dimitri_Pre","Dimitri_Post","Dedue_Pre","Dedue_Post","Felix_Pre","Felix_Post","Mercedes_Pre","Mercedes_Post","Ashe_Pre","Ashe_Post","Annette_Pre","Annette_Post","Sylvain_Pre","Sylvain_Post","Ingrid_Pre","Ingrid_Post","Claude_Pre","Claude_Post","Lorenz_Pre","Lorenz_Post","Hilda_Pre","Hilda_Post","Raphael_Pre","Raphael_Post","Lysithea_Pre","Lysithea_Post","Ignatz_Pre","Ignatz_Post","Marianne_Pre","Marianne_Post","Leonie_Pre","Leonie_Post","Cyril_Pre","Cyril_Post","Yuri_Pre","Yuri_Post","Balthus_Pre","Balthus_Post","Constance_Pre","Constance_Post","Hapi_Pre","Hapi_Post","ExportProfileDialog","showCopiedMessage","setShowCopiedMessage","profileJson","copyHandler","navigator","clipboard","writeText","closeHandler","TextField","multiline","rowsMax","ImportProfileDialog","importString","setImportString","importHandler","onProfileLoaded","trim","helperText","removeUnusedClassChanges","getGrowthProfileFromCharacterProfile","filteredClassChanges","CharacterCardStyle","ContainerStyle","maxWidth","RemoveProfileButtonStyle","CharacterStatsContainer","CharacterThumbnailLayout","OtherSettingsContainerStyle","OtherSettingsControlRow","ThumbnailColumnStyle","CharacterImportExportButtonsStyle","classChangeListToMap","changesForLevel","getReconciledEndLevel","initialStats","candidate","CharacterProfileBuilder","exportDialogOpen","setExportDialogOpen","importDialogOpen","setImportDialogOpen","maybeRemoveButton","showDeleteButton","disableElevation","onDeleteClicked","useTimeskipThumbnail","Card","CardContent","onProfileChange","newInitialStats","reconciledClassChangeList","getReconciledClassChanges","reconciledEndLevel","newEndLevel","newClassChangeList","flattenedClassChanges","levels","flattenClassChanges","newMods","EmptyDataSeriesError","minReducer","maxReducer","reduceKeys","m","reducer","probabilityValueFormatter","decimalDigits","RechartProbabilityDisplay","containerRef","createRef","dataSeries","some","d","probabilityValues","dataPoints","seriesNames","leftLimit","minBin","rightLimit","maxBin","point","bin","series","maybeBinValue","computeChartData","chartData","seriesKeys","averageLines","avgValue","averageValue","avgXCoord","round","ReferenceLine","stroke","areaGraphs","seriesKey","Area","dataKey","fillOpacity","fill","current","getBoundingClientRect","ResponsiveContainer","AreaChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","domain","tickFormatter","parseFloat","formatter","labelFormatter","prefix","statLabel","number","Legend","Component","OuterLayoutStyle","justifyItems","ChartTitleStyle","textTransform","ChartBodyStyle","AnalysisSingleStatDisplay","averages","averageValues","single","position","caption","maxProbability","toLocaleUpperCase","getReportMaxLevel","components","StatDescriptionsByIndex","getStatDescriptionByIndex","getKeyBounds","floorWithPrecision","digits","pow","floor","ceilWithPrecision","ceil","getSingleStatDisplayProps","seriesLevelToUse","analysisComponent","levelToUse","medianDetails","computeDistributionMedian","AnalysisReportDisplay","nextProps","cacheToken","statDistributions","hpLowerBound","hpUpperBound","totalLowerBound","totalUpperBound","restLowerBound","restUpperBound","highestBinProbabilitiesByStat","getStatBounds","minHpValue","maxHpValue","minRestValue","maxRestValue","highestProbability","maxProbabilty","MuiTooltip","_MuiTooltip","ReferenceStatContainerStyle","ReferenceStatElementStyle","RngRatingExplanation","computePercentileRanks","singleReportComponent","splits","mapStatArray","referenceStat","below","same","above","bucket","computeStatSplit","SingleReportContainerStyle","ProfileHeadingContainerStyle","ProfileNameSegmentStyle","LuckQuotientHighlight","SingleProfileReport","ranks","areaFill","profileIndex","areaOutline","statName","medianData","serializedDistribution","Object","fromEntries","medianDisplayPercentile","rank","reference","RadarChart","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","toUpperCase","computeMedianStatsFromReport","newReferenceStats","referenceDistributions","referenceSourceLevel","referenceDistribution","LuckAnalysisReport","nextState","reportIterationCounter","reportBlocks","component","useLevel","distributionsByStat","positions","luckQuotient","belowOrSameProduct","aboveOrSameProduct","ranking","computeLuckQuotient","luckQuotientText","isNaN","characterTextColor","ordinalNumberCompare","toCsvRow","componentIndex","lvl","exportAnalysisReportToCsv","lines","flatMap","classesByLevel","levelCounter","currentClass","reverse","pop","computeClassNamesByLevel","rows","iStat","dist","line","totalLevelupDistribution","totalLevelupBuckets","allData","Blob","ExportDataDialog","dataBlobUrl","clearDataBlob","URL","createObjectURL","aElem","document","createElement","href","download","click","revokeObjectURL","profileStrings","endClass","downloadDataBlob","reportGenerationCounter","AddProfileButtonContainerStyle","AddProfileButtonStyle","AnalysisPage","listenerHandle","resultsComputed","results","profileBlockExpansion","selectedReportLevel","exportDataDialogOpen","context","attachListener","pageId","detachListener","reconcilePageState","pageDataRef","getPageData","maybeAddProfileButton","onAddProfileClicked","computeReportButtonColor","computeReportButton","onGenerateReportClicked","profileBlock","characterProfile","renderProfile","rnjesusDisplay","Accordion","AccordionSummary","expandIcon","AccordionDetails","Container","reportBlock","float","levelSelector","newSelectedLevel","growthProfile","accum","compute","getDistributions","updateAnalysis","newProfile","deleteProfile","updateProfile","profileChanged","onRemoveProfileClicked","addPageListener","pageNumber","onPageUpdated","removePageListener","forceUpdate","newBlockExpansion","tailLength","concat","slice","profilesMatched","oldProfile","contextType","Context","LinksTrayStyle","MenuIconStyle","GithubPagesRegex","HeaderAndDocumentation","segmentsMatch","hostname","match","urlPrefix","gitUser","FaqUrl","FaqAssetUrl","DocumentationUrl","DocumentationAssetUrl","AboutDocsUrl","AboutDocsAssetUrl","Link","underline","App","loaded","loadCharacterData","loadClassData","appContext","currentValue","hasPage","createNewPage","theme","createMuiTheme","typography","AppContextObject","Provider","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d5ed33d.chunk.js","sourcesContent":["/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nexport enum CharacterName\n{\n    BylethMale = 0,\n    BylethFemale,\n    \n    // Black Eagles\n    Edelgard,\n    Hubert,\n    Dorothea,\n    Ferdinand,\n    Bernadetta,\n    Caspar,\n    Petra,\n    Linhardt,\n\n    // Blue Lions\n    Dimitri,\n    Dedue,\n    Felix,\n    Mercedes,\n    Ashe,\n    Annette,\n    Sylvain,\n    Ingrid,\n\n    // Golden Deer\n    Claude,\n    Lorenz,\n    Hilda,\n    Raphael,\n    Lysithea,\n    Ignatz,\n    Marianne,\n    Leonie,\n\n    // Church\n    Manuela,\n    Hanneman,\n    Seteth,\n    Flayn,\n    Cyril,\n    Catherine,\n    Alois,\n    Gilbert,\n    Shamir,\n\n    // DLC\n    Yuri,\n    Balthus,\n    Constance,\n    Hapi,\n    Jeritza,\n    Anna,\n    \n    // For indexing\n    End\n}\n\n// Byleth gets special handling because male/female Byleth\n// have access to different classes.\nfunction _ToCharacterDisplayName(c : CharacterName)\n{\n    switch(c)\n    {\n        case CharacterName.BylethFemale:\n            return \"Byleth (Female)\";\n        case CharacterName.BylethMale:\n            return \"Byleth (Male)\";\n        default:\n            return CharacterName[c];\n    }\n}\n\n// Precache the mapping.\nconst _enumToDisplay = new Map<CharacterName, string>();\nconst _displayToEnum = new Map<string, CharacterName>();\n(() => {\n    for (let i = 0; i < CharacterName.End.valueOf(); i++)\n    {\n        const enumValue : CharacterName = i as CharacterName;\n        const stringValue = _ToCharacterDisplayName(enumValue);\n        _enumToDisplay.set(enumValue, stringValue);\n        _displayToEnum.set(stringValue, enumValue);\n    }\n})();\n\nexport function getCharacterDisplayName(c : CharacterName)\n{\n    const r = _enumToDisplay.get(c);\n    \n    if (r !== undefined)\n    {\n        return r;\n    }\n    else\n    {\n        throw new RangeError(\"Not a valid CharacterName enum value\");\n    }\n}\n\nexport function getCharacterFromDisplayName(name : string)\n{\n    const r = _displayToEnum.get(name);\n    \n    if (r !== undefined)\n    {\n        return r;\n    }\n    else\n    {\n        throw new RangeError(\"Not a valid display name for a character.\");\n    }\n}\n\nexport enum CharacterFaction\n{\n    Player = 0,\n    BlackEagles,\n    BlueLions,\n    GoldenDeer,\n    ChurchOfSeiros,\n    AshenWolves,\n    Other,\n    End\n};\n\nconst _factionNames = new Map<CharacterFaction,string>();\n_factionNames.set(CharacterFaction.Player, \"Player\");\n_factionNames.set(CharacterFaction.BlackEagles, \"Black Eagles\");\n_factionNames.set(CharacterFaction.BlueLions, \"Blue Lions\");\n_factionNames.set(CharacterFaction.GoldenDeer, \"Golden Deer\");\n_factionNames.set(CharacterFaction.ChurchOfSeiros, \"Church of Seiros\");\n_factionNames.set(CharacterFaction.AshenWolves, \"Ashen Wolves\");\n_factionNames.set(CharacterFaction.Other, \"Other\");\n\nexport function getCharacterFactions() : Iterable<CharacterFaction>\n{\n    return _factionNames.keys();\n}\n\nexport function getFactionDisplayName(faction : CharacterFaction) : string\n{\n    const displayName = _factionNames.get(faction);\n    if (displayName === undefined)\n    {\n        throw new RangeError(\"faction value is not recognized as valid faction.\");\n    }\n    else\n    {\n        return displayName;\n    }\n}\n\nconst listingOrderComparer = (a : CharacterName, b : CharacterName) => {\n    // Just reuse explicit list order.\n    return a - b;\n};\n\nconst _byFaction = new Map<CharacterFaction,Array<CharacterName>>();\n_byFaction.set(CharacterFaction.Player, [\n    CharacterName.BylethMale,\n    CharacterName.BylethFemale\n].sort(listingOrderComparer));\n_byFaction.set(CharacterFaction.BlackEagles, [\n    CharacterName.Edelgard,\n    CharacterName.Hubert,\n    CharacterName.Dorothea,\n    CharacterName.Ferdinand,\n    CharacterName.Bernadetta,\n    CharacterName.Caspar,\n    CharacterName.Petra,\n    CharacterName.Linhardt\n].sort(listingOrderComparer));\n_byFaction.set(CharacterFaction.BlueLions, [\n    CharacterName.Dimitri,\n    CharacterName.Dedue,\n    CharacterName.Felix,\n    CharacterName.Mercedes,\n    CharacterName.Ashe,\n    CharacterName.Annette,\n    CharacterName.Sylvain,\n    CharacterName.Ingrid,\n].sort(listingOrderComparer));\n_byFaction.set(CharacterFaction.GoldenDeer, [\n    CharacterName.Claude,\n    CharacterName.Lorenz,\n    CharacterName.Hilda,\n    CharacterName.Raphael,\n    CharacterName.Lysithea,\n    CharacterName.Ignatz,\n    CharacterName.Marianne,\n    CharacterName.Leonie,\n].sort(listingOrderComparer));\n_byFaction.set(CharacterFaction.ChurchOfSeiros, [\n    CharacterName.Manuela,\n    CharacterName.Hanneman,\n    CharacterName.Seteth,\n    CharacterName.Flayn,\n    CharacterName.Cyril,\n    CharacterName.Catherine,\n    CharacterName.Alois,\n    CharacterName.Gilbert,\n    CharacterName.Shamir,\n].sort(listingOrderComparer));\n_byFaction.set(CharacterFaction.AshenWolves, [\n    CharacterName.Yuri,\n    CharacterName.Balthus,\n    CharacterName.Constance,\n    CharacterName.Hapi,\n].sort(listingOrderComparer));\n_byFaction.set(CharacterFaction.Other, [\n    CharacterName.Jeritza,\n    CharacterName.Anna\n].sort(listingOrderComparer));\n\nexport function getCharactersByFaction(faction : CharacterFaction) : CharacterName[]\n{\n    const characters = _byFaction.get(faction);\n    if (characters === undefined)\n    {\n        throw new RangeError(`No character mappings for faction ${CharacterFaction[faction]}`)\n    }\n    return characters;\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nexport function clamp(value : number, lowerBound : number, upperBound : number) : number\n{\n    if (value < lowerBound)\n    {\n        return lowerBound;\n    }\n    else if (value > upperBound)\n    {\n        return upperBound;\n    }\n    else\n    {\n        return value;\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { clamp } from \"../model/Util\";\n\n// Indexes for semantically meaningful reference\nexport const iHP =  0;\nexport const iSTR = 1;\nexport const iMAG = 2;\nexport const iDEX = 3;\nexport const iSPD = 4;\nexport const iLCK = 5;\nexport const iDEF = 6;\nexport const iRES = 7;\nexport const iCHA = 8;\n// Use invalid index to avoid indexing past array end.\nexport const iTOTAL = -1;\n\nconst CanonicalStatNamesByIndex : Map<number,string> = new Map<number,string>();\nCanonicalStatNamesByIndex.set(iHP, \"hp\");\nCanonicalStatNamesByIndex.set(iSTR, \"str\");\nCanonicalStatNamesByIndex.set(iMAG, \"mag\");\nCanonicalStatNamesByIndex.set(iDEX, \"dex\");\nCanonicalStatNamesByIndex.set(iSPD, \"spd\");\nCanonicalStatNamesByIndex.set(iLCK, \"lck\");\nCanonicalStatNamesByIndex.set(iDEF, \"def\");\nCanonicalStatNamesByIndex.set(iRES, \"res\");\nCanonicalStatNamesByIndex.set(iCHA, \"cha\");\nCanonicalStatNamesByIndex.set(iTOTAL, \"stat+1\");\n\nconst CanonicalStatIndicesByName : Map<string,number> = new Map<string,number>();\nArray.from(CanonicalStatNamesByIndex.entries()).forEach(entry => CanonicalStatIndicesByName.set(entry[1], entry[0]));\n\nexport function getCanonicalStatNameByIndex(statIndex : number) : string\n{\n    const r = CanonicalStatNamesByIndex.get(statIndex);\n    if (r === undefined)\n    {\n        throw new RangeError(`Unknown StatArray index ${statIndex}`);\n    }\n    else\n    {\n        return r;\n    }\n}\n\nexport function getCanonicalStatIndexByName(statName : string) : number\n{\n    const r = CanonicalStatIndicesByName.get(statName);\n    if (r === undefined)\n    {\n        throw new RangeError(`Unknown canonical stat name ${statName}`);\n    }\n    else\n    {\n        return r;\n    }\n}\n\n// Should all be integers.\nexport type StatArray = [\n    hp: number,\n    str: number,\n    mag: number,\n    dex: number,\n    spd: number,\n    lck: number,\n    def: number,\n    res: number,\n    cha: number,\n];\n\n// Should all be range [0,1] for probabilities of stat up at level up.\nexport type StatUpProbabilities = [\n    hp: number,\n    str: number,\n    mag: number,\n    dex: number,\n    spd: number,\n    lck: number,\n    def: number,\n    res: number,\n    cha: number,\n];\n\nexport const STAT_COUNT = 9;\nexport function forEachStat<T extends StatArray | StatUpProbabilities>(stat : T, callback : (stat : number, index : number) => number) : T\n{\n    let outputs = new Array<number>(9);\n\n    const statCount = STAT_COUNT;\n    for (let i = 0; i < statCount; i++)\n    {\n        outputs[i] = callback(stat[i], i);\n    }\n\n    return outputs as T;\n}\n\nexport function forEachStatV<T extends StatArray | StatUpProbabilities>(stat : T, callback : (stat : number, index : number) => void) : void\n{\n    const statCount = STAT_COUNT;\n    for (let i = 0; i < statCount; i++)\n    {\n        callback(stat[i], i);\n    }\n}\n\nexport function forEachStatIndex<T>(callback : (index : number) => T) : T[]\n{\n    const statCount = STAT_COUNT;\n    const output = new Array<T>(0);\n\n    for (let i = 0; i < statCount; i++)\n    {\n        output.push(callback(i));\n    }\n\n    return output;\n}\n\nexport function mapStatArray<T extends StatArray | StatUpProbabilities, U>(stat : T, callback : (stat : number, index : number) => U) : U[]\n{\n    let outputs = new Array<U>(9);\n\n    const statCount = STAT_COUNT;\n    for (let i = 0; i < statCount; i++)\n    {\n        outputs[i] = callback(stat[i], i);\n    }\n\n    return outputs;\n}\n\n// Integers\nexport type StartingStats = StatArray;\n\n// Should be 0 or 1\nexport type LevelUpGrowth = StatArray;\n\n// Integers\nexport type ClassBaseStats = StatArray;\n\n// Integers\nexport type ClassBonusStats = StatArray;\n\n// Helper\nexport function statTotal(stats : StatArray)\n{\n    return stats.reduce((p, c) => p + c);\n}\n\nexport function initStats(n : number) : StatArray\n{\n    return [n,n,n,n,n,n,n,n,n];\n}\n\nexport function zeroStats() : StatArray\n{\n    return initStats(0);\n}\n\ntype _StatApplyOp = (a : number, b : number) => number;\nconst _StatIndexes = [0,1,2,3,4,5,6,7,8]\n\n// \"extends StatArray\" elides the fact that both StatArray and StatUpProbabilities are tuples of 9 numbers.\nfunction _statApply<T extends StatArray>(s1 : T, s2 : T, op : _StatApplyOp) : T\n{\n    const vectorOut = _StatIndexes.map(i => op(s1[i], s2[i]));\n    return [...vectorOut] as T;\n}\n\nexport function addStats(s1 : StatArray, s2 : StatArray)\n{\n    return _statApply(s1, s2, (a, b) => a + b);\n}\n\nexport function addProbabilities(s1 : StatUpProbabilities, s2 : StatUpProbabilities)\n{\n    return _statApply(s1, s2, (a, b) => clamp(a + b, 0.0, 1.0));\n}\n\nexport function subtractStats(s1 : StatArray, s2 : StatArray)\n{\n    return _statApply(s1, s2, (a, b) => a - b);\n}\n\nexport function areEqualStats(s1 : StatArray, s2 : StatArray)\n{\n    return s1.every((n, i) => n === s2[i]);\n}\n\nexport function statsMin(s1 : StatArray, s2 : StatArray)\n{\n    return _statApply(s1, s2, (a, b) => Math.min(a, b));\n}\n\nexport function statsMax(s1 : StatArray, s2 : StatArray)\n{\n    return _statApply(s1, s2, (a, b) => Math.max(a, b));\n}\n\nexport class StatAccumulator\n{\n    public hp: number;\n    public str: number;\n    public mag: number;\n    public dex: number;\n    public spd: number;\n    public lck: number;\n    public def: number;\n    public res: number;\n    public cha: number;\n\n    private statMod: StatArray;\n    private statModTotal : number;\n\n    public constructor(start : StatArray | undefined = undefined)\n    {\n        if (start === undefined)\n        {\n            this.hp = 0;\n            this.str = 0;\n            this.mag = 0;\n            this.dex = 0;\n            this.spd = 0;\n            this.lck = 0;\n            this.def = 0;\n            this.res = 0;\n            this.cha = 0;\n        }\n        else\n        {\n            [this.hp, this.str, this.mag, this.dex, this.spd, this.lck, this.def, this.res, this.cha] = start;\n        }\n\n        this.statMod = zeroStats();\n        this.statModTotal = 0;\n    }\n\n    public set bonusStats(bonusStats : StatArray)\n    {\n        this.statMod = bonusStats;\n        this.statModTotal = statTotal(this.statMod);\n    }\n\n    public get statArray() : StatArray\n    {\n        return addStats(this.statMod, [this.hp, this.str, this.mag, this.dex, this.spd, this.lck, this.def, this.res, this.cha]);\n    }\n\n    public get total() : number\n    {\n        return this.hp + this.str + this.mag + this.dex + this.spd + this.lck + this.def + this.res + this.cha + this.statModTotal;\n    }\n\n    public add(stats : StatArray)\n    {\n        this.hp += stats[iHP];\n        this.str += stats[iSTR];\n        this.mag += stats[iMAG];\n        this.dex += stats[iDEX];\n        this.spd += stats[iSPD];\n        this.lck += stats[iLCK];\n        this.def += stats[iDEF];\n        this.res += stats[iRES];\n        this.cha += stats[iCHA];\n    }\n\n    public rebase(stats : StatArray)\n    {\n        this.hp = Math.max(this.hp, stats[iHP]);\n        this.str = Math.max(this.str, stats[iSTR]);\n        this.mag = Math.max(this.mag, stats[iMAG]);\n        this.dex = Math.max(this.dex, stats[iDEX]);\n        this.spd = Math.max(this.spd, stats[iSPD]);\n        this.lck = Math.max(this.lck, stats[iLCK]);\n        this.def = Math.max(this.def, stats[iDEF]);\n        this.res = Math.max(this.res, stats[iRES]);\n        this.cha = Math.max(this.cha, stats[iCHA]);\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nexport enum CharacterClass\n{\n    // Unique/start of game classes\n    Commoner = 0,\n    Noble,\n    Dancer,\n\n    // Tactician only\n    EnlightenedOne,\n\n    // House leaders only in pt. 2\n    ArmoredLord,\n    HighLord,\n    WyvernMaster,\n    Emperor,\n    GreatLord,\n    Barbarossa,\n\n    // Beginner classes\n    Myrmidon,\n    Soldier,\n    Fighter,\n    Monk,\n\n    // Intermediate\n    Lord,\n    Mercenary,\n    Thief,\n    ArmoredKnight,\n    Cavalier,\n    Brigand,\n    Archer,\n    Brawler,\n    Mage,\n    DarkMage,\n    Priest,\n    PegasusKnight,\n\n    // Advanced\n    Hero,\n    Swordmaster,\n    Assassin,\n    FortressKnight,\n    Paladin,\n    WyvernRider,\n    Warrior,\n    Sniper,\n    Grappler,\n    Warlock,\n    DarkBishop,\n    Bishop,\n\n    // Master\n    FalconKnight,\n    WyvernLord,\n    MortalSavant,\n    GreatKnight,\n    BowKnight,\n    DarkKnight,\n    HolyKnight,\n    WarMaster,\n    Gremory,\n\n    // Cindered Shadows\n    Trickster,\n    WarMonk,\n    WarCleric,\n    DarkFlier,\n    Valkyrie,\n    DeathKnight,\n\n    // Trailing number for indexing\n    End\n}\n\n// Generate lookups for names and shit.\nconst ClassNameToEnum : Map<string, CharacterClass> = new Map<string, CharacterClass>();\nconst ClassEnumToName : Map<CharacterClass, string> = new Map<CharacterClass, string>();\n(function() {\n    const iterEnd = CharacterClass.End.valueOf();\n    for (let i = 0; i < iterEnd; i++)\n    {\n        let friendlyName = CharacterClass[i].replace(/\\B[A-Z]/g, \" $&\");\n        ClassNameToEnum.set(friendlyName, i);\n        ClassEnumToName.set(i, friendlyName);\n    }\n})();\n\nexport function getClassDisplayName(c : CharacterClass) : string\n{\n    const result = ClassEnumToName.get(c);\n    if (result === undefined)\n    {\n        throw new RangeError(\"Not a valid CharacterClass enum value.\");\n    }\n    else\n    {\n        return result;\n    }\n}\n\nexport function getClassFromDisplayName(c : string) : CharacterClass\n{\n    const result = ClassNameToEnum.get(c);\n    if (result === undefined)\n    {\n        throw new RangeError(\"Not a valid class name, no matching enum found.\");\n    }\n    else\n    {\n        return result;\n    }\n}\n\nexport function getStartingClasses() : Set<CharacterClass>\n{\n    return new Set([CharacterClass.Commoner, CharacterClass.Noble]);\n}\n\nexport enum CharacterClassGroup\n{\n    Unique = 0,\n    Beginner,\n    Intermediate,\n    Advanced,\n    Special,\n    Master,\n    Player,\n    HouseLeader,\n    Other,\n    End\n}\n\nexport function getCharacterClassGroupDisplayName(c : CharacterClassGroup) : string\n{\n    if (c === CharacterClassGroup.HouseLeader)\n    {\n        return \"House Leader\";\n    }\n    else if (c >= 0 || c < CharacterClassGroup.End)\n    {\n        return CharacterClassGroup[c];\n    }\n    else\n    {\n        throw new RangeError(\"Not recognized character class group\");\n    }\n}\n\nconst _byCategory = new Map<CharacterClassGroup,Array<CharacterClass>>();\n_byCategory.set(CharacterClassGroup.Unique, [\n    CharacterClass.Commoner,\n    CharacterClass.Noble,\n    CharacterClass.Dancer,\n]);\n_byCategory.set(CharacterClassGroup.Beginner, [\n    CharacterClass.Myrmidon,\n    CharacterClass.Soldier,\n    CharacterClass.Fighter,\n    CharacterClass.Monk,\n]);\n_byCategory.set(CharacterClassGroup.Intermediate, [\n    CharacterClass.Lord,\n    CharacterClass.Mercenary,\n    CharacterClass.Thief,\n    CharacterClass.ArmoredKnight,\n    CharacterClass.Cavalier,\n    CharacterClass.Brigand,\n    CharacterClass.Archer,\n    CharacterClass.Brawler,\n    CharacterClass.Mage,\n    CharacterClass.DarkMage,\n    CharacterClass.Priest,\n    CharacterClass.PegasusKnight,\n]);\n_byCategory.set(CharacterClassGroup.Advanced, [\n    CharacterClass.Hero,\n    CharacterClass.Swordmaster,\n    CharacterClass.Assassin,\n    CharacterClass.FortressKnight,\n    CharacterClass.Paladin,\n    CharacterClass.WyvernRider,\n    CharacterClass.Warrior,\n    CharacterClass.Sniper,\n    CharacterClass.Grappler,\n    CharacterClass.Warlock,\n    CharacterClass.DarkBishop,\n    CharacterClass.Bishop,\n]);\n_byCategory.set(CharacterClassGroup.Special, [\n    CharacterClass.Trickster,\n    CharacterClass.WarMonk,\n    CharacterClass.WarCleric,\n    CharacterClass.DarkFlier,\n    CharacterClass.Valkyrie,\n]);\n_byCategory.set(CharacterClassGroup.Master, [\n    CharacterClass.FalconKnight,\n    CharacterClass.WyvernLord,\n    CharacterClass.MortalSavant,\n    CharacterClass.GreatKnight,\n    CharacterClass.BowKnight,\n    CharacterClass.DarkKnight,\n    CharacterClass.HolyKnight,\n    CharacterClass.WarMaster,\n    CharacterClass.Gremory,\n]);\n_byCategory.set(CharacterClassGroup.Player, [\n    CharacterClass.EnlightenedOne,\n]);\n_byCategory.set(CharacterClassGroup.HouseLeader, [\n    CharacterClass.ArmoredLord,\n    CharacterClass.HighLord,\n    CharacterClass.WyvernMaster,\n    CharacterClass.Emperor,\n    CharacterClass.GreatLord,\n    CharacterClass.Barbarossa,\n]);\n_byCategory.set(CharacterClassGroup.Other, [\n    CharacterClass.DeathKnight,\n]);\n\nexport function getCharacterClassCategories() : Iterable<CharacterClassGroup>\n{\n    return _byCategory.keys();\n}\n\nexport function getCharacterClassesByCategory(category : CharacterClassGroup) : CharacterClass[]\n{\n    const classList = _byCategory.get(category);\n    if (classList === undefined)\n    {\n        throw new RangeError(`No class list found for category ${CharacterClassGroup[category]}`);\n    }\n    return classList;\n}","export default __webpack_public_path__ + \"static/media/class_bonus_stats.73a62dea.csv\";","export default __webpack_public_path__ + \"static/media/class_min_stats.f059bf17.csv\";","export default __webpack_public_path__ + \"static/media/class_growth_rates.1801c3b7.csv\";","export default __webpack_public_path__ + \"static/media/class_requirements.4f12d221.csv\";","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nexport interface FetchProvider\n{\n    fetch(location : string) : Promise<string>\n}\n\nexport const WebFetchProvider : FetchProvider = \n{\n    fetch : async (location : string) => {\n        const text = fetch(location).then(\n            response => response.text(),\n            failure => {throw new Error(failure);}\n        )\n\n        return text;\n    }\n}\n\nlet fetchImpl : FetchProvider = WebFetchProvider;\n\nexport function getFetchProvider() : FetchProvider\n{\n    return fetchImpl;\n}\n\nexport function useFetchProvider(f : FetchProvider) : void\n{\n    fetchImpl = f;\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { CharacterClass, getClassDisplayName, getClassFromDisplayName } from \"./CharacterClass\";\nimport { CharacterName, getCharacterFromDisplayName } from \"./CharacterName\";\nimport { ClassBaseStats, ClassBonusStats, StatArray, StatUpProbabilities } from \"../sim/StatArray\";\nimport { getCharacterTraits } from \"./CharacterData\";\nimport { CharacterGenders } from \"./CharacterTraits\";\nimport Papa from \"papaparse\";\n\nimport ClassBonusStatsFile from './class_bonus_stats.csv';\nimport ClassMinStatsFile from './class_min_stats.csv';\nimport ClassGrowthRatesFile from './class_growth_rates.csv';\nimport ClassRequirementsFile from './class_requirements.csv';\nimport { getFetchProvider } from \"./FetchProvider\";\n\nexport interface ClassRequirements\n{\n    level : number;\n    // Some classes are only available to specific genders, e.g. dark mage, pegasus knight\n    gender : CharacterGenders | null;\n    // Some classes are only available to specific characters.\n    characters : Set<CharacterName> | null;\n}\n\nexport interface ClassData\n{\n    requirements : ClassRequirements[];\n    baseStats : ClassBaseStats;\n    // Not caring about dismounted stats.\n    bonusStats : ClassBonusStats;\n}\n\nconst NobleBackgrounds = new Set<CharacterName>([\n    CharacterName.Edelgard,\n    CharacterName.Hubert,\n    CharacterName.Ferdinand,\n    CharacterName.Bernadetta,\n    CharacterName.Caspar,\n    CharacterName.Linhardt,\n\n    CharacterName.Dimitri,\n    CharacterName.Felix,\n    CharacterName.Annette,\n    CharacterName.Sylvain,\n    CharacterName.Ingrid,\n\n    CharacterName.Claude,\n    CharacterName.Lorenz,\n    CharacterName.Hilda,\n    CharacterName.Lysithea,\n    CharacterName.Marianne,\n\n    CharacterName.Seteth,\n    CharacterName.Flayn,\n    CharacterName.Hanneman,\n    CharacterName.Catherine,\n    CharacterName.Gilbert,\n    CharacterName.Alois,\n\n    CharacterName.Balthus,\n    CharacterName.Constance,\n\n    CharacterName.Jeritza\n]);\n\nconst CommonerBackgrounds = new Set<CharacterName>([\n    CharacterName.BylethMale,\n    CharacterName.BylethFemale,\n\n    CharacterName.Dorothea,\n    CharacterName.Petra,\n\n    CharacterName.Dedue,\n    CharacterName.Mercedes,\n    CharacterName.Ashe,\n\n    CharacterName.Raphael,\n    CharacterName.Ignatz,\n    CharacterName.Leonie,\n\n    CharacterName.Manuela,\n    CharacterName.Shamir,\n    CharacterName.Cyril,\n\n    CharacterName.Yuri,\n    CharacterName.Hapi,\n\n    CharacterName.Anna\n]);\n\nconst LordBackgrounds = new Set<CharacterName>([\n    CharacterName.Claude,\n    CharacterName.Dimitri,\n    CharacterName.Edelgard\n]);\n\nconst ProtagonistBackgrounds = new Set<CharacterName>([\n    CharacterName.BylethMale,\n    CharacterName.BylethFemale\n]);\n\n// Special groups of characters as shorthands in the class data files.\nconst CharacterGroups = new Map<string, Set<CharacterName>>();\nCharacterGroups.set(\"ProtagonistBackgrounds\", ProtagonistBackgrounds);\nCharacterGroups.set(\"LordBackgrounds\", LordBackgrounds);\nCharacterGroups.set(\"CommonerBackgrounds\", CommonerBackgrounds);\nCharacterGroups.set(\"NobleBackgrounds\", NobleBackgrounds);\n\n// Initialized with the loadClassData() method.\nconst ClassRequirementsMap = new Map<CharacterClass, ClassData>();\n\nexport function getClassGeneralData(characterClass : CharacterClass) : ClassData\n{\n    const data = ClassRequirementsMap.get(characterClass);\n    if (data === undefined)\n    {\n        throw new RangeError(`No class data found for class ${CharacterClass[characterClass]}`);\n    }\n    return data;\n}\n\nexport function hasClassGeneralData(characterClass : CharacterClass) : boolean\n{\n    return ClassRequirementsMap.has(characterClass);\n}\n\nfunction prob(growths : StatUpProbabilities)\n{\n    return growths.map((x) => x * 0.01) as StatUpProbabilities;\n}\n\n// Initialized with the loadClassData() method.\nconst ClassGrowths = new Map<CharacterClass, StatUpProbabilities>();\n\nexport function getClassGrowthRateMod(characterClass : CharacterClass) : StatUpProbabilities\n{\n    const growths = ClassGrowths.get(characterClass);\n    if (growths === undefined)\n    {\n        throw new RangeError(`No growth rates found for class ${CharacterClass[characterClass]}`);\n    }\n    return growths;\n}\n\nexport function getRequirementForCharacterAndClass(character : CharacterName, characterClass : CharacterClass) : ClassRequirements | undefined\n{\n    const requirements = getClassGeneralData(characterClass).requirements;\n\n    // Try to get the lowest level requirement compatible with the character.\n    const specificCharacterRequirements = requirements.filter(req => {\n        const matchOnGender = req.gender === null || req.gender === getCharacterTraits(character).gender;\n        const matchOnSpecificCharacter = req.characters === null || req.characters.has(character);\n        return matchOnGender && matchOnSpecificCharacter;\n    });\n\n    if (specificCharacterRequirements.length > 0)\n    {\n        return specificCharacterRequirements.reduce((x,y) => (x.level <= y.level ? x : y));\n    }\n    else\n    {\n        // None available\n        return undefined;\n    }\n}\n\n// ================= CHARACTER AND CLASS ELIGIBILITY =================\n\nexport function isCharacterEligibleForClass(characterClass : CharacterClass, character : CharacterName, level? : number) : boolean\n{\n    const requirements = getRequirementForCharacterAndClass(character, characterClass) as ClassRequirements;\n\n    if (requirements === undefined)\n    {\n        // If no requirements specified, assume data is incomplete and not usable.\n        return false;\n    }\n\n    if (requirements.characters === null || requirements.characters.has(character))\n    {\n        if (requirements.gender === null || requirements.gender === getCharacterTraits(character).gender)\n        {\n            if (level === undefined || requirements.level <= level)\n            {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nexport function getEligibleClasses(character : CharacterName, level? : number) : Set<CharacterClass>\n{\n    const eligibleClasses = new Set<CharacterClass>();\n\n    for (let i = 0; i < CharacterClass.End; i++)\n    {\n        const characterClass = i as CharacterClass;\n        const requirements = getRequirementForCharacterAndClass(character, characterClass);\n\n        if (requirements === undefined)\n        {\n            // If no candidate requirements, then we can't use this class.\n            // If no requirements period, then assume class is not eligible.\n            // Either way, this class isn't eligible.\n            continue;\n        }\n\n        if (requirements.characters === null || requirements.characters.has(character))\n        {\n            if (requirements.gender === null || requirements.gender === getCharacterTraits(character).gender)\n            {\n                if (level === undefined || requirements.level <= level)\n                {\n                    eligibleClasses.add(characterClass);\n                }\n            }\n        }\n    }\n\n    return eligibleClasses;\n}\n\n// ================= LOADING DATA FROM CSV FILES =================\n\nfunction zeroOrNumber(numberAsString : string) : number\n{\n    if (numberAsString.length === 0)\n    {\n        return 0;\n    }\n    else\n    {\n        return Number.parseInt(numberAsString);\n    }\n}\n\nconst StandardParseConfig = {\n    delimiter: ',',\n    newline: '\\n',\n    quoteChar: '\"',\n    escapeChar: '\"',\n    header: false,\n    dynamicTyping: false,\n    worker: false,\n    comments: true,\n    skipEmptyLines: true\n};\n\nasync function loadClassBonusStats(dataFile : string) : Promise<Map<CharacterClass,StatArray>>\n{\n    const fetchFunc = getFetchProvider().fetch;\n    const data = await fetchFunc(dataFile).then(text => text.replaceAll(\"\\r\\n\",\"\\n\"));\n\n    const bonusStats = new Map<CharacterClass,StatArray>();\n\n    // No schema validation because this data is not meant to be editable, not casually anyway, \n    // so the data file is considered code. Use unit tests to enforce schema compliance.\n    // But basic tolerances to deal with Excel's foibles in case they enter the picture.\n    const parseResult = Papa.parse(data, StandardParseConfig);\n    for (const row of (parseResult.data as Array<string[]>))\n    {\n        let className : CharacterClass = CharacterClass.End;\n        try\n        {\n            className = getClassFromDisplayName(row[0]);\n        }\n        catch (e)\n        {\n            // Rows of empty cells and invalid characters names will get ignored here.\n            if (row[0].length > 0)\n            {\n                console.log(`Bonus stats: failed to look up display name. ${row[0]}`);\n            }\n            \n            continue;\n        }\n\n        const statBonuses : StatArray = [\n            zeroOrNumber(row[1]),\n            zeroOrNumber(row[2]),\n            zeroOrNumber(row[3]),\n            zeroOrNumber(row[4]),\n            zeroOrNumber(row[5]),\n            zeroOrNumber(row[6]),\n            zeroOrNumber(row[7]),\n            zeroOrNumber(row[8]),\n            zeroOrNumber(row[9])\n        ];\n\n        bonusStats.set(className, statBonuses);\n    }\n\n    return bonusStats;\n}\n\nasync function loadClassMinStats(dataFile : string) : Promise<Map<CharacterClass,StatArray>>\n{\n    const fetchFunc = getFetchProvider().fetch;\n    const data = await fetchFunc(dataFile).then(text => text.replaceAll(\"\\r\\n\",\"\\n\"));\n\n    const minStats = new Map<CharacterClass,StatArray>();\n\n    // No schema validation because this data is not meant to be editable, not casually anyway, \n    // so the data file is considered code. Use unit tests to enforce schema compliance.\n    // But basic tolerances to deal with Excel's foibles in case they enter the picture.\n    const parseResult = Papa.parse(data, StandardParseConfig);\n    for (const row of (parseResult.data as Array<string[]>))\n    {\n        let className : CharacterClass = CharacterClass.End;\n        try\n        {\n            className = getClassFromDisplayName(row[0]);\n        }\n        catch (e)\n        {\n            // Rows of empty cells and invalid characters names will get ignored here.\n            if (row[0].length > 0)\n            {\n                console.log(`Base stats: failed to look up display name. ${row[0]}`);\n            }\n\n            continue;\n        }\n\n        const statLine : StatArray = [\n            zeroOrNumber(row[1]),\n            zeroOrNumber(row[2]),\n            zeroOrNumber(row[3]),\n            zeroOrNumber(row[4]),\n            zeroOrNumber(row[5]),\n            zeroOrNumber(row[6]),\n            zeroOrNumber(row[7]),\n            zeroOrNumber(row[8]),\n            zeroOrNumber(row[9])\n        ];\n\n        minStats.set(className, statLine);\n    }\n\n    return minStats;\n}\n\nexport async function loadClassGrowthRates(dataFile : string) : Promise<Map<CharacterClass,StatUpProbabilities>>\n{\n    const fetchFunc = getFetchProvider().fetch;\n    const data = await fetchFunc(dataFile).then(text => text.replaceAll(\"\\r\\n\",\"\\n\"));\n\n    const growths = new Map<CharacterClass,StatUpProbabilities>();\n\n    // No schema validation because this data is not meant to be editable, not casually anyway, \n    // so the data file is considered code. Use unit tests to enforce schema compliance.\n    // But basic tolerances to deal with Excel's foibles in case they enter the picture.\n    const parseResult = Papa.parse(data, StandardParseConfig);\n    for (const row of (parseResult.data as Array<string[]>))\n    {\n        let className : CharacterClass = CharacterClass.End;\n        try\n        {\n            className = getClassFromDisplayName(row[0]);\n        }\n        catch (e)\n        {\n            // Rows of empty cells and invalid characters names will get ignored here.\n            if (row[0].length > 0)\n            {\n                console.log(`Growth rates: failed to look up display name. ${row[0]}`);\n            }\n\n            continue;\n        }\n\n        const growthRates : StatUpProbabilities = prob([\n            zeroOrNumber(row[1]),\n            zeroOrNumber(row[2]),\n            zeroOrNumber(row[3]),\n            zeroOrNumber(row[4]),\n            zeroOrNumber(row[5]),\n            zeroOrNumber(row[6]),\n            zeroOrNumber(row[7]),\n            zeroOrNumber(row[8]),\n            zeroOrNumber(row[9])\n        ]);\n\n        growths.set(className, growthRates);\n    }\n\n    return growths;\n}\n\nfunction parseGenderRequirement(genderInTable : string) : CharacterGenders | null\n{\n    if (genderInTable.startsWith(\"m\"))\n    {\n        return \"male\";\n    }\n    else if (genderInTable.startsWith(\"f\"))\n    {\n        return \"female\";\n    }\n    else\n    {\n        return null;\n    }\n}\n\nfunction parseCharacterRequirement(charactersString : string) : Set<CharacterName> | null\n{\n    if (charactersString.length === 0)\n    {\n        return null;\n    }\n\n    const characterGroupLookup = CharacterGroups.get(charactersString);\n\n    if (characterGroupLookup !== undefined)\n    {\n        return characterGroupLookup;\n    }\n\n    try\n    {\n        const specificCharacterLookup = getCharacterFromDisplayName(charactersString);\n        return new Set<CharacterName>([specificCharacterLookup]);\n    }\n    catch\n    {\n        // Failed to find specific character\n        console.log(`Failed to match required character string \"${charactersString}\" to character set.`);\n    }\n    \n    return null;\n}\n\nexport async function loadClassRequirements(dataFile : string) : Promise<Map<CharacterClass,ClassRequirements[]>>\n{\n    const fetchFunc = getFetchProvider().fetch;\n    const data = await fetchFunc(dataFile).then(text => text.replaceAll(\"\\r\\n\",\"\\n\"));\n\n    const requirementsMap = new Map<CharacterClass,ClassRequirements[]>();\n\n    // No schema validation because this data is not meant to be editable, not casually anyway, \n    // so the data file is considered code. Use unit tests to enforce schema compliance.\n    // But basic tolerances to deal with Excel's foibles in case they enter the picture.\n    const parseResult = Papa.parse(data, StandardParseConfig);\n    for (const row of (parseResult.data as Array<string[]>))\n    {\n        let className : CharacterClass = CharacterClass.End;\n        try\n        {\n            className = getClassFromDisplayName(row[0]);\n        }\n        catch (e)\n        {\n            // Rows of empty cells and invalid characters names will get ignored here.\n            if (row[0].length > 0)\n            {\n                console.log(`Class requirements: failed to look up display name. ${row[0]}`);\n            }\n            continue;\n        }\n\n        const requirements : ClassRequirements = {\n            level : Number.parseInt(row[1]),\n            gender : parseGenderRequirement(row[2]),\n            characters : parseCharacterRequirement(row[3])\n        };\n        \n        if (!requirementsMap.has(className))\n        {\n            requirementsMap.set(className, []);\n        }\n\n        // Elide the \"undefined\" because the line above ensures the entry exists.\n        const bucket = requirementsMap.get(className) as ClassRequirements[];\n        bucket.push(requirements);\n    }\n\n    return requirementsMap;\n}\n\nexport async function loadClassData() : Promise<void>\n{\n    const bonusStatMap = await loadClassBonusStats(ClassBonusStatsFile);\n    //console.log(bonusStatMap);\n\n    const minStatMap = await loadClassMinStats(ClassMinStatsFile);\n    //console.log(minStatMap);\n\n    const growthRateMap = await loadClassGrowthRates(ClassGrowthRatesFile);\n    //console.log(growthRateMap);\n\n    const requirementsMap = await loadClassRequirements(ClassRequirementsFile);\n    //console.log(requirementsMap);\n\n    // Now assemble the tables\n    for (let i = 0; i < CharacterClass.End; i++)\n    {\n        const characterClass = i as CharacterClass;\n\n        const bonusStats = bonusStatMap.get(characterClass);\n        const minStats = minStatMap.get(characterClass);\n        const requirements = requirementsMap.get(characterClass);\n        const growthRates = growthRateMap.get(characterClass);\n\n        if (bonusStats === undefined || minStats === undefined || requirements === undefined || growthRates === undefined)\n        {\n            // Single class short on some data\n            console.log(`Class ${getClassDisplayName(characterClass)} missing some data. `\n                + `Bonus Stats: ${bonusStats !== undefined}, Min Stats: ${minStats === undefined}, `\n                + `Requirements: ${requirements === undefined}, Growth Rates: ${growthRates === undefined}`);\n        }\n\n        if (bonusStats !== undefined && minStats !== undefined && requirements !== undefined)\n        {\n            ClassRequirementsMap.set(characterClass, {\n                baseStats: minStats,\n                bonusStats: bonusStats,\n                requirements: requirements\n            });\n        }\n\n        if (growthRates !== undefined)\n        {\n            ClassGrowths.set(characterClass, growthRates);\n        }\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { CharacterName, getCharacterFromDisplayName } from \"./CharacterName\";\nimport Papa from \"papaparse\";\nimport { getFetchProvider } from \"./FetchProvider\";\n\n// There are no non-binary recruitable characters. Byleth can be either\n// gender, represented as two different characters in the names list.\nexport type CharacterGenders = \"male\" | \"female\";\n\nexport interface Traits \n{\n    gender : CharacterGenders;\n    isStudent : boolean;\n};\n\nexport const CharacterTraits = new Map<CharacterName, Traits>();\n\nexport async function loadCharacterTraitsFromDataFile(dataFile : string) : Promise<void>\n{\n    const fetchFunc = getFetchProvider().fetch;\n    const data = await fetchFunc(dataFile).then(text => text.replaceAll(\"\\r\\n\",\"\\n\"));\n\n    const parseConfig = {\n        delimiter: ',',\n        newline: '\\n',\n        quoteChar: '\"',\n        escapeChar: '\"',\n        header: false,\n        dynamicTyping: false,\n        worker: false,\n        comments: true,\n        skipEmptyLines: true\n    };\n\n    // No schema validation because this data is not meant to be editable, not casually anyway, \n    // so the data file is considered code. Use unit tests to enforce schema compliance.\n    // But basic tolerances to deal with Excel's foibles in case they enter the picture.\n    const parseResult = Papa.parse(data, parseConfig);\n    for (const row of (parseResult.data as Array<string[]>))\n    {\n        let characterName : CharacterName = CharacterName.End;\n        try\n        {\n            characterName = getCharacterFromDisplayName(row[0]);\n        }\n        catch (e)\n        {\n            // Rows of empty cells and invalid characters names will get ignored here.\n            continue;\n        }\n\n        const gender : CharacterGenders = row[1].startsWith(\"m\") ? \"male\" : \"female\";\n        const isStudent : boolean = row[2].startsWith(\"t\");\n        CharacterTraits.set(characterName, {gender: gender, isStudent: isStudent});\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { StatUpProbabilities } from \"../sim/StatArray\";\nimport { CharacterName, getCharacterFromDisplayName } from \"./CharacterName\";\nimport Papa from \"papaparse\";\nimport { getFetchProvider } from \"./FetchProvider\";\n\nfunction prob(growths : StatUpProbabilities) : StatUpProbabilities\n{\n    return growths.map((x) => x * 0.01) as StatUpProbabilities;\n}\n\nexport const GrowthRates = new Map<CharacterName, StatUpProbabilities>();\n\nexport async function loadCharacterGrowthsFromDataFile(dataFile : string) : Promise<void>\n{\n    const fetchFunc = getFetchProvider().fetch;\n    const data = await fetchFunc(dataFile).then(text => text.replaceAll(\"\\r\\n\",\"\\n\"));\n\n    const parseConfig = {\n        delimiter: ',',\n        newline: '', // autodetect\n        quoteChar: '\"',\n        escapeChar: '\"',\n        header: false,\n        dynamicTyping: false,\n        worker: false,\n        comments: true,\n        skipEmptyLines: true\n    };\n\n    // No schema validation because this data is not meant to be editable, not casually anyway, \n    // so the data file is considered code. Use unit tests to enforce schema compliance.\n    // But basic tolerances to deal with Excel's foibles in case they enter the picture.\n    const parseResult = Papa.parse(data, parseConfig);\n    for (const row of (parseResult.data as Array<string[]>))\n    {\n        let characterName : CharacterName = CharacterName.End;\n        try\n        {\n            characterName = getCharacterFromDisplayName(row[0]);\n        }\n        catch (e)\n        {\n            // Rows of empty cells and invalid characters names will get ignored here.\n            continue;\n        }\n\n        const growths = prob([\n            Number.parseInt(row[1]),\n            Number.parseInt(row[2]),\n            Number.parseInt(row[3]),\n            Number.parseInt(row[4]),\n            Number.parseInt(row[5]),\n            Number.parseInt(row[6]),\n            Number.parseInt(row[7]),\n            Number.parseInt(row[8]),\n            Number.parseInt(row[9])\n        ]);\n        \n        GrowthRates.set(characterName, growths);\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { StatArray } from \"../sim/StatArray\";\nimport { CharacterName, getCharacterFromDisplayName } from \"./CharacterName\";\nimport Papa from \"papaparse\";\nimport { getFetchProvider } from \"./FetchProvider\";\n\nexport const CharacterMaxStats = new Map<CharacterName, StatArray>();\n\nexport async function loadCharacterMaxStatsFromDataFile(dataFile : string) : Promise<void>\n{\n    const fetchFunc = getFetchProvider().fetch;\n    const data = await fetchFunc(dataFile).then(text => text.replaceAll(\"\\r\\n\",\"\\n\"));\n\n    const parseConfig = {\n        delimiter: ',',\n        newline: '', // autodetect\n        quoteChar: '\"',\n        escapeChar: '\"',\n        header: false,\n        dynamicTyping: false,\n        worker: false,\n        comments: true,\n        skipEmptyLines: true\n    };\n\n    // No schema validation because this data is not meant to be editable, not casually anyway, \n    // so the data file is considered code. Use unit tests to enforce schema compliance.\n    // But basic tolerances to deal with Excel's foibles in case they enter the picture.\n    const parseResult = Papa.parse(data, parseConfig);\n    for (const row of (parseResult.data as Array<string[]>))\n    {\n        let characterName : CharacterName = CharacterName.End;\n        try\n        {\n            characterName = getCharacterFromDisplayName(row[0]);\n        }\n        catch (e)\n        {\n            // Rows of empty cells and invalid characters names will get ignored here.\n            continue;\n        }\n\n        const statMaxes : StatArray = [\n            Number.parseInt(row[1]),\n            Number.parseInt(row[2]),\n            Number.parseInt(row[3]),\n            Number.parseInt(row[4]),\n            Number.parseInt(row[5]),\n            Number.parseInt(row[6]),\n            Number.parseInt(row[7]),\n            Number.parseInt(row[8]),\n            Number.parseInt(row[9])\n        ];\n        \n        CharacterMaxStats.set(characterName, statMaxes);\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport Papa from \"papaparse\";\nimport { StartingStats, StatArray } from \"../sim/StatArray\";\nimport { CharacterClass, getClassFromDisplayName } from \"./CharacterClass\";\nimport { CharacterName, getCharacterFromDisplayName } from \"./CharacterName\";\nimport { getFetchProvider } from \"./FetchProvider\";\n\nexport interface CharacterInitialData\n{\n    level : number;\n    class : CharacterClass;\n    // These are expected to be the composite stats, not the base stats.\n    // In other words, these stats are class-dependent.\n    stats : StartingStats;\n    title? : string;\n}\n\n// Shortcuts for players to load common stat blocks, typically known values for recruitment\nexport const CharacterPresets = new Map<CharacterName, Array<CharacterInitialData>>();\n\nexport async function loadCharacterPresetsFromDataFile(dataFile : string) : Promise<void>\n{\n    const fetchFunc = getFetchProvider().fetch;\n    const data = await fetchFunc(dataFile).then(text => text.replaceAll(\"\\r\\n\",\"\\n\"));\n\n    const parseConfig = {\n        delimiter: ',',\n        newline: '', // autodetect\n        quoteChar: '\"',\n        escapeChar: '\"',\n        header: false,\n        dynamicTyping: false,\n        worker: false,\n        comments: true,\n        skipEmptyLines: true\n    };\n\n    // No schema validation because this data is not meant to be editable, not casually anyway, \n    // so the data file is considered code. Use unit tests to enforce schema compliance.\n    // But basic tolerances to deal with Excel's foibles in case they enter the picture.\n    const parseResult = Papa.parse(data, parseConfig);\n    for (const row of (parseResult.data as Array<string[]>))\n    {\n        let characterName : CharacterName = CharacterName.End;\n        try\n        {\n            characterName = getCharacterFromDisplayName(row[0]);\n        }\n        catch (e)\n        {\n            // Rows of empty cells and invalid characters names will get ignored here.\n            continue;\n        }\n\n        const level : number = Number.parseInt(row[1]);\n        const characterClass : CharacterClass = getClassFromDisplayName(row[2]);\n        const statLine : StatArray = [\n            Number.parseInt(row[3]),\n            Number.parseInt(row[4]),\n            Number.parseInt(row[5]),\n            Number.parseInt(row[6]),\n            Number.parseInt(row[7]),\n            Number.parseInt(row[8]),\n            Number.parseInt(row[9]),\n            Number.parseInt(row[10]),\n            Number.parseInt(row[11])\n        ];\n        const title : string = row[12];\n        \n        if (!CharacterPresets.has(characterName))\n        {\n            CharacterPresets.set(characterName, []);\n        }\n\n        // can ignore null case because of the previous condition\n        const presetList = CharacterPresets.get(characterName) as CharacterInitialData[];\n        presetList.push({\n            level: level,\n            class: characterClass,\n            stats: statLine,\n            title: title\n        });\n    }\n}\n","export default __webpack_public_path__ + \"static/media/character_traits.918f2cd0.csv\";","export default __webpack_public_path__ + \"static/media/character_growth_rates.adf11c0c.csv\";","export default __webpack_public_path__ + \"static/media/character_max_stats.ebd6b9f7.csv\";","export default __webpack_public_path__ + \"static/media/character_presets.20dafe28.csv\";","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { CharacterName } from \"./CharacterName\";\nimport { iCHA, iDEF, iDEX, iLCK, iMAG, iRES, iSPD, iSTR, StatArray, StatUpProbabilities, subtractStats } from \"../sim/StatArray\";\nimport { CharacterClass } from \"./CharacterClass\";\nimport { getClassGeneralData } from \"./ClassData\";\nimport { CharacterTraits, loadCharacterTraitsFromDataFile, Traits } from \"./CharacterTraits\";\nimport { GrowthRates, loadCharacterGrowthsFromDataFile } from \"./CharacterGrowths\";\nimport { CharacterMaxStats, loadCharacterMaxStatsFromDataFile } from \"./CharacterMaxStats\";\nimport { CharacterInitialData, CharacterPresets, loadCharacterPresetsFromDataFile } from \"./CharacterPresets\";\n\nimport CharacterTraitsFile from \"./character_traits.csv\";\nimport CharacterGrowthsFile from \"./character_growth_rates.csv\";\nimport CharacterMaxStatsFile from \"./character_max_stats.csv\";\nimport CharacterPresetsFile from \"./character_presets.csv\";\n\nexport const CHARACTER_MAX_LEVEL = 99;\n\nexport function getCharacterTraits(name : CharacterName) : Traits\n{\n    const traits = CharacterTraits.get(name);\n    if (traits === undefined)\n    {\n        throw new RangeError(`No character traits entry for ${CharacterName[name]}`);\n    }\n    return traits;\n}\n\nexport function getCharacterBaseGrowths(name : CharacterName) : StatUpProbabilities\n{\n    const growths = GrowthRates.get(name);\n    if (growths === undefined)\n    {\n        throw new RangeError(`Base growth rates not found for ${CharacterName[name]}`);\n    }\n    return growths;\n}\n\nexport interface StatLimitMods\n{\n    StrAndSpdUp : boolean; // Statue of Cichol\n    LckAndChaUp : boolean; // Statue of Cethleann\n    MagAndDexUp : boolean; // Statue of Macuil\n    DefAndResUp : boolean; // Statue of Indech\n}\n\nexport function getDefaultStatModSetting()\n{\n    // Default to all true because stat caps are generally uninteresting for playthroughs, \n    // and also most people using this at this point are probably veteran players.\n    return {\n        StrAndSpdUp: true,\n        LckAndChaUp: true,\n        MagAndDexUp: true,\n        DefAndResUp: true\n    };\n}\n\nexport function getCharacterMaxBaseStats(character : CharacterName, mods? : StatLimitMods)\n{\n    const maybeMaxStats = CharacterMaxStats.get(character);\n    if (maybeMaxStats === undefined)\n    {\n        throw new RangeError(\"Character max stats not found.\");\n    }\n\n    const maxStats = [...maybeMaxStats] as StatArray;\n    if (mods?.StrAndSpdUp === true)\n    {\n        maxStats[iSTR] += 5;\n        maxStats[iSPD] += 5;\n    }\n\n    if (mods?.LckAndChaUp === true)\n    {\n        maxStats[iLCK] += 5;\n        maxStats[iCHA] += 5;\n    }\n\n    if (mods?.MagAndDexUp === true)\n    {\n        maxStats[iMAG] += 5;\n        maxStats[iDEX] += 5;\n    }\n\n    if (mods?.DefAndResUp === true)\n    {\n        maxStats[iDEF] += 5;\n        maxStats[iRES] += 5;\n    }\n\n    return maxStats;\n}\n\n\n// Handles case where no mod is equivalent to all false\nexport function areEquivalentStatLimitMods(left? : StatLimitMods, right? : StatLimitMods) : boolean\n{\n    return !!(left?.StrAndSpdUp) === !!(right?.StrAndSpdUp)\n        && !!(left?.LckAndChaUp) === !!(right?.LckAndChaUp)\n        && !!(left?.MagAndDexUp) === !!(right?.MagAndDexUp)\n        && !!(left?.DefAndResUp) === !!(right?.DefAndResUp);\n}\n\nexport function getCharacterInitialPresets(name : CharacterName) : CharacterInitialData[]\n{\n    return CharacterPresets.get(name) ?? [];\n}\n\nexport function getBaseStatsFromClassStats(stats : StatArray, characterClass : CharacterClass)\n{\n    const classData = getClassGeneralData(characterClass);\n    const boost = classData.bonusStats;\n    return subtractStats(stats, boost);\n}\n\nexport function getCharactersWithDefinedData() : Set<CharacterName>\n{\n    const charactersWithData : CharacterName[] = [];\n\n    for (let i = 0; i < CharacterName.End; i++)\n    {\n        const c = i as CharacterName;\n        if (CharacterTraits.has(c) && CharacterMaxStats.has(c) && GrowthRates.has(c))\n        {\n            charactersWithData.push(c);\n        }\n    }\n\n    return new Set(charactersWithData);\n}\n\nexport async function loadCharacterData() : Promise<void>\n{\n    await loadCharacterTraitsFromDataFile(CharacterTraitsFile);\n    await loadCharacterGrowthsFromDataFile(CharacterGrowthsFile);\n    await loadCharacterMaxStatsFromDataFile(CharacterMaxStatsFile);\n    await loadCharacterPresetsFromDataFile(CharacterPresetsFile);\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nexport interface IStorageProvider\n{\n    setItem(key: string, item: string) : void;\n    getItem(key: string) : string | null;\n    clear() : void;\n}\n\n// Redirects storage calls into a sub-oject in the storage provider.\nexport class NestedStorageProvider implements IStorageProvider\n{\n    private subKey : string;\n    private rootProvider : IStorageProvider;\n    private obj : {[key: string] : string};\n\n    constructor(key : string, rootStorageProvider : IStorageProvider)\n    {\n        this.subKey = key;\n        this.rootProvider = rootStorageProvider;\n        \n        // Load the object from store.\n        const fromStore = rootStorageProvider.getItem(this.subKey);\n        if (fromStore === null)\n        {\n            this.obj = {};\n        }\n        else\n        {\n            this.obj = JSON.parse(fromStore);\n        }\n    }\n\n    public setItem(key: string, item: string) : void\n    {\n        this.obj[key] = item;\n        this.rootProvider.setItem(this.subKey, JSON.stringify(this.obj));\n    }\n\n    public getItem(key: string) : string | null\n    {\n        if (key in this.obj)\n        {\n            return this.obj[key];\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    public clear() : void\n    {\n        this.obj = {};\n        this.rootProvider.setItem(this.subKey, JSON.stringify(this.obj));\n    }\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nexport interface ColorScheme\n{\n    baseColor: string;\n    baseHighlightColor: string;\n\n    medianValueColor: string;\n    medianValueHighlightColor: string;\n\n    // If the user chooses to set a reference point for \"how is my character doing?\"\n    referenceValueColor: string;\n    referenceValueHighlightColor: string;\n}\n\n// Used for styling various data series.\nexport const SERIES_COLOR_SCHEMES: Array<ColorScheme> = [\n    {\n        baseColor: \"#d34747\",\n        baseHighlightColor: \"#f28282\",\n        medianValueColor: \"#c11e1e\",\n        medianValueHighlightColor: \"#f28282\",\n        referenceValueColor: \"#a70303\",\n        referenceValueHighlightColor: \"#c11e1e\",\n    },\n    {\n        baseColor: \"#404094\",\n        baseHighlightColor: \"#6666a8\",\n        medianValueColor: \"#262687\",\n        medianValueHighlightColor: \"#6666a8\",\n        referenceValueColor: \"#131375\",\n        referenceValueHighlightColor: \"#262687\",\n    },\n    {\n        baseColor: \"#248924\",\n        baseHighlightColor: \"#469b46\",\n        medianValueColor: \"#0c780c\",\n        medianValueHighlightColor: \"#469b46\",\n        referenceValueColor: \"#006500\",\n        referenceValueHighlightColor: \"#0c780c\",\n    }\n];","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { CharacterClass, getStartingClasses } from \"../data/CharacterClass\";\nimport { getCharacterInitialPresets, getDefaultStatModSetting } from \"../data/CharacterData\";\nimport { CharacterName } from \"../data/CharacterName\";\nimport { CharacterInitialData } from \"../data/CharacterPresets\";\nimport { ClassData, ClassRequirements, getClassGeneralData, getEligibleClasses, getRequirementForCharacterAndClass } from \"../data/ClassData\";\nimport { CharacterProfile } from \"./CharacterProfile\";\n\nfunction getDefaultCharacterName() : CharacterName\n{\n    // We're just going to hardcode the default, but let's explicitly not default to a specific gender.\n    if (Math.random() < 0.5)\n    {\n        return CharacterName.BylethMale;\n    }\n    else\n    {\n        return CharacterName.BylethFemale;\n    }\n}\n\nexport class NoValidDefaultClassError extends Error\n{\n    //constructor(message : string)\n    //{\n    //    super(message);\n    //}\n}\n\nfunction getCharacterDefaultGenericClass(character : CharacterName, level : number) : CharacterClass\n{\n    const eligibleClasses = getEligibleClasses(character, level);\n    \n    if (eligibleClasses.size === 0)\n    {\n        throw new NoValidDefaultClassError(`Character has no eligible classes at level ${level}`);\n    }\n\n    const starterClasses = getStartingClasses();\n    const baseClasses = Array.from(eligibleClasses).filter(c => starterClasses.has(c));\n    if (baseClasses.length > 0)\n    {\n        // If there's a commoner or noble class then use that.\n        return baseClasses[0];\n    }\n    else\n    {\n        // Otherwise use one of the classes with the lowest level requirement, which more or less means \"Dancer\".\n        const classList = Array.from(eligibleClasses).map(c => [c, getClassGeneralData(c)] as [CharacterClass, ClassData]);\n        classList.sort((a, b) => {\n            // Can elide the \"undefined\" return value because we know the character is eligible, which\n            // only happens if matching requirements exist.\n            const aReq = getRequirementForCharacterAndClass(character, a[0]) as ClassRequirements;\n            const bReq = getRequirementForCharacterAndClass(character, b[0]) as ClassRequirements;\n            return aReq.level - bReq.level;\n        });\n        return classList[0][0];\n    }\n}\n\nfunction getDefaultCharacterInitialData(character : CharacterName) : CharacterInitialData\n{\n    const presets = getCharacterInitialPresets(character);\n\n    if (presets.length > 0)\n    {\n        // If there's existing initial data then use the lowest level one, and if there are multiple\n        // then use whatever of the lowest level.\n        const presetsCopy = [...presets];\n        presetsCopy.sort((a, b) => a.level - b.level);\n        return presetsCopy[0];\n    }\n    else\n    {\n        // If there isn't, then we make some shit up.\n        return {\n            level: 1,\n            class: getCharacterDefaultGenericClass(character, 1),\n            stats: [25, 5, 5, 5, 5, 5, 5, 5, 5]\n        };\n    }\n\n}\n\n// This is non-trivial because we are selecting \"firsts\" for every value but we must select valid values,\n// and they must be internally consistent.\nexport function createDefaultEmptyCharacterProfile() : CharacterProfile\n{\n    const characterName = getDefaultCharacterName();\n    const initialData = getDefaultCharacterInitialData(characterName);\n    const endLevel = Math.max(30, initialData.level);\n    const maxStatMods = getDefaultStatModSetting();\n\n    return {\n        character : characterName,\n        startLevel : initialData.level,\n        startClass : initialData.class,\n        startStats : initialData.stats,\n        changes : [],\n        endLevel : endLevel,\n        maxStatMods : maxStatMods\n    };\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { StatDistributionsByLevel } from \"../sim/GrowthResultAccumulator\";\nimport { StatArray, zeroStats } from \"../sim/StatArray\";\nimport { IStorageProvider, NestedStorageProvider } from \"../storage/NestedStorageProvider\";\nimport { SERIES_COLOR_SCHEMES } from \"../ui/ChartColorScheme\";\nimport { CharacterProfile } from \"./CharacterProfile\";\nimport { createDefaultEmptyCharacterProfile } from \"./Defaults\";\n\nexport const INVALID_PAGE_LISTENER_HANDLE : number = -1;\nconst FIRST_PAGE_LISTENER_HANDLE : number = 0;\n\nexport interface AnalysisComponent\n{\n    profile : CharacterProfile;\n    result : StatDistributionsByLevel;\n}\n\nexport interface AnalysisReport\n{\n    // Cache profiles used for analysis so that report can be kept separately.\n    components : AnalysisComponent[];\n    cacheToken : number;\n}\n\nexport interface PageData\n{\n    // Might need to swap this for a UI type that allows invalid UI selections\n    profiles : CharacterProfile[];\n\n    referenceStats : StatArray;\n\n    report : AnalysisReport | null;\n}\n\nexport class MaxCharacterProfileCountError extends Error\n{\n    public constructor(message : string)\n    {\n        super(message);\n    }\n}\n\nexport type PageCallback = (page : number, data : PageData) => void;\n\nexport interface IPageManager\n{\n    getPages() : Set<number>;\n    hasPage(page : number) : boolean;\n    createNewPage(page : number) : void;\n    deletePage(page : number) : void;\n\n    newProfile(page : number) : void;\n    deleteProfile(page : number, index : number) : void;\n    updateProfile(page : number, index : number, profile : CharacterProfile) : void;\n    updateAnalysis(page : number, report : AnalysisReport | null) : void;\n    // updateReferenceStats(page : number, stats : StatArray) : void;\n\n    getPageData(page : number) : PageData;\n\n    addPageListener(page : number, callback : PageCallback) : number;\n    removePageListener(page : number, handle : number) : void;\n}\n\nfunction createNewPageData() : PageData\n{\n    return {\n        profiles : [createDefaultEmptyCharacterProfile()],\n        referenceStats : zeroStats(),\n        report : null\n    };\n}\n\nfunction getMaxProfileCount() : number\n{\n    return SERIES_COLOR_SCHEMES.length;\n}\n\nclass PageManager implements IPageManager\n{\n    private storageProvider : IStorageProvider;\n    private pages : Map<number, PageData>;\n    private listeners : Map<number, Map<number, PageCallback>>;\n    private listenerCounter : number;\n    private pageListChangeCallback : () => void;\n\n    public constructor(rootStorageProvider : IStorageProvider, pageListChangeCallback : () => void)\n    {\n        this.storageProvider = new NestedStorageProvider(\"pages\", rootStorageProvider);\n        this.pages = new Map<number, PageData>();\n        this.listeners = new Map<number, Map<number, PageCallback>>();\n        this.listenerCounter = FIRST_PAGE_LISTENER_HANDLE;\n        this.pageListChangeCallback = pageListChangeCallback;\n    }\n\n    //\n    // Page Management\n    //\n\n    public getPages() : Set<number>\n    {\n        return new Set(this.pages.keys());\n    }\n\n    public hasPage(page : number) : boolean\n    {\n        return this.pages.has(page);\n    }\n\n    public createNewPage(page : number)\n    {\n        if (this.pages.has(page))\n        {\n            throw new RangeError(\"Cannot create new page against an existing page number.\")\n        }\n\n        this.pages.set(page, createNewPageData());\n        this.pageListChangeCallback();\n    }\n\n    public deletePage(page : number)\n    {\n        if (this.pages.has(page))\n        {\n            this.pages.delete(page);\n        }\n        this.pageListChangeCallback();\n    }\n\n    public newProfile(page : number) : void\n    {\n        if (!this.pages.has(page))\n        {\n            throw new RangeError(`Cannot find page data for page number ${page}`);\n        }\n\n        // Can hide the undefined value because of the check above.\n        const pageData = this.pages.get(page) as PageData;\n\n        if (pageData.profiles.length >= getMaxProfileCount())\n        {\n            throw new MaxCharacterProfileCountError(\"Cannot add more profiles because profile limit has been reached.\");\n        }\n\n        const newPageData : PageData = {\n            profiles : [...pageData.profiles, createDefaultEmptyCharacterProfile()],\n            referenceStats : zeroStats(),\n            report : pageData.report\n        };\n        this.pages.set(page, newPageData);\n        \n        this.onPageUpdate(page);\n    }\n\n    public deleteProfile(page : number, index : number)\n    {\n        if (!this.pages.has(page))\n        {\n            throw new RangeError(`Cannot find page data for page number ${page}`);\n        }\n\n        // Can hide the undefined value because of the check above.\n        const pageData = this.pages.get(page) as PageData;\n\n        if (index >= pageData.profiles.length || index < 0)\n        {\n            throw new RangeError(`Profile index ${index} is outside range of profiles array.`);\n        }\n\n        const newProfileList = [...pageData.profiles];\n        newProfileList.splice(index, 1);\n        const newPageData : PageData = {\n            profiles : newProfileList,\n            referenceStats : pageData.referenceStats,\n            report : pageData.report\n        };\n        this.pages.set(page, newPageData);\n        \n        this.onPageUpdate(page);\n    }\n\n    public updateProfile(page : number, index : number, profile : CharacterProfile) : void\n    {\n        if (!this.pages.has(page))\n        {\n            throw new RangeError(`Cannot find page data for page number ${page}`);\n        }\n\n        // Can hide the undefined value because of the check above.\n        const pageData = this.pages.get(page) as PageData;\n\n        if (index >= pageData.profiles.length || index < 0)\n        {\n            throw new RangeError(`Profile index ${index} is outside range of profiles array.`);\n        }\n\n        const newProfileList = [...pageData.profiles];\n        newProfileList[index] = profile;\n        const newPageData : PageData = {\n            profiles : newProfileList,\n            referenceStats : pageData.referenceStats,\n            report : pageData.report\n        };\n        this.pages.set(page, newPageData);\n        \n        this.onPageUpdate(page);\n    }\n\n    public updateAnalysis(page : number, report : AnalysisReport | null) : void\n    {\n        if (!this.pages.has(page))\n        {\n            throw new RangeError(`Cannot find page data for page number ${page}`);\n        }\n\n        // Can hide the undefined value because of the check above.\n        const pageData = this.pages.get(page) as PageData;\n        const newPageData : PageData = {\n            profiles : pageData.profiles,\n            referenceStats : pageData.referenceStats,\n            report : report\n        };\n        this.pages.set(page, newPageData);\n        \n        this.onPageUpdate(page);\n    }\n\n    // public updateReferenceStats(page : number, stats : StatArray) : void\n    // {\n    //     if (!this.pages.has(page))\n    //     {\n    //         throw new RangeError(`Cannot find page data for page number ${page}`);\n    //     }\n\n    //     const pageData = this.pages.get(page) as PageData;\n    //     const newPageData : PageData = {\n    //         profiles : pageData.profiles,\n    //         referenceStats : stats,\n    //         report : pageData.report\n    //     };\n\n    //     this.pages.set(page, newPageData);\n        \n    //     this.onPageUpdate(page);\n    // }\n\n    public getPageData(page : number) : PageData\n    {\n        if (!this.pages.has(page))\n        {\n            throw new RangeError(`Cannot find page data for page number ${page}`);\n        }\n        \n        // Can hide the undefined value because of the check above.\n        return this.pages.get(page) as PageData;\n    }\n\n    public addPageListener(page : number, callback : PageCallback) : number\n    {\n        if (!this.listeners.has(page))\n        {\n            this.listeners.set(page, new Map<number, PageCallback>());\n        }\n\n        // Safe to hide null because statement above guarantees the value.\n        const pageListeners = this.listeners.get(page) as Map<number, PageCallback>;\n\n        const newHandle = this.getNewPageListenerHandle();\n        pageListeners.set(newHandle, callback);\n        return newHandle;\n    }\n\n    public removePageListener(page : number, handle : number) : void\n    {\n        this.listeners.get(page)?.delete(handle);\n    }\n\n    private getNewPageListenerHandle() : number\n    {\n        const handleValue = this.listenerCounter;\n        this.listenerCounter++;\n        return handleValue;\n    }\n\n    private onPageUpdate(page : number) : void\n    {\n        if (this.listeners.has(page))\n        {\n            const listeners = this.listeners.get(page) as Map<number, PageCallback>;\n            if (this.pages.has(page))\n            {\n                const pageData = this.pages.get(page) as PageData;\n                for (const listener of listeners.values())\n                {\n                    listener(page, pageData);\n                }\n            }\n        }\n    }\n}\n\nexport function createPageManager(rootStorageProvider : IStorageProvider,\n    pageListChangeCallback : () => void) : IPageManager\n{\n    return new PageManager(rootStorageProvider, pageListChangeCallback);\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\n// Essentially acts as the overall app state with accessor/mutator functions.\n\nimport React from \"react\";\nimport { IStorageProvider } from \"../storage/NestedStorageProvider\";\nimport { createAnalysisResultCache, IAnalysisResultCache } from \"./AnalysisResultCache\";\nimport { createPageManager, IPageManager } from \"./PageManager\";\n\nexport interface IAppContextValue\n{\n    // This should change with every change.\n    modCounter : number;\n\n    // These are persistent refs to singleton complex objects.\n    pageManager : IPageManager;\n    analysisCache : IAnalysisResultCache;\n}\n\nexport interface IAppContext\n{\n    // Notifies of value changes.\n    setValueChangedCallback(callback : (v : IAppContextValue) => void) : void;\n    readonly currentValue : IAppContextValue;\n    readonly Context : React.Context<IAppContextValue>;\n}\n\n// Page order is responsibility of owner to sort out and render. This is just data.\nclass AppContext implements IAppContext\n{\n    private modCount : number;\n    private pageManager : IPageManager;\n    private analysisResultCache : IAnalysisResultCache;\n    private contextInstance : React.Context<IAppContextValue>;\n    private _currentValue : IAppContextValue;\n\n    private valueCallback : (v : IAppContextValue) => void;\n\n    constructor(rootStorageProvider : IStorageProvider)\n    {\n        this.modCount = 0;\n        this.pageManager = createPageManager(rootStorageProvider, () => this.pageListUpdated);\n        this.analysisResultCache = createAnalysisResultCache(rootStorageProvider);\n        this.contextInstance = React.createContext<IAppContextValue>(this.getDefaultContextValue());\n\n        this._currentValue = {\n            modCounter : this.modCount,\n            pageManager : this.pageManager,\n            analysisCache : this.analysisResultCache\n        };\n\n        this.valueCallback = v => {};\n    }\n\n    public setValueChangedCallback(callback : (v : IAppContextValue) => void) : void\n    {\n        this.valueCallback = callback;\n    }\n\n    public get Context() : React.Context<IAppContextValue>\n    {\n        return this.contextInstance;\n    }\n\n    public get currentValue() : IAppContextValue\n    {\n        return this._currentValue;\n    }\n\n    private updateValueAndNotify() : void\n    {\n        this.modCount++;\n\n        this._currentValue = {\n            ...this._currentValue,\n            modCounter : this.modCount\n        };\n\n        this.valueCallback(this._currentValue);\n    }\n\n    private pageListUpdated() : void\n    {\n        this.updateValueAndNotify();\n    }\n\n    private getDefaultContextValue() : IAppContextValue\n    {\n        return {\n            modCounter : this.modCount,\n            pageManager : this.pageManager,\n            analysisCache : this.analysisResultCache\n        };\n    }\n}\n\nlet appContextInstance : IAppContext | null = null;\nexport function getAppContext()\n{\n    if (appContextInstance === null)\n    {\n        appContextInstance = new AppContext(window.sessionStorage);\n    }\n    return appContextInstance;\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { IStorageProvider } from \"../storage/NestedStorageProvider\";\n\nexport interface IAnalysisResultCache\n{\n\n}\n\n// Mocked for now.\nexport function createAnalysisResultCache(rootStorageProvider : IStorageProvider) : IAnalysisResultCache\n{\n    return {};\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nexport function utf16ToString(data : ArrayBuffer) : string\n{\n    const elems = new Uint16Array(data);\n    return String.fromCharCode(...elems);\n}\n\nexport function stringToUTF16(s : string) : ArrayBuffer\n{\n    let buf = new ArrayBuffer(s.length * 2); // 2 bytes for each char\n    let bufView = new Uint16Array(buf);\n    const len = s.length;\n    for (let i = 0; i < len; i++) \n    {\n        bufView[i] = s.charCodeAt(i);\n    }\n    return buf;\n}\n\nexport function toBase64(data : ArrayBuffer) : string\n{\n    const asByteArray = new Uint8Array(data);\n    let str = String.fromCharCode(...asByteArray)\n    return btoa(str)\n}\n\nexport function fromBase64(b64 : string) : ArrayBuffer\n{\n    let str = \"\";\n    try\n    {\n        str = atob(b64);\n    }\n    catch (e)\n    {\n        throw new TypeError(\"Not a valid base64 string.\");\n    }\n\n    let buf = new ArrayBuffer(str.length);\n    let bufView = new Uint8Array(buf);\n    const len = str.length;\n    for (let i = 0; i < len; i++)\n    {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n}\n\nexport function fromBase64Url(b64url : string) : ArrayBuffer\n{\n    let b64 = b64url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    return fromBase64(b64);\n}\n\nexport function concatenateBuffers(a : Uint8Array, b : Uint8Array) : Uint8Array\n{\n    let buf = new Uint8Array(a.length + b.length);\n    buf.set(a, 0);\n    buf.set(b, a.length);\n    return buf;\n}\n\nexport function concatenateArrayBuffers(a : ArrayBuffer, b : ArrayBuffer) : ArrayBuffer\n{\n    const buffer_a = new Uint8Array(a);\n    const buffer_b = new Uint8Array(b);\n\n    return concatenateBuffers(buffer_a, buffer_b).buffer;\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { CharacterClass } from \"../data/CharacterClass\";\nimport { StatLimitMods } from \"../data/CharacterData\";\nimport { CharacterName } from \"../data/CharacterName\";\nimport { isCharacterEligibleForClass } from \"../data/ClassData\";\nimport { stringToUTF16, toBase64 } from \"../lib/EncodingHelper\";\nimport { ClassChange, GrowthProfile } from \"../sim/GrowthProfile\";\nimport { StartingStats, StatArray, STAT_COUNT } from \"../sim/StatArray\";\n\n// Like GrowthProfile, but not like GrowthProfile, in the sense that the CharacterProfile\n// allows class changes that are below the starting level or above the end level.\n// This has to be reconciled by filtering the class changes when generating the GrowthProfile\n// from it.\nexport interface CharacterProfile\n{\n    character : CharacterName;\n    startLevel : number;\n    startClass : CharacterClass;\n    startStats : StartingStats;\n    // Assume they are in order of application from low to high level, but not necessarily all\n    // within the level constraints.\n    changes : Array<ClassChange>;\n    endLevel : number;\n    maxStatMods : StatLimitMods;\n}\n\n// What class will a character land on if the analysis ends at a given level?\nexport function getFinalClassAtLevelForProfile(profile : CharacterProfile, level : number) : CharacterClass\n{\n    return profile.startClass;\n}\n\nfunction getNormalizedStatString(stats : StatArray) : string\n{\n    return `[${stats.map(s => s.toString()).join(\",\")}]`;\n}\n\nfunction getNormalizedClassChangeString(changes : ClassChange[]) : string\n{\n    const changeStrings = changes.map(c => `(${c.level},${c.class.valueOf().toString()})`);\n    return `[${changeStrings.join(\",\")}]`;\n}\n\nfunction getNormalizedGrowthProfileString(profile : GrowthProfile) : string\n{\n    const normalizedClassChangeString = getNormalizedClassChangeString(profile.changes);\n\n    return `${profile.startClass.valueOf()}/${profile.startLevel}/${getNormalizedStatString(profile.startStats)}/${profile.endLevel}/${normalizedClassChangeString}`;\n}\n\nfunction getNormalizedStatLimitsString(mods? : StatLimitMods) : string\n{\n    if (mods === undefined)\n    {\n        return \"{StrSpd:false,LckCha:false,MagDex:false,DefRes:false}\";\n    }\n    else\n    {\n        return `{StrSpd:${mods.StrAndSpdUp.toString()},LckCha:${mods.LckAndChaUp.toString()},MagDex:${mods.MagAndDexUp.toString()},DefRex:${mods.DefAndResUp.toString()}}`;\n    }\n}\n\nexport async function getCharacterProfileHash(character : CharacterName, profile : GrowthProfile, mods? : StatLimitMods) : Promise<string>\n{\n    const normalizedProfile = getNormalizedGrowthProfileString(profile);\n    const normalizedStatLimits = getNormalizedStatLimitsString(mods);\n    const dataString = `${character}|${normalizedProfile}|${normalizedStatLimits}`;\n    const data = stringToUTF16(dataString);\n\n    // We don't need secure, we just need functional.\n    const digest = await window.crypto.subtle.digest(\"SHA-1\", data);\n    return toBase64(digest);\n}\n\nexport function serializeCharacterProfileToJson(profile : CharacterProfile) : string\n{\n    return JSON.stringify(profile);\n}\n\nexport interface ParseCharacterProfileJsonResult\n{\n    result? : CharacterProfile;\n    error? : string;\n}\n\ninterface FieldDefinition\n{\n    name : string;\n    check : (a : any) => boolean;\n}\n\nfunction isBoundedInteger(x : any, minBoundInclusive : number, maxBoundExclusive? : number) : boolean\n{\n    if (!Number.isInteger(x))\n    {\n        return false;\n    }\n    \n    const asInt = x as number;\n\n    if (asInt < minBoundInclusive)\n    {\n        return false;\n    }\n    else if (maxBoundExclusive !== undefined && asInt >= maxBoundExclusive)\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isMaxStatModEquivalent(x : any) : boolean\n{\n    if (!(typeof(x) === 'object'))\n    {\n        return false;\n    }\n\n    const boolFields = [\"StrAndSpdUp\", \"LckAndChaUp\", \"MagAndDexUp\", \"DefAndResUp\"];\n    return boolFields.every(field => (field in x && typeof(x[field]) === 'boolean'));\n}\n\nfunction isClassChangeEquivalent(x : any) : boolean\n{\n    if (!(typeof(x) === 'object'))\n    {\n        return false;\n    }\n    else if (!(\"level\" in x) || !isBoundedInteger(x[\"level\"], 1))\n    {\n        return false;\n    }\n    else if (!(\"class\" in x) || !isBoundedInteger(x[\"class\"], 0, CharacterClass.End))\n    {\n        return false;\n    }\n    else\n    {\n        return true;\n    }\n}\n\nfunction isCharacterProfileEquivalent(obj : any) : boolean\n{\n    const fields : FieldDefinition[] = [\n        {name: \"character\", check: x => isBoundedInteger(x, 0, CharacterName.End)},\n        {name: \"startLevel\", check: x => isBoundedInteger(x, 1)},\n        {name: \"startClass\", check: x => isBoundedInteger(x, 0, CharacterClass.End)},\n        {name: \"startStats\", check: (a : any) => Array.isArray(a) && (a as any[]).every(x => isBoundedInteger(x, 0))},\n        {name: \"endLevel\", check: (x) => isBoundedInteger(x, 0)},\n        {name: \"maxStatMods\", check: (x) => isMaxStatModEquivalent(x)},\n        {name: \"changes\", check: (a : any) => Array.isArray(a) && (a as any[]).every(isClassChangeEquivalent)}\n    ];\n\n    return fields.every(fieldDefinition => (fieldDefinition.name in obj) && fieldDefinition.check(obj[fieldDefinition.name]));\n}\n\nfunction isValidCharacterName(characterName : CharacterName) : boolean\n{\n    return Number.isInteger(characterName) && characterName >= 0 && characterName < CharacterName.End;\n}\n\nfunction isValidEndLevel(endLevel : number, startLevel : number) : boolean\n{\n    return Number.isInteger(endLevel) && endLevel >= startLevel;\n}\n\nfunction isValidStartingStats(startingStats : any) : boolean\n{\n    if (!Array.isArray(startingStats))\n    {\n        return false;\n    }\n\n    const asArray : any[] = startingStats as any[];\n\n    if (asArray.length !== STAT_COUNT)\n    {\n        return false;\n    }\n\n    if (!asArray.every(x => Number.isInteger(x)))\n    {\n        return false;\n    }\n\n    const asStatArray : StatArray = asArray as StatArray;\n\n    if (!asStatArray.every(x => x >= 0))\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction areValidClassChanges(character : CharacterName, classChanges: ClassChange[]) : boolean\n{\n    // We already know they're all valid class change objects.\n    // Just enforce that all class changes should be in increasing level order.\n    for (let i = 0; i < classChanges.length - 1; i++)\n    {\n        if (classChanges[i].level > classChanges[i+1].level)\n        {\n            return false;\n        }\n    }\n\n    return classChanges.every(c => isCharacterEligibleForClass(c.class, character, c.level));\n}\n\nexport function deserializeCharacterProfileFromJson(json : string) : ParseCharacterProfileJsonResult\n{\n    let parsed : any = null;\n    try\n    {\n        parsed = JSON.parse(json);\n    }\n    catch\n    {\n        return {error: \"Not valid JSON.\"};\n    }\n\n    // Now validate\n    if (typeof(parsed) !== 'object')\n    {\n        return {error: \"Not a valid JSON string.\"};\n    }\n\n    if (!isCharacterProfileEquivalent(parsed))\n    {\n        return {error: \"The JSON does not match the schema for a character code.\"};\n    }\n\n    const asCharacterProfileSchema : CharacterProfile = parsed as CharacterProfile;\n\n    if (!isValidCharacterName(asCharacterProfileSchema.character))\n    {\n        return {error: \"Not a valid character number.\"};\n    }\n\n    if (!isValidEndLevel(asCharacterProfileSchema.endLevel, asCharacterProfileSchema.startLevel))\n    {\n        return {error: \"The end level is lower than the start level.\"};\n    }\n\n    if (!isValidStartingStats(asCharacterProfileSchema.startStats))\n    {\n        // Might not be a reachable line of code due to validation in isCharacterProfileEquivalent. Oh well.\n        return {error: \"Invalid starting stats.\"};\n    }\n\n    if (!areValidClassChanges(asCharacterProfileSchema.character, asCharacterProfileSchema.changes))\n    {\n        return {error: \"Out-of-order class changes or invalid level(s) for class change(s).\"};\n    }\n\n    return {result: parsed};\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { forEachStat, forEachStatIndex, StatArray, StatUpProbabilities } from \"./StatArray\";\n\nconst guaranteedLowStatUpStats : StatArray = [0,1,1,0,0,0,0,0,0];\n\nexport function computeZeroOtherwiseProbabilities(rawGrowthRate : StatUpProbabilities) : StatUpProbabilities\n{\n    const oneMinus = forEachStat(rawGrowthRate, x => (1.0-x));\n\n    // Do it the slow way, do it faster if this isn't performant enough.\n    return forEachStatIndex(index => {\n        return oneMinus\n            .map((n, i) => i === index ? 1.0 : n)\n            .reduce((a,b) => a*b);\n    }) as StatUpProbabilities;\n}\n\nexport function computeZeroOrOneStatUpProbability(rawGrowthRate : StatUpProbabilities, pZeroOtherwise : StatUpProbabilities) : number\n{\n    const oneMinus = forEachStat(rawGrowthRate, x => (1.0-x));\n    const zeroStatsUp = oneMinus.reduce((a, b) => a * b);\n    const oneStatUp = rawGrowthRate.map((p, i) => p * pZeroOtherwise[i]);\n    return zeroStatsUp + oneStatUp.reduce((p, c) => p + c);\n}\n\n// Students have bad RNG protection: if their levelup would have given them 0 or 1 stat up, they will gain 2 instead.\nexport function getAdjustedGrowthRates(rawGrowthRate : StatUpProbabilities) : StatUpProbabilities\n{\n    // Probability that all other stats, other than the specified index, do not go up\n    const pZeroOtherwise : StatUpProbabilities = computeZeroOtherwiseProbabilities(rawGrowthRate);\n    const pZeroOrOneTotal : number = computeZeroOrOneStatUpProbability(rawGrowthRate, pZeroOtherwise);\n\n    return forEachStatIndex(index => {\n        const pUp = rawGrowthRate[index];\n        return pUp * (1 - pZeroOtherwise[index]) + guaranteedLowStatUpStats[index] * pZeroOrOneTotal;\n    }) as StatUpProbabilities;\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\n// Represents an array of probabilities resembling a binomial distribution of outcomes.\n// Used for empirical calculation of simulation steps.\n// Note: large difference in magnitude of probability between smallest and largest probabilities\n// probably means normalization differences, but those are probably not significant in the\n// context of Fire Emblem.\n\n// If drift resulted in total normalization error to exceed certain guardrails, then fail instead of\n// continuing to try to normalize.\nconst NormalizationErrorLimit = 0.01;\nconst ProbabilityZeroLimit = 0.0001;\n\nfunction isAlmostZero(n : number) : boolean\n{\n    return Math.abs(n) <= ProbabilityZeroLimit;\n}\n\nexport class ProbabilityArray\n{\n    private offset : number;\n    private p : Array<number>;\n\n    public constructor(minValue : number, maxValue : number)\n    {\n        if (maxValue < minValue)\n        {\n            throw new RangeError(\"Expected maxValue to be at least minValue.\");\n        }\n\n        this.offset = minValue;\n        this.p = new Array<number>(maxValue - minValue + 1);\n        for (let i = 0, width = this.p.length; i < width; i++)\n        {\n            this.p[i] = 0;\n        }\n    }\n\n    public get minValue() : number\n    {\n        return this.offset;\n    }\n\n    public get maxValue() : number\n    {\n        return this.offset + this.p.length - 1;\n    }\n\n    public get width() : number\n    {\n        return this.p.length;\n    }\n\n    // value should be an integer.\n    public getProbability(value : number) : number\n    {\n        const index = value - this.offset;\n        if (index < 0 || index > this.p.length)\n        {\n            throw new RangeError(\"Value \" + value.toString() + \" is out of bounds of this probability array.\");\n        }\n\n        return this.p[index];\n    }\n\n    public setProbability(value : number, probability : number) : void\n    {\n        const index = value - this.offset;\n        if (index < 0 || index > this.p.length)\n        {\n            throw new RangeError(\"Value \" + value.toString() + \" is out of bounds of this probability array.\");\n        }\n\n        this.p[index] = probability;\n    }\n\n    public addProbability(value : number, probability : number) : void\n    {\n        const index = value - this.offset;\n        if (index < 0 || index > this.p.length)\n        {\n            throw new RangeError(\"Value \" + value.toString() + \" is out of bounds of this probability array.\");\n        }\n\n        this.p[index] += probability;\n    }\n\n    public clone() : ProbabilityArray\n    {\n        let p = new ProbabilityArray(this.minValue, this.maxValue);\n        for (let i = 0, width = this.p.length; i < width; i++)\n        {\n            p.setProbability(this.offset + i, this.p[i]);\n        }\n\n        return p;\n    }\n\n    // shift is a final export adjustment, mostly to handle class bonus stats\n    public export(shift : number = 0) : Map<number, number>\n    {\n        let e = new Map<number, number>();\n        for (let i = 0, width = this.p.length; i < width; i++)\n        {\n            e.set(this.offset + i + shift, this.p[i]);\n        }\n        return e;\n    }\n\n    // Deal with accumulated error by normalizing so that sum of probabilities stays around 1.\n    public normalize() : void\n    {\n        let sum = 0.0;\n        this.p.forEach((v) => {sum += v;});\n\n        if (Math.abs(1.0 - sum) < NormalizationErrorLimit)\n        {\n            let scale = 1.0/sum;\n            for (let i = 0, width = this.p.length; i < width; i++)\n            {\n                this.p[i] *= scale;\n            }\n        }\n        else\n        {\n            throw new Error(\"Attempted normalization on a probability array where sum of probabilities was too unusual. Total P is \" + sum.toString());\n        }\n    }\n\n    public clampProbability(lowerBound : number) : ProbabilityArray\n    {\n        const clampIndex = lowerBound - this.offset;\n\n        if (clampIndex <= 0)\n        {\n            // Clamping has no effect if lower bound doesn't change anything.\n            return this.clone();\n        }\n        else if (clampIndex >= this.width - 1)\n        {\n            // Clamping just brings probability up to 1 if lower bound is at/above highest value.\n            let p = new ProbabilityArray(lowerBound, lowerBound);\n            p.setProbability(lowerBound, 1.0);\n            return p;\n        }\n        else\n        {\n            // Any intermediate values requires summing up to clamp index.\n            let clampedProbability = 0.0;\n            for (let i = 0; i <= clampIndex; i++)\n            {\n                clampedProbability += this.p[i];\n            }\n\n            let p = new ProbabilityArray(lowerBound, this.maxValue);\n            // Lowest value goes to accumulated total of results up to lower bound.\n            p.setProbability(lowerBound, clampedProbability);\n            // Rest are cloned.\n            for (let i = 1, remainder = this.width - 1 - clampIndex; i <= remainder; i++)\n            {\n                p.setProbability(lowerBound + i, this.p[clampIndex + i])\n            }\n\n            return p;\n        }\n    }\n\n    // Generates next row of binomial expansion based on a given probability\n    // of the stat rising in this step.\n    // To be more explicit, for P(x+1, n) where n is the n-th iteration (levelup), and\n    // x + 1 is the value (meaning stat == x + 1 after the levelup), then this should be\n    // true: P(x+1, n) = P(x+1, n-1) * (1 - pStatUp) + P(x, n-1) * pStatUp\n    public stepProbability(pStatUp : number, cap : number) : ProbabilityArray\n    {\n        if (pStatUp < 0.0 || pStatUp > 1.0)\n        {\n            throw new RangeError(\"Invalid value for pStatUp: not a real probability. Value: \" + pStatUp.toString());\n        }\n\n        if (isAlmostZero(pStatUp))\n        {\n            return this.clone();\n        }\n        else if (isAlmostZero(1.0 - pStatUp))\n        {\n            // In 1.0 case, the stat always goes up.\n            let p = new ProbabilityArray(this.minValue + 1, this.maxValue + 1)\n            for (let i = 0, width = this.p.length; i < width; i++)\n            {\n                const index = Math.min(this.offset + i + 1, cap);\n                p.addProbability(index, this.p[i]);\n            }\n            return p;\n        }\n        else\n        {\n            // Valid probability, have to calculate because it's nontrivial.\n            let p = new ProbabilityArray(this.minValue, this.maxValue + 1)\n            let pNotChanged = 1.0 - pStatUp;\n            for (let i = 0, width = this.p.length; i < width; i++)\n            {\n                const thisProb = this.p[i];\n                \n                // Support for max base stats\n                const indexLower = Math.min(this.offset + i, cap);\n                const indexUpper = Math.min(this.offset + i + 1, cap);\n\n                p.addProbability(indexLower, thisProb * pNotChanged);\n                p.addProbability(indexUpper, thisProb * pStatUp);\n            }\n            \n            return p;\n        }\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\n// Takes the array of levelup probabilities and calculates expected total stat growths\n\nimport { ProbabilityArray } from \"./ProbabilityArray\";\nimport { StatUpProbabilities } from \"./StatArray\";\n\n\nfunction recursivePermutation(index : number, priorProbability : number, currentSum : number, \n    statUpProbabilities : StatUpProbabilities, cumulative : ProbabilityArray) : void\n{\n    if (index === statUpProbabilities.length)\n    {\n        // Exit case\n        cumulative.addProbability(currentSum, priorProbability);\n    }\n    else\n    {\n        const thisLevelupProbability = statUpProbabilities[index];\n        recursivePermutation(index + 1, priorProbability * (1.0 - thisLevelupProbability), currentSum, \n            statUpProbabilities, cumulative);\n        recursivePermutation(index + 1, priorProbability * thisLevelupProbability, currentSum + 1,\n            statUpProbabilities, cumulative);\n    }\n}\n\nexport function computeStatGrowthTotalProbabilities(levelups : StatUpProbabilities, isStudent : boolean) : ProbabilityArray\n{\n    // Layer 1 is no stats involved.\n    let probabilities = new ProbabilityArray(0, levelups.length);\n    \n    // Go through all 2^n possibilities by recursive permutation.\n    // Iterative would be faster, but it's 2^9, if perf is an issue then we're doing something horribly wrong.\n    recursivePermutation(0, 1.0, 0, levelups, probabilities);\n    probabilities.normalize();\n\n    // If it's a student, it has \"RNG protection\" which guarantees at least two stats go up.\n    if (isStudent)\n    {\n        probabilities = probabilities.clampProbability(2);\n    }\n\n    return probabilities;\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\n// Remembers progressive growth probability values.\n// This is a big pile of data generated for a character based on overall growth profile.\n\nimport { CharacterClass, getClassDisplayName } from \"../data/CharacterClass\";\nimport { getCharacterBaseGrowths, getBaseStatsFromClassStats, getCharacterMaxBaseStats, StatLimitMods, getCharacterTraits } from \"../data/CharacterData\";\nimport { CharacterName } from \"../data/CharacterName\";\nimport { getClassGeneralData, getClassGrowthRateMod } from \"../data/ClassData\";\nimport { getAdjustedGrowthRates } from \"./AdjustedGrowthRate\";\nimport { GrowthProfile } from \"./GrowthProfile\";\nimport { ProbabilityArray } from \"./ProbabilityArray\";\nimport { iCHA, iDEF, iDEX, iHP, iLCK, iMAG, iRES, iSPD, iSTR, iTOTAL, addProbabilities, StatArray, StatUpProbabilities } from \"./StatArray\";\nimport { computeStatGrowthTotalProbabilities } from \"./StatGrowthTotalCalculator\";\n\nexport interface DistributionsByStat\n{\n    hp : Map<number, number>;\n    str : Map<number, number>;\n    mag : Map<number, number>;\n    dex : Map<number, number>;\n    spd : Map<number, number>;\n    lck : Map<number, number>;\n    def : Map<number, number>;\n    res : Map<number, number>;\n    cha : Map<number, number>;\n    levelupTotal : Map<number, number>;\n}\n\ninterface StatMedianDetails\n{\n    pLower : number;\n    pHigher : number;\n    pMedian : number;\n    median : number;\n}\n\nexport interface NormalAndAdjustedGrowthRate\n{\n    normal : StatUpProbabilities;\n    adjusted : StatUpProbabilities;\n}\n\nexport function computeDistributionMedianForSingleStat(distribution : DistributionsByStat, index : number) : StatMedianDetails | undefined\n{\n    const singleStatDistribution = getDistributionByStatIndex(distribution, index);\n\n    let pTotal = Array.from(singleStatDistribution.values()).reduce((a, b) => a + b, 0);\n    let pTarget = pTotal * 0.5;\n\n    let cumulativeProbability = 0.0;\n    let buckets = Array.from(singleStatDistribution.keys()).sort((a, b) => a - b);\n    \n    for (let i = 0; i < buckets.length; i++)\n    {\n        const key = buckets[i];\n        const probability = singleStatDistribution.get(key) as number;\n\n        let before = cumulativeProbability;\n        let after = cumulativeProbability + probability;\n\n        if (before <= pTarget && after > pTarget)\n        {\n            return {\n                median: key,\n                pLower: before,\n                pHigher: after,\n                pMedian: probability\n            };\n        }\n\n        cumulativeProbability += probability;\n    }\n\n    // No median found\n    return undefined;\n}\n\nexport function getDistributionByStatIndex(distribution : DistributionsByStat, index : number) : Map<number,number>\n{\n    switch(index)\n    {\n        case iHP:\n            return distribution.hp;\n        case iSTR:\n            return distribution.str;\n        case iMAG:\n            return distribution.mag;\n        case iDEX:\n            return distribution.dex;\n        case iSPD:\n            return distribution.spd;\n        case iLCK:\n            return distribution.lck;\n        case iDEF:\n            return distribution.def;\n        case iRES:\n            return distribution.res;\n        case iCHA:\n            return distribution.cha;\n        case iTOTAL:\n            return distribution.levelupTotal;\n        default:\n            throw new RangeError(`Unrecognized index ${index} for retrieving distribution for specific stat.`);\n    }\n}\n\nexport type StatDistributionsByLevel = Map<number, DistributionsByStat>;\n\nexport function precomputeClassChanges(profile : GrowthProfile) : Array<Array<CharacterClass>>\n{\n    let levelupMap = new Map<number, Array<CharacterClass>>();\n\n    for (let i = profile.startLevel; i <= profile.endLevel; i++)\n    {\n        levelupMap.set(i, new Array<CharacterClass>());\n    }\n\n    profile.changes.forEach(classChange => {\n        const classChanges = levelupMap.get(classChange.level);\n        if (classChanges === undefined)\n        {\n            throw new Error(\"Error precomputing levelups: variable classChanges is undefined.\");\n        }\n        classChanges.push(classChange.class);\n    });\n\n    let computedChanges = new Array<Array<CharacterClass>>();\n    for (let i = profile.startLevel; i <= profile.endLevel; i++)\n    {\n        const level = levelupMap.get(i);\n        if (level === undefined)\n        {\n            throw new Error(\"Error precomputing levelups: variable level is undefined.\");\n        }\n        computedChanges.push(level);\n    }\n\n    return computedChanges;\n}\n\nexport function precomputeClassGrowthRates(character : CharacterName, profile : GrowthProfile) : Map<CharacterClass, NormalAndAdjustedGrowthRate>\n{\n    const isStudent = getCharacterTraits(character).isStudent;\n    const baseLevelups = getCharacterBaseGrowths(character);\n\n    const cache = new Map<CharacterClass, NormalAndAdjustedGrowthRate>();\n\n    // Start class, we know we need it precomputed.\n    const startClassGrowthMod = getClassGrowthRateMod(profile.startClass);\n    const startClassRawGrowth = addProbabilities(baseLevelups, startClassGrowthMod)\n    const startClassAdjustedGrowths = isStudent ? getAdjustedGrowthRates(startClassRawGrowth) : startClassRawGrowth;\n    cache.set(profile.startClass, {\n        normal: startClassRawGrowth,\n        adjusted: startClassAdjustedGrowths\n    });\n\n    profile.changes.forEach(change => {\n        if (cache.get(change.class) === undefined)\n        {\n            const growthMod = getClassGrowthRateMod(change.class);\n            const rawGrowths = addProbabilities(baseLevelups, growthMod);\n            const adjustedGrowths = isStudent ? getAdjustedGrowthRates(rawGrowths) : rawGrowths;\n            cache.set(change.class, {\n                normal: rawGrowths,\n                adjusted: adjustedGrowths\n            });\n        }\n    });\n\n    return cache;\n}\n\nexport function calculateLevelupDistributions(cachedGrowths: Map<CharacterClass, NormalAndAdjustedGrowthRate>, isStudent : boolean) \n    : Map<CharacterClass, ProbabilityArray>\n{\n    let distributions = new Map<CharacterClass, ProbabilityArray>();\n\n    cachedGrowths.forEach((growthRate, className) => {\n        if (distributions.get(className) === undefined)\n        {\n            // Haven't computed this one yet, so compute it.\n            distributions.set(className, computeStatGrowthTotalProbabilities(growthRate.normal, isStudent));\n        }\n    });\n\n    return distributions;\n}\n\nexport function applyClassChanges(distributions : Array<ProbabilityArray>, classChanges : Array<CharacterClass>) : Array<ProbabilityArray>\n{\n    if (distributions.length === 0)\n    {\n        return distributions;\n    }\n    else\n    {\n        let newDistributions = [...distributions];\n\n        classChanges.forEach(className => {\n            const classBaseStats = getClassGeneralData(className).baseStats;\n            for (let i = 0; i < classBaseStats.length; i++)\n            {\n                newDistributions[i] = newDistributions[i].clampProbability(classBaseStats[i]);\n            }\n        });\n\n        return newDistributions;\n    }\n}\n\nexport function applyLevelup(distributions : Array<ProbabilityArray>, growthRate : StatUpProbabilities, caps : StatArray) : Array<ProbabilityArray>\n{\n    const newDistributions = new Array<ProbabilityArray>(distributions.length);\n\n    for (let i = 0; i < growthRate.length; i++)\n    {\n        newDistributions[i] = distributions[i].stepProbability(growthRate[i], caps[i]);\n    }\n\n    return newDistributions;\n}\n\nexport function exportStatDistributions(stats : Array<ProbabilityArray>, bonusStats : StatArray, growthDistribution : ProbabilityArray) : DistributionsByStat\n{\n    let normalized = new Array<ProbabilityArray>(9);\n    for (let i = 0; i < 9; i++)\n    {\n        normalized[i] = stats[i].clone();\n        normalized[i].normalize();\n    }\n\n    return {\n        hp:  normalized[0].export(bonusStats[0]),\n        str: normalized[1].export(bonusStats[1]),\n        mag: normalized[2].export(bonusStats[2]),\n        dex: normalized[3].export(bonusStats[3]),\n        spd: normalized[4].export(bonusStats[4]),\n        lck: normalized[5].export(bonusStats[5]),\n        def: normalized[6].export(bonusStats[6]),\n        res: normalized[7].export(bonusStats[7]),\n        cha: normalized[8].export(bonusStats[8]),\n        levelupTotal: growthDistribution.export()\n    };\n}\n\nexport class GrowthResultAccumulator\n{\n    private perLevel : StatDistributionsByLevel;\n    private profile : GrowthProfile;\n    private character : CharacterName;\n\n    private cachedLevels : Array<Array<CharacterClass>>;\n    private cachedGrowthRates : Map<CharacterClass, NormalAndAdjustedGrowthRate>;\n\n    private isStudent : boolean;\n\n    private statMaximums : StatArray;\n\n    public constructor(character : CharacterName, profile : GrowthProfile, mods? : StatLimitMods)\n    {\n        this.profile = profile;\n        this.character = character;\n        this.perLevel = new Map<number, DistributionsByStat>();\n\n        this.cachedLevels = precomputeClassChanges(this.profile);\n        this.cachedGrowthRates = precomputeClassGrowthRates(this.character, this.profile);\n\n        this.isStudent = getCharacterTraits(character).isStudent;\n\n        this.statMaximums = getCharacterMaxBaseStats(character, mods);\n    }\n\n    // This is a heavy computation!\n    public compute() : void\n    {\n        // Initialize distributions. These are expressed in base stats. Class bonus stats are merged into the results\n        // at recording time.\n        let distributions = new Array<ProbabilityArray>();\n        let baseStartStats = getBaseStatsFromClassStats(this.profile.startStats, this.profile.startClass);\n\n        for (let i = 0; i < baseStartStats.length; i++)\n        {\n            let startStat = baseStartStats[i];\n            let startDistribution = new ProbabilityArray(startStat, startStat);\n            startDistribution.setProbability(startStat, 1.0);\n            distributions.push(startDistribution);\n        }\n\n        const classBasedLevelupDistributions = calculateLevelupDistributions(this.cachedGrowthRates, this.isStudent);\n\n        // Now go level by level.\n\n        // first level, no levelup computation from previous level, but class changes are possible.\n        const firstLevelClassChanges = this.cachedLevels[0];\n        distributions = applyClassChanges(distributions, firstLevelClassChanges);\n        \n        let levelFinalClass = firstLevelClassChanges.length > 0 ? firstLevelClassChanges[firstLevelClassChanges.length - 1] : this.profile.startClass;\n\n        const firstLevelupDistribution = classBasedLevelupDistributions.get(levelFinalClass);\n        if (firstLevelupDistribution === undefined)\n        {\n            throw new RangeError(\"Cached table of levelup total stat distribution is missing entry for character class \" + getClassDisplayName(levelFinalClass));\n        }\n\n        // Record first level expected stats after all class changes.\n        this.recordLevelResults(this.profile.startLevel, distributions, levelFinalClass, firstLevelupDistribution);\n\n        // And now for the rest of the levels.\n        const levelSpread = this.profile.endLevel - this.profile.startLevel;\n        for (let levelIndex = 1; levelIndex <= levelSpread; levelIndex++)\n        {\n            // Levelup happens using the final class of the previous level.\n            const growthRate = this.cachedGrowthRates.get(levelFinalClass);\n\n            if (growthRate === undefined)\n            {\n                throw new RangeError(\"Cached growth rates missing entry for class \" + getClassDisplayName(levelFinalClass));\n            }\n\n            const actualLevel = this.profile.startLevel + levelIndex;\n            const classChanges = this.cachedLevels[levelIndex];\n\n            // Level up based on the final calss of the previous level, then apply class changes for this level, and then present\n            // stats based on the final class at this level.\n            distributions = applyClassChanges(applyLevelup(distributions, growthRate.adjusted, this.statMaximums), classChanges);\n            \n            levelFinalClass = classChanges.length > 0 ? classChanges[classChanges.length - 1] : levelFinalClass;\n            const levelupDistribution = classBasedLevelupDistributions.get(levelFinalClass);\n            if (levelupDistribution === undefined)\n            {\n                throw new RangeError(\"Cached table of levelup total stat distribution is missing entry for character class \" + getClassDisplayName(levelFinalClass));\n            }\n\n            // Store the result at each level.\n            this.recordLevelResults(actualLevel, distributions, levelFinalClass, levelupDistribution);\n        }\n    }\n\n    public getDistributions() : StatDistributionsByLevel\n    {\n        return this.perLevel;\n    }\n\n    private recordLevelResults(actualLevel: number, statDistribution: Array<ProbabilityArray>, \n        levelFinalClass: CharacterClass, levelupDistribution: ProbabilityArray) \n    {\n        const bonusStats = getClassGeneralData(levelFinalClass).bonusStats;\n        this.perLevel.set(actualLevel, exportStatDistributions(statDistribution, bonusStats, levelupDistribution));\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { CharacterClass, getCharacterClassesByCategory, CharacterClassGroup, getCharacterClassGroupDisplayName, getClassDisplayName } from \"../data/CharacterClass\";\nimport { CharacterName } from \"../data/CharacterName\";\nimport { getEligibleClasses } from \"../data/ClassData\";\n\nexport interface ClassSelectorProps\n{\n    value : CharacterClass;\n\n    character : CharacterName;\n    level? : number;\n\n    onSelected : (character : CharacterClass) => void;\n    props? : {[key : string] : any};\n}\n\nconst CharacterNameList = new Map<CharacterClass, string>();\n(() => \n{\n    for (let i = 0; i < CharacterClass.End.valueOf(); i++)\n    {\n        const character = i as CharacterClass;\n        CharacterNameList.set(character, getClassDisplayName(character));\n    }\n})();\n\ntype SelectChangedEvent = React.ChangeEvent<{name?: string, value: unknown}>;\n\nexport function ClassSelector(props : ClassSelectorProps) : JSX.Element\n{\n    const characterEntries = new Array<JSX.Element>();\n    const eligibleClasses = getEligibleClasses(props.character, props.level);\n\n    if (!eligibleClasses.has(props.value))\n    {\n        characterEntries.push(<option disabled value={props.value.valueOf()} key={props.value.valueOf()}>{getClassDisplayName(props.value)}</option>);\n    }\n\n    for (let f = 0; f < CharacterClassGroup.End; f++)\n    {\n        const group = f as CharacterClassGroup;\n        const entriesInGroup : Array<JSX.Element> = [];\n        getCharacterClassesByCategory(group).forEach((c) => {\n            if (eligibleClasses.has(c))\n            {\n                entriesInGroup.push(<option value={c.valueOf()} key={c.valueOf()}>{getClassDisplayName(c)}</option>);\n            }\n        })\n        if (entriesInGroup.length > 0)\n        {\n            characterEntries.push(<optgroup label={getCharacterClassGroupDisplayName(group)} key={group}>{entriesInGroup}</optgroup>);\n        }\n    }\n\n    const handler = async (event : SelectChangedEvent, child?: React.ReactNode) => {\n        const selected = parseInt((event.target.value as any).toString());\n        props?.onSelected(selected);\n    };\n\n    return (\n    <>\n        <FormControl>\n            <InputLabel htmlFor=\"class-selector-field\">Class</InputLabel>\n            <Select {...props.props} native value={props.value} onChange={handler} id=\"class-selector-field\" style={{minWidth: 160}}>\n                {characterEntries}\n            </Select>\n        </FormControl>\n    </>);\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nexport interface LevelSelectorProps\n{\n    minLevel? : number;\n    maxLevel? : number;\n    value : number;\n    customText? : string;\n    labelStyle? : \"inline\" | \"overhead\";\n    onSelected : (level : number) => void;\n    props? : {[key : string] : any};\n}\n\ntype SelectChangedEvent = React.ChangeEvent<{name?: string, value: any}>;\n\nexport function LevelSelector(props : LevelSelectorProps) : JSX.Element\n{\n    const minLevel = props.minLevel ?? 1;\n    const maxLevel = props.maxLevel ?? 99;\n\n    function handler(event : SelectChangedEvent) {\n        let selected = parseInt(event.target.value.toString());\n        props?.onSelected(selected);\n    };\n\n    const entries : Array<JSX.Element> = [];\n    for (let i = minLevel; i <= maxLevel; i++)\n    {\n        entries.push(\n            <option value={i} key={i}>{i.toString()}</option>\n        );\n    }\n\n    if (props.customText !== undefined)\n    {\n        if ((props.labelStyle ?? \"overhead\") === \"overhead\")\n        {\n            return (\n                <FormControl>\n                    <InputLabel htmlFor=\"level-selector-field\">{props.customText}</InputLabel>\n                    <Select {...props.props} native value={props.value} onChange={handler} id=\"level-selector-field\">\n                        {entries}\n                    </Select>\n                </FormControl>\n            );\n        }\n        else\n        {\n            return (\n                <FormControl>\n                    <FormControlLabel \n                        control={\n                            <Select {...props.props} native value={props.value} onChange={handler} id=\"level-selector-field\" style={{marginLeft: 8}}>\n                                {entries}\n                            </Select>\n                        }\n                        label={props.customText}\n                        labelPlacement=\"start\"\n                    />\n                </FormControl>\n            );\n        }\n    }\n    else\n    {\n        return (\n            <FormControl>\n                <Select {...props.props} native value={props.value} onChange={handler} id=\"level-selector-field\">\n                    {entries}\n                </Select>\n            </FormControl>\n        );\n    }\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from \"react\";\nimport { CharacterClass } from \"../data/CharacterClass\";\nimport { CHARACTER_MAX_LEVEL } from \"../data/CharacterData\";\nimport { CharacterName } from \"../data/CharacterName\";\nimport { getRequirementForCharacterAndClass, hasClassGeneralData } from \"../data/ClassData\";\nimport { ClassSelector } from \"./ClassSelector\";\nimport { LevelSelector } from \"./LevelSelector\";\n\nexport interface ClassAndLevelSelectorProps\n{\n    selectedClass : CharacterClass;\n    selectedLevel : number;\n\n    onChanged : (characterClass : CharacterClass, level : number) => void;\n\n    character : CharacterName;\n    minLevel? : number;\n    maxLevel? : number;\n\n    containerProps? : {[key : string] : any};\n    containerStyle? : React.CSSProperties;\n\n    classSelectorProps? : {[key : string] : any};\n    levelSelectorProps? : {[key : string] : any};\n}\n\nexport function ClassAndLevelSelector(props : ClassAndLevelSelectorProps) : JSX.Element\n{\n    const classRequirement = getRequirementForCharacterAndClass(props.character, props.selectedClass);\n\n    const effectiveMinLevel = Math.max(props.minLevel ?? 1, classRequirement?.level ?? 1);    \n    const effectiveMaxLevel = props.maxLevel ?? CHARACTER_MAX_LEVEL;\n\n    const classChangeHandler = (c : CharacterClass) => {\n        if (hasClassGeneralData(c))\n        {\n            const newClassRequirement = getRequirementForCharacterAndClass(props.character, c)\n            const effectiveNewMinLevel = newClassRequirement?.level ?? 1;\n            if (effectiveNewMinLevel > props.selectedLevel)\n            {\n                // Maintain correctness constraint\n                props.onChanged(c, effectiveNewMinLevel);    \n            }\n            else\n            {\n                props.onChanged(c, props.selectedLevel);    \n            }\n        }\n        else\n        {\n            props.onChanged(c, props.selectedLevel);\n        }\n    };\n\n    const levelChangeHandler = (l : number) => {\n        if (l < effectiveMinLevel)\n        {\n            props.onChanged(props.selectedClass, effectiveMinLevel);\n        }\n        else if (l > effectiveMaxLevel)\n        {\n            props.onChanged(props.selectedClass, effectiveMaxLevel);\n        }\n        else\n        {\n            props.onChanged(props.selectedClass, l);\n        }\n    };\n\n    let containerStyle : React.CSSProperties = {\n        ...props.containerStyle\n    };\n\n    return (\n        <div {...props.containerProps} style={containerStyle}>\n            <ClassSelector \n                value={props.selectedClass} \n                character={props.character}\n                onSelected={classChangeHandler}\n                props={props.classSelectorProps}\n            />\n            <LevelSelector\n                minLevel={effectiveMinLevel}\n                maxLevel={props.maxLevel}\n                value={props.selectedLevel}\n                onSelected={levelChangeHandler}\n                props={props.levelSelectorProps}\n                customText=\"Level\"\n                labelStyle=\"overhead\"\n            />\n        </div>);\n    \n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\n\nimport { DragDropContext, Droppable, Draggable, DroppableStateSnapshot, DroppableProvided, DraggableProvided, DraggableStateSnapshot, NotDraggingStyle, DraggingStyle, DropResult, ResponderProvided } from 'react-beautiful-dnd';\n\nimport { CharacterClass, getClassDisplayName } from \"../data/CharacterClass\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport interface ClassChangeSingleLevelProps\n{\n    classes : Array<CharacterClass>;\n    disabled : boolean;\n    onReordered : (newClasses : Array<CharacterClass>) => void;\n    onDeleted : (newClasses : Array<CharacterClass>) => void;\n}\n\ninterface ClassChipProps\n{\n    value : CharacterClass;\n    provided? : DraggableProvided;\n    snapshot? : DraggableStateSnapshot;\n    disabled? : boolean;\n    onDelete : () => void;\n}\n\nfunction getClassChipStyle(isDragging : boolean, draggableStyle : DraggingStyle | NotDraggingStyle | undefined) : React.CSSProperties\n{\n    return {\n        marginLeft : 4,\n        marginRight: 4,\n        userSelect : 'none',\n        ...draggableStyle\n    };\n}\n\nfunction ClassChip(props : ClassChipProps)\n{\n    if (props.provided !== undefined && props.snapshot !== undefined)\n    {\n        // If draggable\n        return (\n            <div\n                ref={props.provided.innerRef}\n                {...props.provided.draggableProps}\n                {...props.provided.dragHandleProps}\n                style={getClassChipStyle(props.snapshot.isDragging, props.provided.draggableProps.style)}>\n                <Chip \n                    icon={<DragIndicatorIcon />}\n                    label={getClassDisplayName(props.value)}\n                    onDelete={() => {props.onDelete();}}\n                    color={props.disabled ? \"default\" : \"primary\"}\n                    clickable={false}\n                    style={{cursor: 'move'}}\n                />\n            </div>\n        );\n    }\n    else\n    {\n        return (\n            <div\n                style={getClassChipStyle(false, {})}>\n                <Chip \n                    label={getClassDisplayName(props.value)}\n                    onDelete={() => {props.onDelete();}}\n                    color={props.disabled ? \"default\" : \"primary\"}\n                    clickable={false}\n                />\n            </div>\n        );\n    }\n}\n\nfunction getClassChip (isDisabled : boolean, value : CharacterClass, index : number, onDelete : () => void, \n    provided? : DraggableProvided, snapshot? : DraggableStateSnapshot) : JSX.Element\n{\n    if (isDisabled)\n    {\n        return (\n            <ClassChip\n                key={index}\n                value={value}\n                onDelete={onDelete}\n                provided={provided}\n                snapshot={snapshot}\n                disabled\n            />);\n    }\n    else\n    {\n        return (\n            <ClassChip\n                key={index}\n                value={value}\n                onDelete={onDelete}\n                provided={provided}\n                snapshot={snapshot}\n            />);\n    }\n};\n\nconst DropContainerStyle : React.CSSProperties = {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    flexDirection: 'row',\n    flexShrink: 0,\n    flexGrow: 0,\n    flexWrap: \"nowrap\",\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft : 4,\n    paddingRight : 4,\n    minHeight : 32,\n};\n\nconst DragOverStyle : React.CSSProperties = {\n    paddingTop: 7,\n    paddingBottom: 7,\n    borderTop: \"1px solid #aaaaaa\",\n    borderBottom: \"1px solid #aaaaaa\",\n};\n\nfunction dropContainerStyle(isDraggingOver : boolean) : React.CSSProperties\n{\n    if (isDraggingOver)\n    {\n        console.log(\"over\");\n        return {...DropContainerStyle, ...DragOverStyle};\n    }\n    else\n    {\n        return DropContainerStyle;\n    }\n}\n\nexport function ClassChangeSingleLevel(props : ClassChangeSingleLevelProps) : JSX.Element\n{\n    const onDeleteHandler = (index : number, characterClass : CharacterClass) => {\n        const newClassList = [...props.classes];\n        newClassList.splice(index, 1);\n        props.onDeleted(newClassList);\n    };\n\n    let draggableItems : Array<JSX.Element> = [];\n\n    if (props.classes.length <= 1)\n    {\n        // Not draggable if nothing useful to be accomplished by dragging.\n        draggableItems = props.classes.map((value, ind) => {\n            const index = ind;\n            return getClassChip(props.disabled, value, ind, () => {onDeleteHandler(index, value)});\n        });\n    }\n    else\n    {\n        draggableItems = props.classes.map((value, ind) => {\n            const index = ind;\n            return (\n                <Draggable key={index} draggableId={index.toString()} index={index}>\n                    {(provided : DraggableProvided, snapshot : DraggableStateSnapshot) => \n                        getClassChip(props.disabled, value, ind, () => onDeleteHandler(index, value), provided, snapshot)\n                    }\n                </Draggable>\n            );\n        });\n    }\n\n    const dragEndHandler = (result : DropResult, provided : ResponderProvided) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const newList = [...props.classes];\n        const srcIndex = result.source.index;\n        const destIndex = result.destination.index;\n\n        const elem = newList[srcIndex];\n        newList.splice(srcIndex, 1);\n        newList.splice(destIndex, 0, elem);\n        props.onReordered(newList);\n    };\n\n    if (props.classes.length <= 1)\n    {\n        return (\n            <div style={dropContainerStyle(false)}>\n                {draggableItems}\n            </div>);\n    }\n    else\n    {\n        return (\n            <DragDropContext onDragEnd={dragEndHandler}>\n                <Droppable droppableId=\"classChangeRow\" direction=\"horizontal\">\n                    {(provided : DroppableProvided, snapshot : DroppableStateSnapshot) => (\n                        <Tooltip title=\"Drag to re-order class changes.\">\n                            <div\n                                ref={provided.innerRef}\n                                style={dropContainerStyle(snapshot.isDraggingOver)}\n                                {...provided.droppableProps}\n                            >\n                                {draggableItems}\n                                {provided.placeholder}\n                            </div>\n                        </Tooltip>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        );   \n    }\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from \"react\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { CharacterClass } from \"../data/CharacterClass\";\nimport { ClassChangeSingleLevel } from \"./ClassChangeSingleLevel\";\nimport Chip from \"@material-ui/core/Chip\";\n\nexport interface ClassChangeListProps\n{\n    list : Map<number, Array<CharacterClass>>;\n    minLevel : number;\n    onReordered : (newList : Map<number, Array<CharacterClass>>) => void;\n}\n\nconst CONTAINER_STYLE : React.CSSProperties = {\n    display : \"flex\",\n    flexDirection : \"row\",\n    flexBasis : 0,\n    justifyContent: \"flex-start\",\n    alignItems : \"flex-start\",\n    flexWrap : \"wrap\",\n    paddingLeft: 8,\n    paddingRight: 8,\n};\n\nconst ROW_STYLE : React.CSSProperties = {\n    display : \"flex\",\n    flexDirection : \"row\",\n    flexBasis : 0,\n    alignItems : \"center\",\n};\n\nconst ROW_ELEMENT_STYLE : React.CSSProperties = {\n    flexShrink : 0,\n    flexGrow : 0,\n    minWidth : 24,\n    padding : 4,\n    textAlign : \"right\",\n    alignContent : \"baseline\",\n};\n\nexport function ClassChangeList(props : ClassChangeListProps) : JSX.Element\n{\n    const elements : Array<JSX.Element> = [];\n\n    // Need sorting because keys are in insertion order.\n    const levelsInOrder = Array.from(props.list.keys());\n    levelsInOrder.sort((a, b) => a - b);\n    \n    const reorderedHandler = (l : number, c : Array<CharacterClass>) => {\n        const newList = new Map<number, Array<CharacterClass>>(props.list.entries());\n        newList.set(l, c);\n        props.onReordered(newList);\n    };\n\n    const deletedHandler = (l : number, c : Array<CharacterClass>) => {\n        const newList = new Map<number, Array<CharacterClass>>(props.list.entries());\n        if (c.length > 0)\n        {\n            newList.set(l, c);\n        }\n        else\n        {\n            newList.delete(l);\n        }\n\n        props.onReordered(newList);\n    };\n\n    for (const level of levelsInOrder)\n    {\n        const fixedLevel = level;\n        // Since we're iterating keys we know the Map.get will not return undefined.\n        elements.push(\n        <div style={ROW_STYLE} key={fixedLevel}>\n            <FormLabel style={ROW_ELEMENT_STYLE}>{fixedLevel.toString()}</FormLabel>\n            <ClassChangeSingleLevel\n                classes={props.list.get(level) as Array<CharacterClass>}\n                onReordered={(newClassList) => reorderedHandler(fixedLevel, newClassList)}\n                onDeleted={(newClassList) => deletedHandler(fixedLevel, newClassList)}\n                disabled={fixedLevel < props.minLevel}\n            />\n        </div>);\n    }\n\n    if (elements.length > 0)\n    {\n        return <div style={CONTAINER_STYLE}>\n            {elements}\n        </div>;\n    }\n    else\n    {\n        return <div style={CONTAINER_STYLE}><Chip style={{textAlign: \"left\", margin: 8, userSelect: \"none\"}} label=\"No class changes\" disabled /></div>;\n    }\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport Button from '@material-ui/core/Button';\nimport React, { useState } from 'react';\nimport { CharacterClass, getClassDisplayName } from '../data/CharacterClass';\nimport { CharacterName, getCharacterDisplayName } from '../data/CharacterName';\nimport { hasClassGeneralData, getEligibleClasses, getRequirementForCharacterAndClass } from '../data/ClassData';\nimport { ClassAndLevelSelector } from './ClassAndLevelSelector';\nimport { ClassChangeList } from './ClassChangeList';\n\ninterface ClassAddWidgetProps\n{\n    // Need this to restrict available classes.\n    character : CharacterName;\n    selectedClass : CharacterClass;\n    selectedLevel : number;\n    minLevel : number;\n\n    onSelectionChanged : (characterClass : CharacterClass, level : number) => void;\n    onAddButtonClicked : (characterClass : CharacterClass, level : number) => void;\n}\n\nconst ClassAddWidgetContainerStyle : React.CSSProperties = {\n    marginTop: 8,\n    marginLeft: 16,\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexBasis: 0,\n    flexWrap: \"nowrap\",\n};\n\nconst ClassAndLevelSelectorStyle : React.CSSProperties = {\n    marginRight: 8,\n    display : \"flex\",\n    flexGrow : 0,\n    flexShrink : 0,\n    alignSelf: \"flex-end\"\n};\n\nconst AddButtonStyle : React.CSSProperties = {\n    display : \"flex\",\n    flexGrow : 0,\n    flexShrink : 0,\n    alignSelf: \"flex-end\"\n\n}\n\nfunction ClassAddWidget(props : ClassAddWidgetProps) : JSX.Element\n{\n    const availableClasses = getEligibleClasses(props.character);\n\n    if (!availableClasses.has(props.selectedClass))\n    {\n        throw new RangeError(`Character ${getCharacterDisplayName(props.character)} isn't eligible for selected class ${getClassDisplayName(props.selectedClass)}`);\n    }\n\n    const classRequirement = getRequirementForCharacterAndClass(props.character, props.selectedClass);\n\n    if (classRequirement === undefined)\n    {\n        throw new RangeError(\"Got undefined class requirements for a known eligible class.\");\n    }\n\n    if (classRequirement.level > props.selectedLevel)\n    {\n        throw new RangeError(`Selected level ${props.selectedLevel} is below minimum level for class, ${classRequirement.level}`);\n    }\n\n    const selectionChangedHandler = (characterClass : CharacterClass, level : number) => {\n        props.onSelectionChanged(characterClass, level);\n    };\n\n    const addClickedHandler = (event : React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        props.onAddButtonClicked(props.selectedClass, props.selectedLevel);\n    };\n\n    return <div style={ClassAddWidgetContainerStyle}>\n        <ClassAndLevelSelector \n            selectedClass={props.selectedClass} \n            selectedLevel={props.selectedLevel}\n            character={props.character}\n            minLevel={props.minLevel}\n            containerStyle={ClassAndLevelSelectorStyle}\n            onChanged={selectionChangedHandler} />\n        <div style={AddButtonStyle}>\n            <Button id=\"class-change-add-button\" variant=\"outlined\" color=\"primary\" onClick={addClickedHandler}>\n                Add\n            </Button>\n        </div>\n    </div>;\n}\n\nexport interface ClassChangeEditorProps\n{\n    character : CharacterName;\n    classChangeList : Map<number, Array<CharacterClass>>;\n    minLevel : number;\n\n    onClassChangeListChange : (changes : Map<number, Array<CharacterClass>>) => void;\n}\n\ninterface ClassChangeEditorState\n{\n    addWidgetClass : CharacterClass;\n    addWidgetLevel : number;\n}\n\nfunction getClassChangeEditorDefaultState(character : CharacterName) : ClassChangeEditorState\n{\n    const eligibleClasses = Array.from(getEligibleClasses(character))\n        .filter((c) => hasClassGeneralData(c))\n        .sort((a,b) => a - b);\n    \n    if (eligibleClasses.length === 0)\n    {\n        throw new Error(`No viable classes for selected character ${character}`);\n    }\n\n    const defaultClassChoice = eligibleClasses[0];\n    const defaultClassRequirement = getRequirementForCharacterAndClass(character, defaultClassChoice);\n\n    if (defaultClassRequirement === undefined)\n    {\n        throw new RangeError(\"Got undefined class requirements for a known eligible class.\");\n    }\n    \n    return {\n        addWidgetClass : defaultClassChoice,\n        addWidgetLevel : defaultClassRequirement.level\n    };\n}\n\nconst ClassChangeEditorContainerStyle : React.CSSProperties = {\n};\n\nexport function ClassChangeEditor(props : ClassChangeEditorProps) : JSX.Element\n{\n    // Need state to store the class and level selector's state.\n    const [state, setState] = useState(getClassChangeEditorDefaultState(props.character));\n    \n    let immediateStateUpdateNeeded = false;\n\n    const eligibleClasses = getEligibleClasses(props.character);\n    let effectiveClass = state.addWidgetClass;\n    if (!eligibleClasses.has(effectiveClass))\n    {\n        const asArray = Array.from(eligibleClasses);\n\n        if (asArray.length === 0)\n        {\n            throw new Error(\"No eligible classes are selectable for the given character. This is usually an incomplete data error.\");\n        }\n\n        asArray.sort((a, b) => a - b);\n        effectiveClass = asArray[0];\n        immediateStateUpdateNeeded = true;\n    }\n\n    let effectiveLevel = state.addWidgetLevel;\n    const classRequirement = getRequirementForCharacterAndClass(props.character, effectiveClass);\n\n    if (classRequirement === undefined)\n    {\n        throw new RangeError(\"Got undefined class requirements for a known eligible class.\");\n    }\n\n    const requiredLevelForEffectiveClass = classRequirement.level;\n    if (effectiveLevel < requiredLevelForEffectiveClass || effectiveLevel < props.minLevel)\n    {\n        effectiveLevel = Math.max(requiredLevelForEffectiveClass, props.minLevel);\n        immediateStateUpdateNeeded = true;\n    }\n\n    if (immediateStateUpdateNeeded)\n    {\n        setState({\n            addWidgetClass : effectiveClass,\n            addWidgetLevel : effectiveLevel\n        });\n    }\n\n    const addWidgetChangeHandler = async (c : CharacterClass, l : number) => {\n        setState({\n            addWidgetClass : c,\n            addWidgetLevel : l\n        });\n    };\n    const addWidgetConfirmHandler = async (c : CharacterClass, l : number) => {\n        const appendedMap = new Map<number, Array<CharacterClass>>(props.classChangeList.entries());\n        \n        if (appendedMap.has(l))\n        {\n            appendedMap.get(l)?.push(c);\n        }\n        else\n        {\n            appendedMap.set(l, [c]);\n        }\n\n        props.onClassChangeListChange(appendedMap);\n    };\n\n    const classChangeListReorderedHandler = async (classChangeList : Map<number, Array<CharacterClass>>) => {\n        props.onClassChangeListChange(classChangeList);\n    };\n\n    return <div style={ClassChangeEditorContainerStyle}>\n        <ClassChangeList\n            list={props.classChangeList}\n            minLevel={props.minLevel}\n            onReordered={classChangeListReorderedHandler}\n        />\n        <ClassAddWidget\n            character={props.character}\n            minLevel={props.minLevel}\n            selectedClass={effectiveClass}\n            selectedLevel={effectiveLevel}\n            onSelectionChanged={addWidgetChangeHandler}\n            onAddButtonClicked={addWidgetConfirmHandler}\n        />\n    </div>;\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from '@material-ui/core/Select';\nimport { CharacterFaction, CharacterName, getCharactersByFaction, getFactionDisplayName, getCharacterDisplayName } from \"../data/CharacterName\";\n\nexport interface CharacterSelectorProps\n{\n    value : CharacterName;\n    onSelected : (character : CharacterName) => void;\n    availableCharacters? : Set<CharacterName>;\n    containerStyle? : React.CSSProperties;\n}\n\nconst CharacterNameList = new Map<CharacterName, string>();\n(() => \n{\n    for (let i = 0; i < CharacterName.End.valueOf(); i++)\n    {\n        const character = i as CharacterName;\n        CharacterNameList.set(character, getCharacterDisplayName(character));\n    }\n})();\n\ntype SelectChangedEvent = React.ChangeEvent<{name?: string, value: unknown}>;\n\nexport function CharacterSelector(props : CharacterSelectorProps) : JSX.Element\n{\n    const characterEntries = new Array<JSX.Element>();\n    for (let f = 0; f < CharacterFaction.End; f++)\n    {\n        const faction = f as CharacterFaction;\n        const entriesInFaction : Array<JSX.Element> = [];\n        getCharactersByFaction(faction).forEach((character) => {\n            if (props.availableCharacters === undefined || props.availableCharacters.has(character))\n            {\n                entriesInFaction.push(<option value={character.valueOf()} key={character.valueOf()}>{getCharacterDisplayName(character)}</option>);\n            }\n        })\n        if (entriesInFaction.length > 0)\n        {\n            characterEntries.push(<optgroup label={getFactionDisplayName(faction)} key={faction}>{entriesInFaction}</optgroup>);\n        }\n    }\n\n    const handler = async (event : SelectChangedEvent, child?: React.ReactNode) => {\n        const selected = parseInt((event.target.value as any).toString());\n        props?.onSelected(selected);\n    };\n\n    return (\n    <div style={props.containerStyle}>\n        <FormControl>\n            <InputLabel htmlFor=\"character-selector-field\">Character</InputLabel>\n            <Select native value={props.value} onChange={handler}>\n                {characterEntries}\n            </Select>\n        </FormControl>\n    </div>);\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { StatArray } from \"../sim/StatArray\";\nimport { CharacterClass, getClassDisplayName } from \"./CharacterClass\";\nimport { getCharacterInitialPresets } from \"./CharacterData\";\nimport { CharacterName } from \"./CharacterName\";\nimport { CharacterInitialData } from \"./CharacterPresets\";\n\n\nexport interface InitialStats\n{\n    character : CharacterName;\n    class : CharacterClass;\n    level : number;\n    // Presumes stats are with class bonuses taken into account.\n    // e.g. you should be able to copy off the character sheet in game\n    // and it should interpret correctly.\n    stats : StatArray;\n}\n\nexport interface Preset\n{\n    index : number;\n    displayName : string;\n    stats : InitialStats;\n}\n\nexport interface PresetsBundle\n{\n    getCharacterList : () => Set<CharacterName>;\n    getPresetsForCharacter : (character : CharacterName) => Array<Preset>;\n};\n\nfunction getPresetDisplayName(characterName : CharacterName, initialData : CharacterInitialData) : string\n{\n    if (initialData.title !== undefined)\n    {\n        return `${initialData.title} (lvl ${initialData.level} ${getClassDisplayName(initialData.class)})`;\n    }\n    else\n    {\n        return `lvl ${initialData.level} ${getClassDisplayName(initialData.class)}`;\n    }\n}\n\nfunction computePresets() : Map<CharacterName, Preset[]>\n{\n    const presetMap = new Map<CharacterName, Array<Preset>>();\n\n    for (let i = 0; i < CharacterName.End; i++)\n    {\n        const characterName = i as CharacterName;\n\n        const presets : Preset[] = getCharacterInitialPresets(characterName).map((initialData, index) => {\n            return {\n                index,\n                displayName: getPresetDisplayName(characterName, initialData),\n                stats: {\n                    character: characterName,\n                    class: initialData.class,\n                    level: initialData.level,\n                    stats : initialData.stats\n                }\n            };\n        });\n\n        if (presets.length > 0)\n        {\n            presetMap.set(characterName, presets);\n        }\n    }\n\n    return presetMap;\n}\n\nclass PresetsBundleImpl implements PresetsBundle\n{\n    private presetLookup : Map<CharacterName, Array<Preset>>;\n\n    constructor()\n    {\n        this.presetLookup = computePresets();\n    }\n\n    public getCharacterList() : Set<CharacterName>\n    {\n        return new Set(this.presetLookup.keys());\n    }\n\n    public getPresetsForCharacter(character : CharacterName) : Array<Preset>\n    {\n        const result = this.presetLookup.get(character);\n        \n        if (result === undefined)\n        {\n            return [];\n        }\n        else\n        {\n            return result;\n        }\n    }\n}\n\nlet bundleInstance : PresetsBundleImpl | undefined;\n\nfunction initializePresetsBundleImpl()\n{\n    bundleInstance = new PresetsBundleImpl();\n}\n\nexport function loadInitialStatsPresets() : PresetsBundle\n{\n    if (bundleInstance === undefined)\n    {\n        initializePresetsBundleImpl();\n    }\n\n    return bundleInstance as PresetsBundle;\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { CharacterName } from '../data/CharacterName';\nimport { InitialStats, loadInitialStatsPresets, Preset, PresetsBundle } from '../data/CharacterPresetLoader';\nimport { CharacterSelector } from './CharacterSelector';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { getClassDisplayName } from '../data/CharacterClass';\nimport { forEachStatIndex, getCanonicalStatNameByIndex } from '../sim/StatArray';\nimport Typography from '@material-ui/core/Typography';\n\nexport interface InitialStatPresetDialogProps\n{\n    open : boolean;\n    defaultCharacter : CharacterName;\n    onCancelled : () => void;\n    onSelected : (loadedStats : InitialStats) => void;\n}\n\nexport interface PresetSelectorProps\n{\n    selectedIndex : number;\n    onSelected : (index : number) => void;\n    availablePresets : Preset[];\n}\n\nexport interface PresetDisplayProps\n{\n    value : InitialStats\n}\n\nfunction getStatBundle(character : CharacterName, index : number) : InitialStats | undefined\n{\n    // Pull a lazy-initialized list of presets\n    const AvailablePresets : PresetsBundle = loadInitialStatsPresets();\n\n    const presets = AvailablePresets.getPresetsForCharacter(character);\n    if (presets.length > index)\n    {\n        return AvailablePresets.getPresetsForCharacter(character)[index].stats;\n    }\n    else\n    {\n        return undefined;\n    }\n}\n\ntype SelectChangedEvent = React.ChangeEvent<{name?: string, value: unknown}>;\n\nexport function PresetSelector(props : PresetSelectorProps) : JSX.Element\n{\n    const handler = (event : SelectChangedEvent, child?: React.ReactNode) => {\n        const selected = parseInt((event.target.value as any).toString());\n        props.onSelected(selected);\n    };\n\n    const presetEntries : JSX.Element[] = props.availablePresets.map((preset : Preset) => {\n        return <option value={preset.index} key={preset.index}>{preset.displayName}</option>;\n    });\n\n    return (\n        <FormControl style={{marginTop: 16, marginBottom: 16}}>\n            <InputLabel htmlFor=\"character-selector-field\">Preset</InputLabel>\n            <Select native value={props.selectedIndex} onChange={handler}>\n                {presetEntries}\n            </Select>\n        </FormControl>);\n}\n\nconst PresetDisplayRowStyle : React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    marginTop: 8,\n    marginBottom: 8\n};\n\nconst PresetDisplayElementStyle : React.CSSProperties = {\n    flexBasis: 'auto',\n    flexGrow: 0,\n    flexShrink: 0,\n    marginRight: 12,\n    marginTop: 8,\n    marginBottom: 8,\n    minWidth: 32\n};\n\nconst PresetDisplayLabelStyle : React.CSSProperties = {\n};\n\nconst PresetDisplayValueStyle : React.CSSProperties = {\n    //fontWeight: 'normal'\n    fontWeight: 'bold',\n    opacity: 0.8\n};\n\nexport function PresetDisplay(props : PresetDisplayProps) : JSX.Element\n{\n    return (\n        <div>\n            <div style={PresetDisplayRowStyle}>\n                <div style={PresetDisplayElementStyle}>\n                    <Typography variant='body1' style={PresetDisplayLabelStyle}>Level</Typography>\n                    <Typography variant='body1' style={PresetDisplayValueStyle}>{props.value.level}</Typography>\n                </div>\n                <div style={PresetDisplayElementStyle}>\n                    <Typography variant='body1' style={PresetDisplayLabelStyle}>Class</Typography>\n                    <Typography variant='body1' style={PresetDisplayValueStyle}>{getClassDisplayName(props.value.class)}</Typography>\n                </div>\n            </div>\n            <div style={PresetDisplayRowStyle}>\n                {\n                    forEachStatIndex((index : number) => {\n                        const statDisplayName = getCanonicalStatNameByIndex(index);\n                        return (\n                            <div style={PresetDisplayElementStyle} key={`preset_stat_${getCanonicalStatNameByIndex(index)}`}>\n                                <Typography variant='body1' style={PresetDisplayLabelStyle}>{statDisplayName}</Typography>\n                                <Typography variant='body1' style={PresetDisplayValueStyle}>{props.value.stats[index]}</Typography>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </div>\n    );\n}\n\nexport interface InitialStatPresetDialogState\n{\n    selectedCharacter : CharacterName;\n    selectedPresetIndex : number;\n}\n\nexport class InitialStatPresetDialog extends React.Component<InitialStatPresetDialogProps, InitialStatPresetDialogState>\n{\n    public constructor(props : InitialStatPresetDialogProps)\n    {\n        super(props);\n\n        this.state = {\n            selectedCharacter : props.defaultCharacter,\n            selectedPresetIndex: 0\n        };\n    }\n\n    public componentDidUpdate(prevProps : InitialStatPresetDialogProps, prevState : InitialStatPresetDialogState)\n    {\n        if (prevProps.defaultCharacter !== this.props.defaultCharacter)\n        {\n            this.setState({\n                selectedCharacter : this.props.defaultCharacter,\n                selectedPresetIndex : 0\n            });\n        }\n    }\n\n    public render() : JSX.Element\n    {\n        // Pull a lazy-initialized list of presets\n        const AvailablePresets : PresetsBundle = loadInitialStatsPresets();\n\n        const presetsForSelectedCharacter = AvailablePresets.getPresetsForCharacter(this.state.selectedCharacter);\n        const selectedPreset = getStatBundle(this.state.selectedCharacter, this.state.selectedPresetIndex);\n\n        const onPresetSelected = () => {\n            if (selectedPreset !== undefined)\n            {\n                this.props.onSelected(selectedPreset as InitialStats);\n            }\n        };\n    \n        const onCharacterChange = (newCharacterSelection : CharacterName) => {\n            this.setState({\n                selectedCharacter: newCharacterSelection,\n                selectedPresetIndex: 0\n            });\n        };\n    \n        const onPresetIndexSelected = (newIndexSelection : number) => {\n            this.setState({\n                selectedCharacter: this.state.selectedCharacter,\n                selectedPresetIndex: newIndexSelection\n            })\n        };\n\n        // TODO: Factor null preset into preset selector and preset display to make UI size consistent.\n        const presetSelectionDisplay : JSX.Element | null = selectedPreset === undefined\n            ?   <>\n                    <Typography variant=\"body1\" style={{marginTop: 16}}>No available presets.</Typography>\n                </>\n            :   <>\n                    <PresetSelector \n                        selectedIndex={this.state.selectedPresetIndex}\n                        onSelected={(index : number) => onPresetIndexSelected(index)}\n                        availablePresets={presetsForSelectedCharacter}/>\n                    <PresetDisplay value={selectedPreset}/>\n                </>;\n\n        const selectableCharacters = AvailablePresets.getCharacterList();\n        if (!selectableCharacters.has(this.state.selectedCharacter))\n        {\n            selectableCharacters.add(this.state.selectedCharacter);\n        }\n\n        return (\n            <Dialog open={this.props.open} onClose={() => this.props.onCancelled()}>\n                <DialogTitle>\n                    Common Starting Stats\n                </DialogTitle>\n                <DialogContent>\n                    <CharacterSelector\n                        value={this.state.selectedCharacter} \n                        onSelected={(c : CharacterName) => onCharacterChange(c)}\n                        availableCharacters={selectableCharacters}/>\n                    {presetSelectionDisplay}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.props.onCancelled()} color=\"default\">Cancel</Button>\n                    <Button onClick={() => onPresetSelected()} color=\"primary\" disabled={selectedPreset === undefined}>Load Stats</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from 'react';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { CharacterClass } from '../data/CharacterClass';\nimport { getCharacterMaxBaseStats, getCharactersWithDefinedData, StatLimitMods } from '../data/CharacterData';\nimport { CharacterName } from '../data/CharacterName';\nimport { getClassGeneralData, hasClassGeneralData, getEligibleClasses, getRequirementForCharacterAndClass } from '../data/ClassData';\nimport { addStats, forEachStatV, StatArray, statsMax, statsMin, zeroStats } from '../sim/StatArray';\nimport { CharacterSelector } from './CharacterSelector';\nimport { ClassAndLevelSelector } from './ClassAndLevelSelector';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Button from '@material-ui/core/Button';\nimport { InitialStatPresetDialog } from './InitialStatPresetDialog';\nimport { InitialStats } from '../data/CharacterPresetLoader';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport interface StatArraySelectorProps\n{\n    value : StatArray;\n    minimums : StatArray;\n    maximums : StatArray;\n    onChanged : (stat : StatArray) => void;\n    containerStyle? : React.CSSProperties;\n    elementStyle? : React.CSSProperties;\n}\n\n/*\nexport const iHP =  0;\nexport const iSTR = 1;\nexport const iMAG = 2;\nexport const iDEX = 3;\nexport const iSPD = 4;\nexport const iLCK = 5;\nexport const iDEF = 6;\nexport const iRES = 7;\nexport const iCHA = 8;\n*/\nconst STAT_NAME_LIST = [\"Hp\", \"Str\", \"Mag\", \"Dex\", \"Spd\", \"Lck\", \"Def\", \"Res\", \"Cha\"];\n\nexport function StatArraySelector(props : StatArraySelectorProps) : JSX.Element\n{\n    const elements : Array<JSX.Element> = [];\n\n    const style : React.CSSProperties = {...props.containerStyle};\n\n    function inputChanged(index : number, value : number)\n    {\n        const newStats : StatArray = [...props.value];\n        newStats[index] = value;\n        props.onChanged(newStats);\n    }\n    \n    forEachStatV(props.value, (stat : number, index : number) => {\n        const savedIndex = index;\n        const id = `${STAT_NAME_LIST[index]}-input`;\n        elements.push(\n            <div style={props.elementStyle} key={index}>\n                <FormControl>\n                    <InputLabel htmlFor={id}>{STAT_NAME_LIST[index]}</InputLabel>\n                    <Input id={id} type=\"number\" value={stat} \n                        inputProps={{ min: props.minimums[index], max: props.maximums[index]}} \n                        onChange={(event) => {inputChanged(savedIndex, parseInt(event.target.value))}}/>\n                </FormControl>\n            </div>\n        );\n    });\n\n    return <div style={style}>\n        {elements}\n    </div>;\n}\n\nexport interface InitialStatsEditorProps extends InitialStats\n{\n    maxStatMods? : StatLimitMods;\n    handler : (value : InitialStats) => void;\n}\n\nfunction reconcile(character : CharacterName, characterClass : CharacterClass, \n    level : number, stats : StatArray, statMaxMods? : StatLimitMods)\n{\n    let reconciled : InitialStats = {\n        character : character,\n        class : characterClass,\n        level : level,\n        stats : stats\n    };\n\n    // Step 1: enforce that the class chosen is valid for the character, else default to first valid class.\n    const validClasses = getEligibleClasses(reconciled.character);\n    if (!validClasses.has(reconciled.class))\n    {\n        if (validClasses.size === 0)\n        {\n            throw new Error(\"Character has no valid classes. This is a data error.\");\n        }\n\n        // Grab first one\n        for (const c of validClasses)\n        {\n            reconciled.class = c;\n            break;\n        }\n    }\n\n    // Step 2: if class level min is low, bump the level.\n    const specificRequirement = getRequirementForCharacterAndClass(character, reconciled.class);\n    // Should always be defined because of the eligible classes check earlier.\n    if (specificRequirement === undefined)\n    {\n        throw new RangeError(\"Used ineligible class in initial stats reconciliation.\");\n    }\n    const minLevel = specificRequirement.level;\n\n    if (reconciled.level < minLevel)\n    {\n        reconciled.level = minLevel;\n    }\n\n    // Step 3: If stats are below class baselines, clamp stats up. \n    // If stats are above character maximum, clamp stats down.\n    const classBaseStats = getClassGeneralData(reconciled.class).baseStats;\n    const characterMaxStats = getCharacterMaxBaseStats(character, statMaxMods);\n    reconciled.stats = statsMax(classBaseStats, reconciled.stats);\n    reconciled.stats = statsMin(characterMaxStats, reconciled.stats);\n\n    return reconciled;\n}\n\nconst OUTER_LAYOUT : React.CSSProperties = {\n    display : \"flex\",\n    flexDirection : \"row\",\n    flexBasis : 0,\n    flexWrap : \"nowrap\",\n    alignItems : \"stretch\",\n    padding: 8,\n}\n\n// const THUMBNAIL_LAYOUT : React.CSSProperties = {\n//     display : \"block\",\n//     flexGrow : 0,\n//     flexShrink : 0\n// }\n\nconst FORM_CONTAINER_LAYOUT : React.CSSProperties = {\n    display : \"flex\",\n    flexDirection : \"column\",\n    flexBasis : \"auto\",\n    flexWrap : \"nowrap\",\n    flexGrow : 1,\n    flexShrink : 1,\n    marginLeft: 8,\n};\n\nconst INNER_ROW_STYLE : React.CSSProperties = {\n    display : \"flex\",\n    flexGrow : 0,\n    flexShrink : 0,\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    alignContent: \"flex-start\",\n    justifyContent: 'stretch'\n};\n\nconst CHARACTER_IDENTITY_LAYOUT : React.CSSProperties = {\n    display : \"flex\",\n    flexDirection : \"row\",\n    flexBasis : 0,\n    flexGrow: 1,\n    flexShrink: 0,\n    width: '100%'\n};\n\nconst CHARACTER_SELECTOR_STYLE : React.CSSProperties = {\n    display : \"block\",\n    flexGrow : 0,\n    flexShrink : 0,\n};\n\nconst CLASS_AND_LEVEL_SELECTOR_STYLE : React.CSSProperties = {\n    display : \"block\",\n    flexGrow : 0,\n    flexShrink : 0,\n};\n\nconst PRESET_BUTTON_STYLE : React.CSSProperties = {\n    display : \"flex\",\n    flexGrow : 1,\n    flexShrink : 0,\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n};\n\nconst STAT_ARRAY_SELECTOR_STYLE : React.CSSProperties = {\n    display : \"flex\",\n    flexGrow: 0,\n    flexShrink: 0,\n    flexDirection : \"row\",\n    flexBasis : 0,\n    flexWrap : \"wrap\",\n    justifyContent: \"flex-start\",\n};\n\nconst STAT_ARRAY_ELEMENT_STYLE : React.CSSProperties = {\n    display : \"flex\",\n    flexGrow : 0,\n    flexShrink : 0,\n};\n\nexport function InitialStatsEditor(props : InitialStatsEditorProps) : JSX.Element\n{\n    // Index 0 as default\n    const [presetDialogOpen, setPresetDialogOpen] = React.useState<boolean>(false);\n    //const [presetCharacter, setPresetCharacter] = React.useState<CharacterName>(props.character);\n\n    const showPresetDialog = () => {\n        setPresetDialogOpen(true);\n    };\n\n    let minLevel = 1;\n    let statMinumums = zeroStats();\n    let bonusStats = zeroStats();\n    if (hasClassGeneralData(props.class))\n    {\n        const classData = getClassGeneralData(props.class);\n        bonusStats = classData.bonusStats;\n        statMinumums = addStats(classData.baseStats, classData.bonusStats);\n    }\n\n    const specificRequirement = getRequirementForCharacterAndClass(props.character, props.class);\n    if (specificRequirement !== undefined)\n    {\n        minLevel = specificRequirement.level;\n    }\n\n    const characterMaxStats = addStats(getCharacterMaxBaseStats(props.character, props.maxStatMods), bonusStats);\n\n    const _character_handler = (character : CharacterName) =>\n    {\n        //setPresetCharacter(character);\n        props.handler(reconcile(character, props.class, props.level, props.stats, props.maxStatMods));\n    }\n\n    const _class_and_level_handler = (c : CharacterClass, l : number) =>\n    {\n        props.handler(reconcile(props.character, c, l, props.stats, props.maxStatMods));\n    }\n\n    const _stat_handler = (stats : StatArray) =>\n    {\n        // Undo effect of class bonus stats\n        props.handler(reconcile(props.character, props.class, props.level, stats, props.maxStatMods));\n    }\n\n    const _on_preset_dialog_cancelled = () => {\n        setPresetDialogOpen(false);\n    }\n\n    const on_preset_stats_selected = (statBundle : InitialStats) =>\n    {\n        setPresetDialogOpen(false);\n        props.handler(reconcile(statBundle.character, statBundle.class, statBundle.level, statBundle.stats, props.maxStatMods));\n    }\n\n    const dialog = <InitialStatPresetDialog \n                        open={presetDialogOpen} \n                        defaultCharacter={props.character}\n                        onCancelled={_on_preset_dialog_cancelled}\n                        onSelected={on_preset_stats_selected}/>;\n\n    //<CharacterThumbnail character={props.character} width={THUMBNAIL_WIDTH} height={THUMBNAIL_HEIGHT} style={THUMBNAIL_LAYOUT}/>\n    return (\n        <div style={OUTER_LAYOUT}>\n            <div style={FORM_CONTAINER_LAYOUT}>\n                <div style={INNER_ROW_STYLE}>\n                    <FormLabel style={{textAlign: 'left', marginBottom: 8}}>Initial Stats</FormLabel>\n                    <FormGroup style={{...CHARACTER_IDENTITY_LAYOUT, marginBottom: 8}}>\n                        <CharacterSelector \n                            value={props.character} \n                            onSelected={_character_handler} \n                            containerStyle={CHARACTER_SELECTOR_STYLE} \n                            availableCharacters={getCharactersWithDefinedData()}/>\n                        <ClassAndLevelSelector \n                            selectedClass={props.class} \n                            selectedLevel={props.level} \n                            character={props.character}\n                            minLevel={minLevel}\n                            maxLevel={99}\n                            onChanged={_class_and_level_handler} \n                            containerStyle={CLASS_AND_LEVEL_SELECTOR_STYLE}/>\n                        <div style={PRESET_BUTTON_STYLE}>\n                            <FormControl>\n                                <FormLabel>&nbsp;</FormLabel>\n                                <Tooltip title=\"Look up and use well-known stats for the character, such as their level 1 stats, or stats when you recruit them at a specific chapter.\">\n                                    <Button variant=\"outlined\" color=\"primary\" onClick={() => showPresetDialog()} \n                                        style={{marginTop: -4, flexGrow: 0, flexShrink: 0}}>\n                                        Look Up Stats\n                                    </Button>\n                                </Tooltip>\n                            </FormControl>\n                        </div>\n                    </FormGroup>\n                </div>\n                {dialog}\n                <div style={INNER_ROW_STYLE}>\n                    <StatArraySelector\n                        value={props.stats} \n                        minimums={statMinumums} \n                        maximums={characterMaxStats} \n                        onChanged={_stat_handler} \n                        containerStyle={STAT_ARRAY_SELECTOR_STYLE}\n                        elementStyle={STAT_ARRAY_ELEMENT_STYLE}/>\n                </div>\n            </div>\n        </div>\n    );\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport React from 'react';\nimport { StatLimitMods } from '../data/CharacterData';\n\nexport interface MaxStatLimitModEditorProps\n{\n    status : StatLimitMods;\n    onChanged : (status : StatLimitMods) => void;\n    containerStyle? : React.CSSProperties\n}\n\nconst CONTAINER_STYLE : React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    alignContent: \"flex-start\",\n};\n\n// Widget for selecting max stat limits. \nexport function MaxStatLimitModEditor(props : MaxStatLimitModEditorProps) : JSX.Element\n{\n    const _stats_changed = (strAndSpd? : boolean, lckAndCha? : boolean, magAndDex? : boolean, defAndRes? : boolean) => {\n        const newStatuses : StatLimitMods = {\n            ...props.status\n        };\n\n        if (strAndSpd !== undefined)\n        {\n            newStatuses.StrAndSpdUp = strAndSpd;\n        }\n\n        if (lckAndCha !== undefined)\n        {\n            newStatuses.LckAndChaUp = lckAndCha;\n        }\n\n        if (magAndDex !== undefined)\n        {\n            newStatuses.MagAndDexUp = magAndDex;\n        }\n\n        if (defAndRes !== undefined)\n        {\n            newStatuses.DefAndResUp = defAndRes;\n        }\n\n        props.onChanged(newStatuses);\n    };\n\n    return (\n    <div style={{...CONTAINER_STYLE, ...props.containerStyle}}>\n        <FormGroup row>\n            <Tooltip title=\"Statue of Saint Cichol remodeling bonus\">\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.status.StrAndSpdUp}\n                            onChange={(event) => _stats_changed(event.target.checked, undefined, undefined, undefined)}\n                            name=\"Cichol\"\n                            color=\"primary\"\n                        />\n                    \n                    }\n                    label=\"+5 max Str &amp; Spd\"\n                    style={{userSelect: \"none\"}}\n                />\n            </Tooltip>\n            <Tooltip title=\"Statue of Saint Cethleann remodeling bonus\">\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.status.LckAndChaUp}\n                            onChange={(event) => _stats_changed(undefined, event.target.checked, undefined, undefined)}\n                            name=\"Cethleann\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"+5 max Lck &amp; Cha\"\n                    style={{userSelect: \"none\"}}\n                />\n            </Tooltip>\n            <Tooltip title=\"Statue of Saint Macuil remodeling bonus\">\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.status.MagAndDexUp}\n                            onChange={(event) => _stats_changed(undefined, undefined, event.target.checked, undefined)}\n                            name=\"Macuil\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"+5 max Mag &amp; Dex\"\n                    style={{userSelect: \"none\"}}\n                />\n            </Tooltip>\n            <Tooltip title=\"Statue of Saint Indech remodeling bonus\">\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={props.status.DefAndResUp}\n                            onChange={(event) => _stats_changed(undefined, undefined, undefined, event.target.checked)}\n                            name=\"Indech\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"+5 max Def &amp; Res\"\n                    style={{userSelect: \"none\"}}\n                />\n            </Tooltip>\n        </FormGroup>\n    </div>);\n}","export default __webpack_public_path__ + \"static/media/bylethmale_1.dcbce08e.png\";","export default __webpack_public_path__ + \"static/media/bylethmale_2.5da0cd23.png\";","export default __webpack_public_path__ + \"static/media/bylethfemale_1.b3dc503c.png\";","export default __webpack_public_path__ + \"static/media/bylethfemale_2.65bf08cd.png\";","export default __webpack_public_path__ + \"static/media/edelgard_1.26fb14c9.png\";","export default __webpack_public_path__ + \"static/media/edelgard_2.2decafcd.png\";","export default __webpack_public_path__ + \"static/media/hubert_1.9893f7cb.png\";","export default __webpack_public_path__ + \"static/media/hubert_2.24696f37.png\";","export default __webpack_public_path__ + \"static/media/dorothea_1.352f3ff9.png\";","export default __webpack_public_path__ + \"static/media/dorothea_2.e5489f82.png\";","export default __webpack_public_path__ + \"static/media/ferdinand_1.e01d4ba9.png\";","export default __webpack_public_path__ + \"static/media/ferdinand_2.c7c3faf7.png\";","export default __webpack_public_path__ + \"static/media/bernadetta_1.ddf72e60.png\";","export default __webpack_public_path__ + \"static/media/bernadetta_2.10f143c3.png\";","export default __webpack_public_path__ + \"static/media/caspar_1.93657d32.png\";","export default __webpack_public_path__ + \"static/media/caspar_2.28e64f72.png\";","export default __webpack_public_path__ + \"static/media/petra_1.e3cbabac.png\";","export default __webpack_public_path__ + \"static/media/petra_2.c19d7269.png\";","export default __webpack_public_path__ + \"static/media/linhardt_1.69aeaf85.png\";","export default __webpack_public_path__ + \"static/media/linhardt_2.fb420237.png\";","export default __webpack_public_path__ + \"static/media/dimitri_1.907277ab.png\";","export default __webpack_public_path__ + \"static/media/dimitri_2.e2bcb3c7.png\";","export default __webpack_public_path__ + \"static/media/dedue_1.e8c7a0f8.png\";","export default __webpack_public_path__ + \"static/media/dedue_2.b7d7355d.png\";","export default __webpack_public_path__ + \"static/media/felix_1.e12a41a1.png\";","export default __webpack_public_path__ + \"static/media/felix_2.65a4d1f4.png\";","export default __webpack_public_path__ + \"static/media/mercedes_1.709dd8b7.png\";","export default __webpack_public_path__ + \"static/media/mercedes_2.bc01280d.png\";","export default __webpack_public_path__ + \"static/media/ashe_1.fca8630b.png\";","export default __webpack_public_path__ + \"static/media/ashe_2.d20edd16.png\";","export default __webpack_public_path__ + \"static/media/annette_1.d3ba9d78.png\";","export default __webpack_public_path__ + \"static/media/annette_2.da8a9b4a.png\";","export default __webpack_public_path__ + \"static/media/sylvain_1.f3b46f75.png\";","export default __webpack_public_path__ + \"static/media/sylvain_2.89ab047e.png\";","export default __webpack_public_path__ + \"static/media/ingrid_1.95bc8e73.png\";","export default __webpack_public_path__ + \"static/media/ingrid_2.7c022ae4.png\";","export default __webpack_public_path__ + \"static/media/claude_1.4b3e024c.png\";","export default __webpack_public_path__ + \"static/media/claude_2.df1f23e8.png\";","export default __webpack_public_path__ + \"static/media/lorenz_1.f484a3aa.png\";","export default __webpack_public_path__ + \"static/media/lorenz_2.222990e5.png\";","export default __webpack_public_path__ + \"static/media/hilda_1.bb26c611.png\";","export default __webpack_public_path__ + \"static/media/hilda_2.379c72e2.png\";","export default __webpack_public_path__ + \"static/media/raphael_1.8747c879.png\";","export default __webpack_public_path__ + \"static/media/raphael_2.6d6dada6.png\";","export default __webpack_public_path__ + \"static/media/lysithea_1.6b24a6ef.png\";","export default __webpack_public_path__ + \"static/media/lysithea_2.320cc103.png\";","export default __webpack_public_path__ + \"static/media/ignatz_1.2e0562da.png\";","export default __webpack_public_path__ + \"static/media/ignatz_2.b275e8de.png\";","export default __webpack_public_path__ + \"static/media/marianne_1.1ea600fd.png\";","export default __webpack_public_path__ + \"static/media/marianne_2.15831648.png\";","export default __webpack_public_path__ + \"static/media/leonie_1.9910f22f.png\";","export default __webpack_public_path__ + \"static/media/leonie_2.c962826c.png\";","export default __webpack_public_path__ + \"static/media/manuela_1.053891f6.png\";","export default __webpack_public_path__ + \"static/media/hanneman_1.02c3f41e.png\";","export default __webpack_public_path__ + \"static/media/seteth_1.7bdc9131.png\";","export default __webpack_public_path__ + \"static/media/flayn_1.bce536a4.png\";","export default __webpack_public_path__ + \"static/media/cyril_1.c43556db.png\";","export default __webpack_public_path__ + \"static/media/cyril_2.e825af61.png\";","export default __webpack_public_path__ + \"static/media/catherine_1.3fbec75f.png\";","export default __webpack_public_path__ + \"static/media/alois_1.f5e800a6.png\";","export default __webpack_public_path__ + \"static/media/gilbert_1.a4257950.png\";","export default __webpack_public_path__ + \"static/media/shamir_1.19abf07a.png\";","export default __webpack_public_path__ + \"static/media/yuri_1.45c218f6.png\";","export default __webpack_public_path__ + \"static/media/yuri_2.8e6fa80a.png\";","export default __webpack_public_path__ + \"static/media/balthus_1.ae180c53.png\";","export default __webpack_public_path__ + \"static/media/balthus_2.da597aed.png\";","export default __webpack_public_path__ + \"static/media/constance_1.a471a139.png\";","export default __webpack_public_path__ + \"static/media/constance_2.7f4e17b9.png\";","export default __webpack_public_path__ + \"static/media/hapi_1.6fcb97c1.png\";","export default __webpack_public_path__ + \"static/media/hapi_2.f0cc7395.png\";","export default __webpack_public_path__ + \"static/media/jeritza_1.001e5681.png\";","export default __webpack_public_path__ + \"static/media/anna_1.6172a297.png\";","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { CharacterName } from \"./CharacterName\";\n\n// Byleths\nimport BylethMale_Pre from '../images/bylethmale_1.png';\nimport BylethMale_Post from '../images/bylethmale_2.png';\nimport BylethFemale_Pre from '../images/bylethfemale_1.png';\nimport BylethFemale_Post from '../images/bylethfemale_2.png';\n\n// Black Eagles\nimport Edelgard_Pre from '../images/edelgard_1.png';\nimport Edelgard_Post from '../images/edelgard_2.png';\nimport Hubert_Pre from '../images/hubert_1.png';\nimport Hubert_Post from '../images/hubert_2.png';\nimport Dorothea_Pre from '../images/dorothea_1.png';\nimport Dorothea_Post from '../images/dorothea_2.png';\nimport Ferdinand_Pre from '../images/ferdinand_1.png';\nimport Ferdinand_Post from '../images/ferdinand_2.png';\nimport Bernadetta_Pre from '../images/bernadetta_1.png';\nimport Bernadetta_Post from '../images/bernadetta_2.png';\nimport Caspar_Pre from '../images/caspar_1.png';\nimport Caspar_Post from '../images/caspar_2.png';\nimport Petra_Pre from '../images/petra_1.png';\nimport Petra_Post from '../images/petra_2.png';\nimport Linhardt_Pre from '../images/linhardt_1.png';\nimport Linhardt_Post from '../images/linhardt_2.png';\n\n\n// Blue Lions\nimport Dimitri_Pre from '../images/dimitri_1.png';\nimport Dimitri_Post from '../images/dimitri_2.png';\nimport Dedue_Pre from '../images/dedue_1.png';\nimport Dedue_Post from '../images/dedue_2.png';\nimport Felix_Pre from '../images/felix_1.png';\nimport Felix_Post from '../images/felix_2.png';\nimport Mercedes_Pre from '../images/mercedes_1.png';\nimport Mercedes_Post from '../images/mercedes_2.png';\nimport Ashe_Pre from '../images/ashe_1.png';\nimport Ashe_Post from '../images/ashe_2.png';\nimport Annette_Pre from '../images/annette_1.png';\nimport Annette_Post from '../images/annette_2.png';\nimport Sylvain_Pre from '../images/sylvain_1.png';\nimport Sylvain_Post from '../images/sylvain_2.png';\nimport Ingrid_Pre from '../images/ingrid_1.png';\nimport Ingrid_Post from '../images/ingrid_2.png';\n\n// Golden Deer\nimport Claude_Pre from '../images/claude_1.png';\nimport Claude_Post from '../images/claude_2.png';\nimport Lorenz_Pre from '../images/lorenz_1.png';\nimport Lorenz_Post from '../images/lorenz_2.png';\nimport Hilda_Pre from '../images/hilda_1.png';\nimport Hilda_Post from '../images/hilda_2.png';\nimport Raphael_Pre from '../images/raphael_1.png';\nimport Raphael_Post from '../images/raphael_2.png';\nimport Lysithea_Pre from '../images/lysithea_1.png';\nimport Lysithea_Post from '../images/lysithea_2.png';\nimport Ignatz_Pre from '../images/ignatz_1.png';\nimport Ignatz_Post from '../images/ignatz_2.png';\nimport Marianne_Pre from '../images/marianne_1.png';\nimport Marianne_Post from '../images/marianne_2.png';\nimport Leonie_Pre from '../images/leonie_1.png';\nimport Leonie_Post from '../images/leonie_2.png';\n\n// Church\nimport Manuela from '../images/manuela_1.png';\t\nimport Hanneman from '../images/hanneman_1.png';\t\nimport Seteth from '../images/seteth_1.png';\t\nimport Flayn from '../images/flayn_1.png';\t\nimport Cyril_Pre from '../images/cyril_1.png';\nimport Cyril_Post from '../images/cyril_2.png';\nimport Catherine from '../images/catherine_1.png';\t\nimport Alois from '../images/alois_1.png';\t\nimport Gilbert from '../images/gilbert_1.png';\t\nimport Shamir from '../images/shamir_1.png';\t\n\n// Ashen Wolves\nimport Yuri_Pre from '../images/yuri_1.png';\nimport Yuri_Post from '../images/yuri_2.png';\nimport Balthus_Pre from '../images/balthus_1.png';\nimport Balthus_Post from '../images/balthus_2.png';\nimport Constance_Pre from '../images/constance_1.png';\nimport Constance_Post from '../images/constance_2.png';\nimport Hapi_Pre from '../images/hapi_1.png';\nimport Hapi_Post from '../images/hapi_2.png';\n\n// Other\nimport Jeritza from '../images/jeritza_1.png';\nimport Anna from '../images/anna_1.png';\n\nexport interface CharacterThumbnailProps\n{\n    character : CharacterName;\n    // before/after timeskip?\n    timeskip : boolean;\n    width : number;\n    height : number;\n    style? : React.CSSProperties;\n}\n\ntype ImgPath = string;\n\ninterface ThumbnailPaths\n{\n    preSkip : ImgPath;\n    // Leave undefined if portrait doesn't chang after timeskip\n    postSkip? : ImgPath;\n}\n\nexport const CharacterToThumbnailMap = new Map<CharacterName, ThumbnailPaths>();\n\n// Byleths\nCharacterToThumbnailMap.set(CharacterName.BylethMale,   { preSkip: BylethMale_Pre,      postSkip: BylethMale_Post });\nCharacterToThumbnailMap.set(CharacterName.BylethFemale, { preSkip: BylethFemale_Pre,    postSkip: BylethFemale_Post});\n\n// Black Eagles\nCharacterToThumbnailMap.set(CharacterName.Edelgard,     { preSkip: Edelgard_Pre,        postSkip: Edelgard_Post});\nCharacterToThumbnailMap.set(CharacterName.Hubert,       { preSkip: Hubert_Pre,          postSkip: Hubert_Post});\nCharacterToThumbnailMap.set(CharacterName.Dorothea,     { preSkip: Dorothea_Pre,        postSkip: Dorothea_Post});\nCharacterToThumbnailMap.set(CharacterName.Ferdinand,    { preSkip: Ferdinand_Pre,       postSkip: Ferdinand_Post});\nCharacterToThumbnailMap.set(CharacterName.Bernadetta,   { preSkip: Bernadetta_Pre,      postSkip: Bernadetta_Post});\nCharacterToThumbnailMap.set(CharacterName.Caspar,       { preSkip: Caspar_Pre,          postSkip: Caspar_Post});\nCharacterToThumbnailMap.set(CharacterName.Petra,        { preSkip: Petra_Pre,           postSkip: Petra_Post});\nCharacterToThumbnailMap.set(CharacterName.Linhardt,     { preSkip: Linhardt_Pre,        postSkip: Linhardt_Post});\n\n// Blue Lions\nCharacterToThumbnailMap.set(CharacterName.Dimitri,      { preSkip: Dimitri_Pre,         postSkip: Dimitri_Post});\nCharacterToThumbnailMap.set(CharacterName.Dedue,        { preSkip: Dedue_Pre,           postSkip: Dedue_Post});\nCharacterToThumbnailMap.set(CharacterName.Felix,        { preSkip: Felix_Pre,           postSkip: Felix_Post});\nCharacterToThumbnailMap.set(CharacterName.Mercedes,     { preSkip: Mercedes_Pre,        postSkip: Mercedes_Post});\nCharacterToThumbnailMap.set(CharacterName.Ashe,         { preSkip: Ashe_Pre,            postSkip: Ashe_Post});\nCharacterToThumbnailMap.set(CharacterName.Annette,      { preSkip: Annette_Pre,         postSkip: Annette_Post});\nCharacterToThumbnailMap.set(CharacterName.Sylvain,      { preSkip: Sylvain_Pre,         postSkip: Sylvain_Post});\nCharacterToThumbnailMap.set(CharacterName.Ingrid,       { preSkip: Ingrid_Pre,          postSkip: Ingrid_Post});\n\n// Golden Deer\nCharacterToThumbnailMap.set(CharacterName.Claude,       { preSkip: Claude_Pre,          postSkip: Claude_Post});\nCharacterToThumbnailMap.set(CharacterName.Lorenz,       { preSkip: Lorenz_Pre,          postSkip: Lorenz_Post});\nCharacterToThumbnailMap.set(CharacterName.Hilda,        { preSkip: Hilda_Pre,           postSkip: Hilda_Post});\nCharacterToThumbnailMap.set(CharacterName.Raphael,      { preSkip: Raphael_Pre,         postSkip: Raphael_Post});\nCharacterToThumbnailMap.set(CharacterName.Lysithea,     { preSkip: Lysithea_Pre,        postSkip: Lysithea_Post});\nCharacterToThumbnailMap.set(CharacterName.Ignatz,       { preSkip: Ignatz_Pre,          postSkip: Ignatz_Post});\nCharacterToThumbnailMap.set(CharacterName.Marianne,     { preSkip: Marianne_Pre,        postSkip: Marianne_Post});\nCharacterToThumbnailMap.set(CharacterName.Leonie,       { preSkip: Leonie_Pre,          postSkip: Leonie_Post});\n\n// Church\nCharacterToThumbnailMap.set(CharacterName.Manuela,      { preSkip: Manuela});\nCharacterToThumbnailMap.set(CharacterName.Hanneman,     { preSkip: Hanneman});\nCharacterToThumbnailMap.set(CharacterName.Seteth,       { preSkip: Seteth});\nCharacterToThumbnailMap.set(CharacterName.Flayn,        { preSkip: Flayn});\nCharacterToThumbnailMap.set(CharacterName.Cyril,        { preSkip: Cyril_Pre,           postSkip: Cyril_Post});\nCharacterToThumbnailMap.set(CharacterName.Catherine,    { preSkip: Catherine});\nCharacterToThumbnailMap.set(CharacterName.Alois,        { preSkip: Alois});\nCharacterToThumbnailMap.set(CharacterName.Gilbert,      { preSkip: Gilbert});\nCharacterToThumbnailMap.set(CharacterName.Shamir,       { preSkip: Shamir});\n\n// Ashen Wolves\nCharacterToThumbnailMap.set(CharacterName.Yuri,         { preSkip: Yuri_Pre,            postSkip: Yuri_Post});\nCharacterToThumbnailMap.set(CharacterName.Balthus,      { preSkip: Balthus_Pre,         postSkip: Balthus_Post});\nCharacterToThumbnailMap.set(CharacterName.Constance,    { preSkip: Constance_Pre,       postSkip: Constance_Post});\nCharacterToThumbnailMap.set(CharacterName.Hapi,         { preSkip: Hapi_Pre,            postSkip: Hapi_Post});\n\n// Other\nCharacterToThumbnailMap.set(CharacterName.Jeritza,      { preSkip: Jeritza});\nCharacterToThumbnailMap.set(CharacterName.Anna,         { preSkip: Anna});\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { CSSProperties } from 'react';\nimport { CharacterThumbnailProps, CharacterToThumbnailMap } from '../data/CharacterThumbnails';\n\nexport function CharacterThumbnail(props : CharacterThumbnailProps)\n{\n    const path = CharacterToThumbnailMap.get(props.character);\n\n    if (path === undefined)\n    {\n        const style : CSSProperties = {\n            display : \"block\",\n            color : \"white\",\n            width : props.width,\n            height : props.height,\n            backgroundColor : \"#aaaaaa\",\n            fontSize : (props.height * 0.5).toFixed(0) + \"px\",\n            lineHeight : props.height + \"px\",\n            textAlign : \"center\",\n            verticalAlign : \"middle\",\n            ...props.style\n        };\n\n        return (\n            <div style={style}>?</div>\n        );\n    }\n    else\n    {\n        let style : CSSProperties = {\n            display : \"block\",\n            width : props.width,\n            height : props.height,\n            backgroundColor : \"transparent\",\n            objectFit : \"contain\",\n            ...props.style\n        };\n\n        if (!props.timeskip)\n        {\n            return (\n                <img src={path.preSkip} style={style} alt={props.character.toString() + \" Thumbnail\"} />\n            );\n        }\n        else\n        {\n            return (\n                <img src={path.postSkip ?? path.preSkip} style={style} alt={props.character.toString() + \" Thumbnail\"} />\n            );\n        }\n    }\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState } from \"react\";\nimport { CharacterProfile, serializeCharacterProfileToJson } from \"../model/CharacterProfile\";\n\n\nexport interface ExportProfileDialogProps\n{\n    open : boolean;\n    profile : CharacterProfile;\n    onClose : () => void;\n}\n\nexport function ExportProfileDialog(props : ExportProfileDialogProps) : JSX.Element\n{\n    const [showCopiedMessage, setShowCopiedMessage] = useState(false);\n\n    const profileJson = props.open ? serializeCharacterProfileToJson(props.profile) : \"\";\n\n    const copyHandler = async () => {\n        await navigator.clipboard.writeText(serializeCharacterProfileToJson(props.profile));\n        setShowCopiedMessage(true);\n    };\n\n    const closeHandler = async () => {\n        setShowCopiedMessage(false);\n        props.onClose();\n    };\n\n    return (\n        <Dialog open={props.open} onClose={closeHandler}>\n            <DialogTitle>\n                Export Character Code\n            </DialogTitle>\n            <DialogContent>\n                <TextField\n                    multiline\n                    label=\"Character Code\"\n                    variant=\"filled\"\n                    value={profileJson}\n                    rowsMax={6}\n                    style={{minWidth: 500, marginBottom: 4}}\n                    />\n                <Button variant=\"contained\" color=\"primary\" onClick={copyHandler}>Copy to Clipboard</Button>\n                {\n                    showCopiedMessage\n                        ? <Button variant=\"text\" disabled style={{color: \"#222222\"}}>Copied!</Button>\n                        : null\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeHandler} color=\"default\">Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState } from \"react\";\nimport { CharacterProfile, deserializeCharacterProfileFromJson } from \"../model/CharacterProfile\";\n\nexport interface ImportProfileDialogProps\n{\n    open : boolean;\n    onCancelled : () => void;\n    onProfileLoaded : (profile : CharacterProfile) => void;\n}\n\nexport function ImportProfileDialog(props : ImportProfileDialogProps) : JSX.Element\n{\n    const [importString, setImportString] = useState(\"\");\n\n    const closeHandler = async () => {\n        props.onCancelled();\n    };\n\n    const parseResult = deserializeCharacterProfileFromJson(importString);\n\n    const importHandler = async () => {\n        setImportString(\"\");\n        props.onProfileLoaded(parseResult.result as CharacterProfile);\n    };\n\n    return (\n        <Dialog open={props.open} onClose={closeHandler}>\n            <DialogTitle>\n                Import Character Code\n            </DialogTitle>\n            <DialogContent>\n                <TextField\n                    multiline\n                    label=\"Character Code\"\n                    variant=\"filled\"\n                    value={importString}\n                    rowsMax={6}\n                    style={{minWidth: 500, marginBottom: 4}}\n                    onChange={event => setImportString(event.target.value)}\n                    error={importString.trim().length > 0 && parseResult.error !== undefined}\n                    helperText={importString.trim().length > 0 ? parseResult.error as string : undefined}\n                    />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeHandler} color=\"default\">Cancel</Button>\n                <Button onClick={importHandler} color=\"primary\" disabled={parseResult.error !== undefined}>Import</Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { CharacterClass } from '../data/CharacterClass';\nimport { areEquivalentStatLimitMods, StatLimitMods } from '../data/CharacterData';\nimport { CharacterName } from '../data/CharacterName';\nimport { getEligibleClasses } from '../data/ClassData';\nimport { ClassChange, GrowthProfile } from '../sim/GrowthProfile';\nimport { areEqualStats } from '../sim/StatArray';\nimport { CharacterProfile } from '../model/CharacterProfile';\nimport { ClassChangeEditor } from './ClassChangeEditor';\nimport { InitialStatsEditor } from './InitialStatsEditor';\nimport { LevelSelector } from './LevelSelector';\nimport { MaxStatLimitModEditor } from './MaxStatLimitModEditor';\nimport { CharacterThumbnail } from './CharacterThumbnail';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { InitialStats } from '../data/CharacterPresetLoader';\nimport { ExportProfileDialog } from './ExportProfileDialog';\nimport { ImportProfileDialog } from './ImportProfileDialog';\n\nfunction removeUnusedClassChanges(profile : CharacterProfile) : Array<ClassChange>\n{\n    return profile.changes.filter((classChange) => classChange.level >= profile.startLevel && classChange.level <= profile.endLevel);\n}\n\nexport function getGrowthProfileFromCharacterProfile(profile : CharacterProfile) : GrowthProfile\n{\n    const filteredClassChanges = removeUnusedClassChanges(profile);\n    return {\n        startLevel: profile.startLevel,\n        startClass: profile.startClass,\n        startStats: [...profile.startStats],\n        changes: filteredClassChanges,\n        endLevel: profile.endLevel,\n    };\n}\n\n// Compares normalized profiles and returns whether they are equivalent. \n// This results in disregarding extraneous class changes.\nexport function areEquivalentCharacterProfile(left : CharacterProfile, right : CharacterProfile) : boolean\n{\n    if (left.character !== right.character\n        || left.startLevel !== right.startLevel\n        || left.startClass !== right.startClass\n        || !areEqualStats(left.startStats, right.startStats)\n        || left.endLevel !== right.endLevel\n        || !areEquivalentStatLimitMods(left.maxStatMods, right.maxStatMods))\n    {\n        return false;\n    }\n\n    // Normalize to compare.\n    const leftChanges = removeUnusedClassChanges(left);\n    const rightChanges = removeUnusedClassChanges(right);\n    if (leftChanges.length !== rightChanges.length\n        || leftChanges.some((c, i) => c.level !== rightChanges[i].level || c.class !== rightChanges[i].class))\n    {\n        return false;\n    }\n    else\n    {\n        return true;\n    }\n}\n\nexport interface CharacterProfileBuilderProps\n{\n    profile : CharacterProfile;\n    // Default false\n    showDeleteButton? : boolean;\n    onProfileChange : (profile : CharacterProfile) => void;\n    onDeleteClicked : () => void;\n}\n\nconst CharacterCardStyle : React.CSSProperties = {\n    margin: 8,\n};\n\nconst ContainerStyle : React.CSSProperties = {\n    maxWidth: 1000,\n    display: 'flex',\n    flexBasis : \"auto\",\n    flexWrap : \"nowrap\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    alignContent: \"flex-start\",\n};\n\nconst RemoveProfileButtonStyle : React.CSSProperties = {\n    display: 'block',\n    flexBasis: 'auto',\n    flexGrow: 0,\n    flexShrink: 0\n};\n\nconst CharacterStatsContainer : React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    flexBasis: 'auto',\n    flexShrink: 0,\n    flexGrow: 1,\n    alignItems: 'flex-start',\n    alignContent: 'baseline'\n}\n\n// Based on empirically measured values, because it's good enough (tm)\nconst THUMBNAIL_WIDTH = 128;\nconst THUMBNAIL_HEIGHT = 128;\n\nconst CharacterThumbnailLayout : React.CSSProperties = {\n    display : \"block\",\n    flexGrow : 0,\n    flexShrink : 0\n}\n\nconst OtherSettingsContainerStyle : React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    alignContent: \"flex-start\",\n    flexBasis: 0,\n    marginTop: 16,\n    marginRight: 16,\n    marginLeft: 16,\n};\n\nconst OtherSettingsControlRow : React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexBasis: 0,\n    flexGrow: 0,\n    flexShrink: 0,\n    alignItems: \"flex-start\",\n    alignContent: \"flex-start\",\n    paddingTop: 8,\n};\n\nconst ThumbnailColumnStyle : React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexBasis: 'auto',\n    flexShrink: 0,\n    flexGrow: 0,\n    marginTop: 8\n};\n\nconst CharacterImportExportButtonsStyle : React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    flexBasis: 'auto',\n    flexShrink: 1,\n    flexGrow: 1,\n    marginTop: 4\n};\n\nfunction classChangeListToMap(list : Array<ClassChange>) : Map<number, Array<CharacterClass>>\n{\n    const map = new Map<number, Array<CharacterClass>>();\n    for (const entry of list)\n    {\n        const changesForLevel = map.get(entry.level);\n        if (changesForLevel !== undefined)\n        {\n            changesForLevel.push(entry.class);\n        }\n        else\n        {\n            map.set(entry.level, [entry.class]);\n        }\n    }\n    return map;\n}\n\nfunction flattenClassChanges(changes : Map<number, Array<CharacterClass>>) : Array<ClassChange>\n{\n    const list : Array<ClassChange> = [];\n\n    const levels = Array.from(changes.keys());\n    levels.sort((a, b) => a - b);\n    \n    for (const level of levels)\n    {\n        for (const c of (changes.get(level) as Array<CharacterClass>))\n        {\n            list.push({\n                level : level,\n                class : c\n            });\n        }\n    }\n\n    return list;\n}\n\nfunction getReconciledClassChanges(initialStats : InitialStats, classChanges : Array<ClassChange>) : Array<ClassChange>\n{\n    const eligibleClasses = getEligibleClasses(initialStats.character);\n\n    // Delete class changes for ineligible classes.\n    return classChanges.filter((classChange) => eligibleClasses.has(classChange.class));\n}\n\nfunction getReconciledEndLevel(initialStats : InitialStats, classChanges : Array<ClassChange>, endLevel : number) : number\n{\n    let candidate = Math.max(initialStats.level, endLevel);\n\n    if (classChanges.length > 0)\n    {\n        candidate = Math.max(candidate, classChanges[classChanges.length - 1].level);\n    }\n\n    return candidate;\n}\n\nfunction getInitialStatsFromProfile(character : CharacterName, profile : GrowthProfile) : InitialStats\n{\n    return {\n        character : character,\n        class : profile.startClass,\n        level : profile.startLevel,\n        stats : [...profile.startStats],\n    };\n}\n\n// Component that builds a character profile for stats analysis.\nexport function CharacterProfileBuilder(props : CharacterProfileBuilderProps) : JSX.Element\n{\n    const [exportDialogOpen, setExportDialogOpen] = useState(false);\n    const [importDialogOpen, setImportDialogOpen] = useState(false);\n\n    const _max_stat_mods_change = (newMods : StatLimitMods) => {\n        props.onProfileChange({\n            ...props.profile,\n            maxStatMods : newMods\n        });\n    };\n\n    const _initial_stats_editor_change = (newInitialStats : InitialStats) => {\n        const reconciledClassChangeList = getReconciledClassChanges(newInitialStats, props.profile.changes);\n        const reconciledEndLevel = getReconciledEndLevel(newInitialStats, reconciledClassChangeList, props.profile.endLevel);\n\n        props.onProfileChange({\n            ...props.profile,\n            character : newInitialStats.character,\n            startLevel : newInitialStats.level,\n            startClass : newInitialStats.class,\n            startStats : [...newInitialStats.stats],\n            changes : reconciledClassChangeList,\n            endLevel : reconciledEndLevel,\n        });\n    };\n\n    const _handle_class_change_list_changed = (newClassChangeList : Map<number, Array<CharacterClass>>) => {\n        const flattenedClassChanges = flattenClassChanges(newClassChangeList);\n        const reconciledEndLevel = getReconciledEndLevel(getInitialStatsFromProfile(props.profile.character, props.profile), flattenedClassChanges, props.profile.endLevel);\n\n        props.onProfileChange({\n            ...props.profile,\n            changes : flattenedClassChanges,\n            endLevel : reconciledEndLevel,\n        });\n    };\n\n    const _handle_end_level_changed = (newEndLevel : number) => {\n        props.onProfileChange({\n            ...props.profile,\n            endLevel : newEndLevel,\n        });\n    };\n\n    const maybeRemoveButton = (!!props.showDeleteButton)\n        ? <div style={RemoveProfileButtonStyle}><Button color=\"secondary\" disableElevation onClick={() => props.onDeleteClicked()}><RemoveCircleIcon /></Button></div>\n        : null;\n\n    // Nice surprise for some people. 20 because that's how Normal mode works.\n    const useTimeskipThumbnail = props.profile.startLevel >= 20;\n\n    return (\n    <Card style={CharacterCardStyle} variant=\"outlined\">\n        <CardContent>\n            <div style={ContainerStyle}>\n                <div style={ThumbnailColumnStyle}>\n                    <CharacterThumbnail \n                        character={props.profile.character} \n                        width={THUMBNAIL_WIDTH} \n                        height={THUMBNAIL_HEIGHT} \n                        style={CharacterThumbnailLayout}\n                        timeskip={useTimeskipThumbnail}/>\n                    <div style={CharacterImportExportButtonsStyle}>\n                        <Button size=\"small\" onClick={() => setImportDialogOpen(true)}>Import</Button>\n                        <Button size=\"small\" onClick={() => setExportDialogOpen(true)}>Export</Button>\n                    </div>\n                    <ExportProfileDialog\n                        open={exportDialogOpen}\n                        profile={props.profile}\n                        onClose={() => setExportDialogOpen(false)}\n                        />\n                    <ImportProfileDialog\n                        open={importDialogOpen}\n                        onCancelled={() => setImportDialogOpen(false)}\n                        onProfileLoaded={(profile) => {setImportDialogOpen(false); props.onProfileChange(profile)}}\n                        />\n                </div>\n                <div style={CharacterStatsContainer}>\n                    <InitialStatsEditor \n                        character={props.profile.character} \n                        class={props.profile.startClass}\n                        level={props.profile.startLevel}\n                        stats={props.profile.startStats}\n                        maxStatMods={props.profile.maxStatMods}\n                        handler={_initial_stats_editor_change}\n                    />\n                    <div style={OtherSettingsContainerStyle}>\n                        <FormLabel>Analysis Settings</FormLabel>\n                        <LevelSelector\n                                minLevel={props.profile.startLevel}\n                                customText=\"Target level: \"\n                                labelStyle=\"inline\"\n                                value={props.profile.endLevel}\n                                onSelected={_handle_end_level_changed}\n                            />\n                    </div>\n                    <div style={{display: \"flex\", alignItems: \"flex-start\", flexDirection: \"column\", marginTop: 8, marginLeft: 16}}>\n                        <FormLabel style={{marginBottom: 8}}>Class Changes</FormLabel>\n                        <ClassChangeEditor\n                            character={props.profile.character}\n                            classChangeList={classChangeListToMap(props.profile.changes)}\n                            minLevel={props.profile.startLevel}\n                            onClassChangeListChange={_handle_class_change_list_changed}\n                        />\n                    </div>\n                    <div style={OtherSettingsContainerStyle}>\n                        <FormLabel>Other Settings</FormLabel>\n                        <div style={OtherSettingsControlRow}>\n                            <MaxStatLimitModEditor status={props.profile.maxStatMods} onChanged={_max_stat_mods_change} containerStyle={{marginLeft: 16}}/>\n                        </div>\n                    </div>\n                </div>\n                {maybeRemoveButton}\n            </div>\n        </CardContent>\n    </Card>);\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from 'react';\nimport { Area, AreaChart, CartesianGrid, Legend, ReferenceLine, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { DataSeries } from './ProbabilityDisplay';\nimport { SERIES_COLOR_SCHEMES } from \"./ChartColorScheme\";\n\nexport interface RechartProbabilityDisplayProps\n{\n    // X axis\n    minBin? : number;\n    maxBin? : number;\n\n    // Y axis\n    maxValue? : number;\n    minValue : number;\n\n    statLabel : string;\n\n    dataSeries : DataSeries[];\n\n    size? : [number,number];\n\n    style? : React.CSSProperties;\n}\n\nexport interface RechartProbabilityDisplayState\n{\n\n}\n\ninterface ChartDatum extends Record<string,number>\n{\n    bin : number;\n}\n\ntype ChartData = ChartDatum[];\n\nexport class EmptyDataSeriesError extends Error\n{\n    constructor(message : string) \n    {\n        super(message);\n        this.name = \"EmptyDataSeriesError\";\n    }\n}\n\nconst minReducer = (a : number, b : number) => Math.min(a,b);\nconst maxReducer = (a : number, b : number) => Math.min(a,b);\n\nfunction reduceKeys<T>(m : Map<number,T>, reducer : (a : number, b : number) => number) : number\n{\n    return Array.from(m.keys()).reduce(reducer);\n}\n\nfunction computeChartData(props : RechartProbabilityDisplayProps) : [ChartData, string[]]\n{\n    if (props.dataSeries.some(d => d.probabilityValues.size === 0))\n    {\n        throw new EmptyDataSeriesError(\"At least one of the data series has no data points.\");\n    }\n\n    let dataPoints : ChartData = [];\n    const seriesNames : string[] = props.dataSeries.map(d => d.name);\n\n    let leftLimit : number = props.minBin ?? props.dataSeries.map(d => reduceKeys(d.probabilityValues, minReducer)).reduce(minReducer);\n    let rightLimit : number = props.maxBin ?? props.dataSeries.map(d => reduceKeys(d.probabilityValues, maxReducer)).reduce(maxReducer);\n\n    // Pad the left/right bounds to look better\n    if (leftLimit > 0)\n    {\n        leftLimit--;\n    }\n    rightLimit++;\n\n    for (let i = leftLimit; i <= rightLimit; i++)\n    {\n        let point : ChartDatum = {\n            bin : i\n        };\n\n        props.dataSeries.forEach(series => {\n            const maybeBinValue = series.probabilityValues.get(i);\n            if (maybeBinValue !== undefined)\n            {\n                point[series.name] = maybeBinValue as number;\n            }\n            else\n            {\n                point[series.name] = 0;\n            }\n        });\n\n        dataPoints.push(point);\n    }\n\n    return [dataPoints, seriesNames];\n}\n\nfunction computeAverageLines(props : RechartProbabilityDisplayProps) : Array<JSX.Element | null>\n{\n    return props.dataSeries.map((d, index) => {\n        const avgValue = d.averageValue;\n        if (avgValue !== undefined)\n        {\n            const avgXCoord = Math.round(avgValue).toString();\n            return <ReferenceLine \n                x={avgXCoord}\n                stroke={SERIES_COLOR_SCHEMES[index].medianValueColor}\n                key={`avgline-${index}`}\n                label={`Median`}/>;\n        }\n        else\n        {\n            return null;\n        }\n    });\n}\n\nfunction probabilityValueFormatter(value : number, decimalDigits : number) : string\n{\n    return `${(value * 100).toFixed(decimalDigits)}%`;\n}\n\nfunction labelFormatter(prefix: string, number: number) : string\n{\n    return `${prefix}: ${number}`;\n}\n\nexport class RechartProbabilityDisplay extends React.Component<RechartProbabilityDisplayProps, RechartProbabilityDisplayState>\n{\n    private containerRef : React.RefObject<HTMLDivElement>;\n\n    constructor(props : RechartProbabilityDisplayProps)\n    {\n        super(props);\n\n        this.containerRef = React.createRef<HTMLDivElement>();\n    }\n\n    render() : JSX.Element\n    {\n        const [chartData, seriesKeys] = computeChartData(this.props);\n        //const referenceLines = computeReferenceLines(this.props);\n        const averageLines = computeAverageLines(this.props);\n        \n        const areaGraphs = seriesKeys.map((seriesKey : string, index : number) => {\n            return <Area \n                type=\"step\" \n                dataKey={seriesKey} \n                stroke={SERIES_COLOR_SCHEMES[index].baseHighlightColor} \n                key={`area-${index}`} \n                fillOpacity={0.7}\n                fill={SERIES_COLOR_SCHEMES[index].baseColor}/>\n        });\n\n        const maxValue = this.props.maxValue ?? this.props.dataSeries.map(d => Array.from(d.probabilityValues.values()).reduce(maxReducer)).reduce(maxReducer);\n\n        const containerStyle : React.CSSProperties = {};\n\n        if (this.props.size !== undefined)\n        {\n            containerStyle.width = this.props.size[0];\n            containerStyle.height = this.props.size[1];\n        }\n        else if (this.containerRef.current !== null)\n        {\n            //containerStyle.width = \"100%\";\n            containerStyle.height = Math.round(this.containerRef.current.getBoundingClientRect().width * 0.3);\n        }\n        else \n        {\n            // Sensible defaults for a 1080p screen\n            //containerStyle.width = \"100%\"\n            containerStyle.height = 300;\n        }\n\n        return <div ref={this.containerRef} style={{...containerStyle, ...(this.props.style ?? {})}}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart data={chartData} margin={{top: 10, right: 20, left: 20, bottom: 10}}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"bin\">\n                    </XAxis>\n                    <YAxis domain={[this.props.minValue, maxValue]} tickFormatter={(x : any) => probabilityValueFormatter(Number.parseFloat(x), 0)}>\n                    </YAxis>\n                    <Tooltip formatter={(x : any) => probabilityValueFormatter(Number.parseFloat(x), 2)} labelFormatter={(n) => labelFormatter(this.props.statLabel, n)}/>\n                    {averageLines}\n                    {areaGraphs}\n                    <Legend />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>;\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport * as React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { DataSeries } from './ProbabilityDisplay';\nimport { RechartProbabilityDisplay } from './RechartProbabilityDisplay';\n\ntype SingleStatAnalysisResult = Map<number, number>;\nexport interface AnalysisSingleStatDisplayProps\n{\n    title : string;\n    caption : string;\n\n    seriesNames : string[];\n    series : SingleStatAnalysisResult[];\n    averageValues : Array<number | undefined>;\n    \n    size? : [number, number];\n\n    minValue : number;\n    maxValue : number;\n    maxProbability : number;\n}\n\n// Hack to address a problem where Rechart area charts don't render areas right with single values.\nfunction padSingleValueResultMap(resultMap : SingleStatAnalysisResult) : SingleStatAnalysisResult\n{\n    return resultMap;\n}\n\nfunction computeDataSeries(seriesNames : string[], series : SingleStatAnalysisResult[], averages : Array<number | undefined>) : DataSeries[]\n{\n    return series.map((single, index) => ({\n        name : seriesNames[index],\n        probabilityValues : single.size > 1 ? single : padSingleValueResultMap(single),\n        averageValue: averages[index]\n    }));\n}\n\nconst OuterLayoutStyle : React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyItems: \"flex-start\",\n    alignItems: \"center\"\n};\n\nconst ChartTitleStyle : React.CSSProperties = {\n    display: \"flex\",\n    flexBasis: \"auto\",\n    flexShrink: 0,\n    flexGrow: 0,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n    verticalAlign: \"middle\"\n};\n\nconst ChartBodyStyle : React.CSSProperties = {\n    display: \"block\",\n    flexBasis: \"auto\",\n    flexShrink: 0,\n    flexGrow: 1\n};\n\nexport function AnalysisSingleStatDisplay(props : AnalysisSingleStatDisplayProps) : JSX.Element\n{\n    const dataSeries : DataSeries[] = computeDataSeries(props.seriesNames, props.series, props.averageValues);\n\n    return <div style={OuterLayoutStyle}>\n        <div style={{display: 'flex', flexDirection: 'row', alignItems: 'baseline', minWidth: 80}}>\n            <div style={{flexBasis: 'auto', flexGrow: 0, flexShrink: 0}}>\n                <Typography variant=\"h6\" style={ChartTitleStyle}>{props.title}</Typography>\n            </div>\n            <div style={{flexBasis: 'auto', flexGrow: 0, flexShrink: 0, position: 'relative', top: 2}}>\n                <Tooltip title={props.caption}>\n                    <HelpIcon fontSize='small'/>\n                </Tooltip>\n            </div>\n        </div>\n        <RechartProbabilityDisplay \n            style={ChartBodyStyle}\n            size={props.size} \n            minBin={props.minValue} \n            maxBin={props.maxValue} \n            minValue={0.0} \n            maxValue={props.maxProbability} \n            dataSeries={dataSeries}\n            statLabel={props.title.toLocaleUpperCase()}\n        />\n    </div>;\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport * as React from \"react\";\nimport { getCharacterDisplayName } from \"../data/CharacterName\";\nimport { AnalysisComponent, AnalysisReport } from \"../model/PageManager\";\nimport { clamp } from \"../model/Util\";\nimport { computeDistributionMedianForSingleStat, DistributionsByStat } from \"../sim/GrowthResultAccumulator\";\nimport { getCanonicalStatNameByIndex, iCHA, iDEF, iDEX, iHP, iLCK, iMAG, iRES, iSPD, iSTR, iTOTAL } from \"../sim/StatArray\";\nimport { AnalysisSingleStatDisplay } from \"./AnalysisSingleStatDisplay\";\n\ninterface AnalysisReportDisplayProps\n{\n    report : AnalysisReport | null;\n    selectedLevel : number;\n}\n\nexport function getReportMinLevel(report : AnalysisReport | null) : number\n{\n    if (report === null)\n    {\n        return -1;\n    }\n    else\n    {\n        // Default level choice is the highest level number in the computation\n        return report.components.map(v => v.profile.startLevel).reduce((p, c) => Math.min(p, c));\n    }\n}\n\nexport function getReportMaxLevel(report : AnalysisReport | null) : number\n{\n    if (report === null)\n    {\n        return -1;\n    }\n    else\n    {\n        // Default level choice is the highest level number in the computation\n        return report.components.map(v => v.profile.endLevel).reduce((p, c) => Math.max(p, c));\n    }\n}\n\nconst StatDescriptionsByIndex : Map<number, string> = new Map<number, string>();\nStatDescriptionsByIndex.set(iHP, \"The probability (y-axis) that the character's HP will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iSTR, \"The probability (y-axis) that the character's STR will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iMAG, \"The probability (y-axis) that the character's MAG will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iDEX, \"The probability (y-axis) that the character's DEX will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iSPD, \"The probability (y-axis) that the character's SPD will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iLCK, \"The probability (y-axis) that the character's LCK will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iDEF, \"The probability (y-axis) that the character's DEF will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iRES, \"The probability (y-axis) that the character's RES will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iCHA, \"The probability (y-axis) that the character's CHA will end up at that value (x-axis) at the chosen level.\");\nStatDescriptionsByIndex.set(iTOTAL, \"The probability (y-axis) that the character will gain that many stat points (x-axis) when advancing to the chosen level.\");\n\nfunction getStatDescriptionByIndex(statIndex : number) : string\n{\n    const r = StatDescriptionsByIndex.get(statIndex);\n    if (r === undefined)\n    {\n        throw new RangeError(`Unknown StatArray index ${statIndex}`);\n    }\n    else\n    {\n        return r;\n    }\n}\n\nfunction getKeyBounds(statDistribution : Map<number, number>) : [number, number]\n{\n    return Array.from(statDistribution.keys())\n        .map(v => [v, v] as [number, number])\n        .reduce((p, n) => [Math.min(p[0], n[0]), Math.max(p[1], n[1])]);\n}\n\nfunction floorWithPrecision(n : number, digits : number) : number\n{\n    const scale = Math.pow(10.0, digits);\n    return Math.floor(n * scale) / scale;\n}\n\nfunction ceilWithPrecision(n : number, digits : number) : number\n{\n    const scale = Math.pow(10.0, digits);\n    return Math.ceil(n * scale) / scale;\n}\n\nfunction getStatBounds(report : AnalysisReport, selectedLevel : number) : [number, number, number, number, number, number, number]\n{\n    return report.components.map(entry => {\n        const levelToUse = clamp(selectedLevel, entry.profile.startLevel, entry.profile.endLevel);\n        const statDistributions = entry.result.get(levelToUse);\n\n        if (statDistributions === undefined)\n        {\n            throw new RangeError(\"This error should not happen: stat probability distribution was not computed for the 'level to use'.\");\n        }\n\n        const [hpLowerBound, hpUpperBound] = getKeyBounds(statDistributions.hp);\n        const [totalLowerBound, totalUpperBound] = getKeyBounds(statDistributions.levelupTotal);\n        const [restLowerBound, restUpperBound] = [\n            statDistributions.str,\n            statDistributions.mag,\n            statDistributions.dex,\n            statDistributions.spd,\n            statDistributions.lck,\n            statDistributions.def,\n            statDistributions.res,\n            statDistributions.cha]\n        .map(v => getKeyBounds(v))\n        .reduce((p, n) => [Math.min(p[0], n[0]), Math.max(p[1], n[1])]);\n\n        const highestBinProbabilitiesByStat = [\n            statDistributions.str,\n            statDistributions.mag,\n            statDistributions.dex,\n            statDistributions.spd,\n            statDistributions.lck,\n            statDistributions.def,\n            statDistributions.res,\n            statDistributions.cha]\n        .map(v => Math.max(...v.values()));\n        const highestBinProbability = Math.max(...highestBinProbabilitiesByStat);\n\n        return [hpLowerBound, hpUpperBound, restLowerBound, restUpperBound, totalLowerBound, totalUpperBound, highestBinProbability] as [number, number, number, number, number, number, number]\n    }).reduce((p, n) => [\n        floorWithPrecision(Math.min(p[0], n[0]), 2),\n        ceilWithPrecision(Math.max(p[1], n[1]), 2),\n        floorWithPrecision(Math.min(p[2], n[2]), 2),\n        ceilWithPrecision(Math.max(p[3], n[3]), 2),\n        floorWithPrecision(Math.min(p[4], n[4]), 2),\n        ceilWithPrecision(Math.max(p[5], n[5]), 2),\n        ceilWithPrecision(Math.max(p[6], n[6]), 2)\n    ]);\n}\n\nexport function computeDistributionMedian(analysisComponent : AnalysisComponent, levelToUse : number, index: number) : number | undefined\n{\n    const distribution : DistributionsByStat | undefined = analysisComponent.result.get(levelToUse);\n    if (distribution === undefined)\n    {\n        throw new RangeError(`Cannot compute distribution average because data for level ${levelToUse} is not available in distribution.`);\n    }\n\n    const medianDetails = computeDistributionMedianForSingleStat(distribution, index);\n    return medianDetails === undefined ? undefined : medianDetails.median;\n}\n\ninterface PartialStatDisplayProps\n{\n    seriesNames : string[];\n    series : Array<Map<number, number>>;\n    averageValues : Array<number | undefined>;\n}\n\nfunction getSingleStatDisplayProps(report: AnalysisReport, statIndex: number, selectedLevel : number) : PartialStatDisplayProps\n{\n    const seriesLevelToUse = report.components.map(c => clamp(selectedLevel, c.profile.startLevel, c.profile.endLevel));\n    const seriesNames = report.components.map((c, index) => `(#${index+1}) ${getCharacterDisplayName(c.profile.character)} lvl ${seriesLevelToUse[index]}`);\n\n    const series = report.components.map((c, index) => {\n        const data = c.result.get(seriesLevelToUse[index]);\n        if (data === undefined)\n        {\n            console.error(`\"Level to use\" is missing from results. Theoretical bounds are ${c.profile.startLevel} to ${c.profile.endLevel}.`);\n            // Soft failure.\n            return new Map<number, number>();\n        }\n        else\n        {\n            switch (statIndex)\n            {\n                case iHP:\n                    return data.hp;\n                case iSTR:\n                    return data.str;\n                case iMAG:\n                    return data.mag;\n                case iDEX:\n                    return data.dex;\n                case iSPD:\n                    return data.spd;\n                case iLCK:\n                    return data.lck;\n                case iDEF:\n                    return data.def;\n                case iRES:\n                    return data.res;\n                case iCHA:\n                    return data.cha;\n                case iTOTAL:\n                    return data.levelupTotal;\n                default:\n                    throw new RangeError(`Unrecognized index for a stat component: ${statIndex}`);\n            }\n        }\n    });\n\n    const averageValues = report.components.map((c, index) => computeDistributionMedian(c, seriesLevelToUse[index], statIndex));\n\n    return {\n        seriesNames,\n        series,\n        averageValues\n    };\n}\n\nexport class AnalysisReportDisplay extends React.Component<AnalysisReportDisplayProps>\n{\n    // No state object\n    public shouldComponentUpdate(nextProps : AnalysisReportDisplayProps) : boolean\n    {\n        return (this.props.selectedLevel !== nextProps.selectedLevel) \n            || (nextProps.report?.cacheToken !== this.props.report?.cacheToken);\n    }\n\n    public render() : JSX.Element\n    {\n        if (this.props.report === null)\n        {\n            return <></>;\n        }\n\n        const report = this.props.report;\n        //const [minHpValue, maxHpValue, minRestValue, maxRestValue, minTotalValue, maxTotalValue, highestProbability] = getStatBounds(report, this.props.selectedLevel);\n        const [minHpValue, maxHpValue, minRestValue, maxRestValue, , , highestProbability] = getStatBounds(report, this.props.selectedLevel);\n\n        const maxProbabilty = Math.max(highestProbability, 0.3) + 0.01;\n\n        return <div style={{marginTop: 16}}>\n            <div style={{marginTop: 16}}>\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iHP, this.props.selectedLevel)} \n                    minValue={minHpValue} maxValue={maxHpValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iHP)}\n                    caption={getStatDescriptionByIndex(iHP)}/>\n\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iSTR, this.props.selectedLevel)} \n                    minValue={minRestValue} maxValue={maxRestValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iSTR)}\n                    caption={getStatDescriptionByIndex(iSTR)}/>\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iMAG, this.props.selectedLevel)} \n                    minValue={minRestValue} maxValue={maxRestValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iMAG)}\n                    caption={getStatDescriptionByIndex(iMAG)}/>\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iDEX, this.props.selectedLevel)} \n                    minValue={minRestValue} maxValue={maxRestValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iDEX)}\n                    caption={getStatDescriptionByIndex(iDEX)}/>\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iSPD, this.props.selectedLevel)}\n                    minValue={minRestValue} maxValue={maxRestValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iSPD)}\n                    caption={getStatDescriptionByIndex(iSPD)}/>\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iLCK, this.props.selectedLevel)}\n                    minValue={minRestValue} maxValue={maxRestValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iLCK)}\n                    caption={getStatDescriptionByIndex(iLCK)}/>\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iDEF, this.props.selectedLevel)} \n                    minValue={minRestValue} maxValue={maxRestValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iDEF)}\n                    caption={getStatDescriptionByIndex(iDEF)}/>\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iRES, this.props.selectedLevel)}\n                    minValue={minRestValue} maxValue={maxRestValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iRES)}\n                    caption={getStatDescriptionByIndex(iRES)}/>\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iCHA, this.props.selectedLevel)} \n                    minValue={minRestValue} maxValue={maxRestValue} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iCHA)}\n                    caption={getStatDescriptionByIndex(iCHA)}/>\n\n                <AnalysisSingleStatDisplay {...getSingleStatDisplayProps(report, iTOTAL, this.props.selectedLevel)} \n                    minValue={0} maxValue={9} maxProbability={maxProbabilty} \n                    title={getCanonicalStatNameByIndex(iTOTAL)}\n                    caption={getStatDescriptionByIndex(iTOTAL)}/>\n            </div>\n        </div>;\n    }\n}\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport * as React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Legend, PolarAngleAxis, PolarGrid, PolarRadiusAxis, Radar, RadarChart, Tooltip } from \"recharts\";\nimport { getClassDisplayName } from \"../data/CharacterClass\";\nimport { getCharacterDisplayName } from \"../data/CharacterName\";\nimport { getFinalClassAtLevelForProfile } from \"../model/CharacterProfile\";\nimport { AnalysisComponent, AnalysisReport } from \"../model/PageManager\";\nimport { clamp } from \"../model/Util\";\nimport { computeDistributionMedianForSingleStat, DistributionsByStat, getDistributionByStatIndex } from \"../sim/GrowthResultAccumulator\";\nimport { areEqualStats, forEachStatIndex, getCanonicalStatNameByIndex, initStats, mapStatArray, StatArray, zeroStats } from \"../sim/StatArray\";\nimport { SERIES_COLOR_SCHEMES } from \"./ChartColorScheme\";\nimport { StatArraySelector } from \"./InitialStatsEditor\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport * as _MuiTooltip from '@material-ui/core/Tooltip/Tooltip';\nconst MuiTooltip = _MuiTooltip.default;\n\nexport interface LuckAnalysisReportProps\n{\n    report : AnalysisReport;\n    selectedLevel : number;\n    reportIterationCounter : number;\n}\n\ninterface LuckAnalysisReportState\n{\n    referenceStats : StatArray;\n}\n\n// map of stat name to percentile rank\ninterface StatRankingRaw\n{\n    below: number;\n    same: number;\n    above: number;\n}\n\ninterface ChartDatum\n{\n    stat : string;\n    median : number;\n    reference : number;\n}\n\ntype StatPercentileRanks = Map<string, StatRankingRaw>;\n\nexport interface SingleProfileReportProps\n{\n    distributions : DistributionsByStat;\n    ranks : StatPercentileRanks;\n    // Used for color coding\n    profileIndex : number;\n    characterName : string;\n}\n\nconst ReferenceStatContainerStyle : React.CSSProperties = {\n    display : \"flex\",\n    flexGrow: 0,\n    flexShrink: 0,\n    flexDirection : \"row\",\n    flexBasis : 0,\n    flexWrap : \"wrap\",\n    justifyContent: \"flex-start\",\n};\n\nconst ReferenceStatElementStyle : React.CSSProperties = {\n    display : \"flex\",\n    flexGrow : 0,\n    flexShrink : 0,\n};\n\nconst RngRatingExplanation : JSX.Element = <span>The RNG rating is a number from 0 to 1 (or &quot;WTF&quot;) representing how good the character's RNG luck was.\n    0.5 means average luck. &quot;WTF&quot; means the character's RNG luck was simultaneously impossibly good and impossibly bad.\n    RNG rating is calculated as P<sub>b</sub> / (P<sub>a</sub> + P<sub>b</sub>). \n    <br />\n    P<sub>a</sub> is the probability that, if the character's levelups were rerolled,\n    all resulting stats would be equal or better. P<sub>b</sub> is the probability that, if rerolled, all stats would be equal or worse.\n    </span>;\n\nfunction computeChartData(distributions : DistributionsByStat, ranks : StatPercentileRanks) : ChartDatum[]\n{\n    const data : ChartDatum[] = forEachStatIndex((index : number) => {\n        const statName = getCanonicalStatNameByIndex(index);\n        const medianData = computeDistributionMedianForSingleStat(distributions, index);\n\n        if (medianData === undefined)\n        {\n            const serializedDistribution = JSON.stringify(Object.fromEntries(getDistributionByStatIndex(distributions, index).entries()));\n            throw new Error(`Unexpected: distribution with no calculable median. Stat ${statName}, distribution: ${serializedDistribution}`);\n        }\n\n        // Display percentile is the midpoint of the probability range in order to quantize in a representative way that\n        // the 50th percentile is skewed a bit.\n        const medianDisplayPercentile = medianData.pLower + 0.5 * medianData.pMedian;\n        const rank = ranks.get(statName);\n\n        if (rank === undefined)\n        {\n            throw new Error(`Failed to look up rank percentile because key ${statName} was missing. Should be a canonical stat name.`);\n        }\n\n        const rankDisplayPercentile = rank.below + 0.5 * rank.same;\n\n        return {\n            stat: statName,\n            median: medianDisplayPercentile,\n            reference: rankDisplayPercentile\n        };\n    });\n\n    return data;\n}\n\nfunction computeStatSplit(distribution : Map<number, number>, referenceStat : number) : [number, number, number]\n{\n    let below : number = 0.0;\n    let same : number = 0.0;\n    let above : number = 0.0;\n\n    for(const bucket of distribution.keys())\n    {\n        const p = distribution.get(bucket) as number;\n\n        if (bucket < referenceStat)\n        {\n            below += p;\n        }\n        else if (bucket > referenceStat)\n        {\n            above += p;\n        }\n        else\n        {\n            same += p;\n        }\n    }\n\n    return [below, same, above];\n}\n\nfunction computePercentileRanks(referenceStats : StatArray, singleReportComponent : AnalysisComponent, selectedLevel : number) : StatPercentileRanks\n{\n    const distribution = singleReportComponent.result.get(selectedLevel);\n\n    if (distribution === undefined)\n    {\n        throw new RangeError(`No stat distribution found for level ${selectedLevel}.`);\n    }\n\n    // for each stat, compute rank\n    const splits = mapStatArray(referenceStats, (referenceStat, index) => {\n        // We ignore the \"same\" values\n        return computeStatSplit(getDistributionByStatIndex(distribution, index), referenceStat);\n    });\n\n    const result = new Map<string, StatRankingRaw>();\n    splits.forEach((value, index) => {\n        const [below, same, above] = value;\n        result.set(getCanonicalStatNameByIndex(index), {below, same, above});\n    });\n\n    return result;\n}\n\nfunction computeLuckQuotient(ranks : StatPercentileRanks) : number\n{\n    let belowOrSameProduct = 1.0;\n    let aboveOrSameProduct = 1.0;\n\n    //console.log(\"Calculating rank splits\");\n    for (const ranking of ranks.values())\n    {\n        belowOrSameProduct *= (ranking.below + ranking.same);\n        aboveOrSameProduct *= (ranking.above + ranking.same);\n\n        //console.log(`Below/above: ${(ranking.below + ranking.same)}/${(ranking.above + ranking.same)}`);\n    }\n\n    // Adding in the \"same\" component because \"strictly more\" can result in losing resolution\n    const denominator = belowOrSameProduct + aboveOrSameProduct;\n    return belowOrSameProduct / denominator;\n}\n\nconst ContainerStyle : React.CSSProperties = {\n};\n\nconst SingleReportContainerStyle : React.CSSProperties = {\n    padding: 8,\n    marginTop: 16\n};\n\nconst ProfileHeadingContainerStyle : React.CSSProperties = {\n};\n\nconst ProfileNameSegmentStyle : React.CSSProperties = {\n};\n\nconst LuckQuotientHighlight : React.CSSProperties = {\n    fontSize: 24,\n    fontWeight: 'bold'\n};\n\nexport function SingleProfileReport(props: SingleProfileReportProps) : JSX.Element\n{\n    const areaFill = SERIES_COLOR_SCHEMES[props.profileIndex].baseColor;\n    // Hack.\n    const areaOutline = SERIES_COLOR_SCHEMES[props.profileIndex].medianValueColor;\n    \n    // Layered, produces the region effect we need\n    const medianFill = \"#bbbbbb\";\n    const medianOutline = \"#bbbbbb\";\n\n    // TODO: figure out visualization that captures percentile ranges for the reference stat instead of point value\n    const chartData : ChartDatum[] = computeChartData(props.distributions, props.ranks);\n    //console.log(chartData);\n\n    return <RadarChart outerRadius={90} width={400} height={300} data={chartData}>\n            <PolarGrid />\n            <PolarAngleAxis dataKey=\"stat\" />\n            <PolarRadiusAxis domain={[0.0,1.0]} />\n            <Radar name=\"Median\" dataKey=\"median\" stroke={medianOutline} fill={medianFill} fillOpacity={0.4} />\n            <Radar name={`${props.characterName}`} dataKey=\"reference\" stroke={areaOutline} fill={areaFill} fillOpacity={0.4} />\n            <Tooltip formatter={(n : number) => `${(n * 100).toFixed(2)}%`} labelFormatter={(label : string) => `${label.toUpperCase()} Percentile Ranking`}/>\n            <Legend />\n        </RadarChart>;\n}\n\nfunction computeMedianStatsFromReport(report : AnalysisReport) : StatArray\n{\n    let newReferenceStats = zeroStats();\n\n    // Default to median of first profile, if available.\n    if (report.components.length > 0)\n    {\n        const referenceDistributions = report.components[0].result;\n        const referenceSourceLevel = report.components[0].profile.endLevel;\n        const referenceDistribution = referenceDistributions.get(referenceSourceLevel);\n\n        if (referenceDistribution === undefined)\n        {\n            throw new Error(\"Generated report is missing distributions for end level, indicates report generation error.\");\n        }\n\n        newReferenceStats = forEachStatIndex((index) => {\n            const medianDetails = computeDistributionMedianForSingleStat(referenceDistribution, index);\n            if (medianDetails === undefined)\n            {\n                throw new Error(\"Failed to get median from a single-stat-distribution, indicates report generation error.\")\n            }\n            return medianDetails.median;\n        }) as StatArray;\n    }\n\n    return newReferenceStats;\n}\n\n//export class LuckAnalysisReport(props : LuckAnalysisReportProps) : JSX.Element\nexport class LuckAnalysisReport extends React.Component<LuckAnalysisReportProps, LuckAnalysisReportState>\n{\n    constructor(props : LuckAnalysisReportProps)\n    {\n        super(props);\n        this.state = {referenceStats : computeMedianStatsFromReport(props.report)};\n    }\n\n    public shouldComponentUpdate(nextProps : LuckAnalysisReportProps, nextState : LuckAnalysisReportState) : boolean\n    {\n        if (!areEqualStats(this.state.referenceStats, nextState.referenceStats))\n        {\n            return true;\n        }\n        else if (nextProps.reportIterationCounter !== this.props.reportIterationCounter)\n        {\n            return true;\n        }\n        else if (nextProps.selectedLevel !== this.props.selectedLevel)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    public render() : JSX.Element\n    {\n        const onReferenceStatsChanged = (newStats : StatArray) => {\n            this.setState({referenceStats : newStats});\n        };\n\n        const reportBlocks = this.props.report.components.map((component, index) => {\n            const useLevel = clamp(this.props.selectedLevel, component.profile.startLevel, component.profile.endLevel);\n            const distributionsByStat = component.result.get(useLevel);\n            \n            if (distributionsByStat === undefined)\n            {\n                throw new RangeError(\"Missing data for a level that was already clamped.\");\n            }\n    \n            const characterName = getCharacterDisplayName(component.profile.character);\n            const characterClass=  getClassDisplayName(getFinalClassAtLevelForProfile(component.profile, useLevel))\n            const positions = computePercentileRanks(this.state.referenceStats, component, useLevel);;\n            const luckQuotient = computeLuckQuotient(positions);\n\n            const luckQuotientText = isNaN(luckQuotient) ? \"WTF\" : luckQuotient.toFixed(6);\n\n            const characterTextColor = SERIES_COLOR_SCHEMES[index].medianValueColor;\n    \n            return (\n                <Card style={SingleReportContainerStyle} key={`rngreport-card-${index}`}>\n                    <div style={ProfileHeadingContainerStyle}>\n                        <Typography variant=\"body1\" style={ProfileNameSegmentStyle}>\n                            How good would these stats be for&nbsp;\n                            <span style={{color: characterTextColor, fontWeight: 'bold'}}>{characterName}</span>\n                            &nbsp;as a&nbsp;\n                            <span style={{color: characterTextColor, fontWeight: 'bold'}}>level {useLevel} {characterClass}</span>?\n                        </Typography>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'row', alignItems: 'baseline'}}>\n                        <div style={{flexBasis: 'auto', flexGrow: 0, flexShrink: 0}}>\n                            <Typography variant=\"body2\">RNG rating:</Typography>\n                        </div>\n                        <div style={{flexBasis: 'auto', flexGrow: 0, flexShrink: 0}}>\n                            <Typography style={LuckQuotientHighlight}>{luckQuotientText}</Typography>\n                        </div>\n                        <div style={{flexBasis: 'auto', flexGrow: 0, flexShrink: 0, position: 'relative', top: 1}}>\n                            <MuiTooltip title={RngRatingExplanation}>\n                                <HelpIcon fontSize='small'/>\n                            </MuiTooltip>\n                        </div>\n                    </div>\n                    <div>\n                        <SingleProfileReport ranks={positions} profileIndex={index} distributions={distributionsByStat} characterName={characterName}/>\n                    </div>\n                </Card>\n            );\n        });\n    \n        return <div style={ContainerStyle}>\n            <Typography variant=\"body1\">\n                    Your Character's Stats\n                </Typography>\n            <StatArraySelector\n                minimums={zeroStats()}\n                maximums={initStats(150)}\n                value={this.state.referenceStats}\n                onChanged={(stats) => {onReferenceStatsChanged(stats)}}\n                containerStyle={ReferenceStatContainerStyle}\n                elementStyle={ReferenceStatElementStyle}/>\n            {reportBlocks}\n        </div>;\n    }   \n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport { CharacterClass, getClassDisplayName } from \"../data/CharacterClass\";\nimport { CharacterName, getCharacterDisplayName } from \"../data/CharacterName\";\nimport { ClassChange } from \"../sim/GrowthProfile\";\nimport { DistributionsByStat, getDistributionByStatIndex } from \"../sim/GrowthResultAccumulator\";\nimport { forEachStatIndex, getCanonicalStatNameByIndex, iTOTAL } from \"../sim/StatArray\";\nimport { CharacterProfile } from \"./CharacterProfile\";\nimport { AnalysisReport } from \"./PageManager\";\n\nconst ordinalNumberCompare = (a : number, b : number) => a - b;\n\nfunction getCsvHeader() : string\n{\n    return \"ProfileIndex,Character,Class,Level,Stat,Value,Probability\";\n}\n\nfunction toCsvRow(componentIndex: number, character: CharacterName, characterClass : string, lvl: number, statName: string, bucket: number, probability: number): string\n{\n    return `${componentIndex},${getCharacterDisplayName(character)},${characterClass},${lvl.toString()},${statName},${bucket},${probability}`;\n}\n\nfunction computeClassNamesByLevel(profile : CharacterProfile) : Map<number,CharacterClass>\n{\n    const values = new Map<number, CharacterClass>();\n    let levelCounter = profile.startLevel;\n    let currentClass = profile.startClass;\n    // sort to normalize, although sorted order might be an invariant\n    let classChanges = [...profile.changes].reverse();\n\n    console.log([...classChanges]);\n    \n    while(levelCounter <= profile.endLevel)\n    {\n        // Pop off all class changes to pick the last one.\n        while (classChanges.length > 0 && levelCounter === classChanges[classChanges.length - 1].level)\n        {\n            const c = classChanges.pop();\n            currentClass = (c as ClassChange).class;\n        }\n        \n        // Set the last class for each level.\n        values.set(levelCounter, currentClass);\n\n        levelCounter++;\n    }\n\n    return values;\n}\n\nexport function exportAnalysisReportToCsv(report : AnalysisReport) : Blob\n{\n    const header = getCsvHeader();\n\n    const lines : string[] = report.components.flatMap((component, componentIndex) => {\n        const classesByLevel : Map<number,CharacterClass> = computeClassNamesByLevel(component.profile);\n\n        const levels = Array.from(component.result.keys()).sort(ordinalNumberCompare);\n        return levels.flatMap(lvl => {\n            const characterClass = getClassDisplayName(classesByLevel.get(lvl) as CharacterClass);\n            const distributions = component.result.get(lvl) as DistributionsByStat;\n\n            const rows : string[] = [];\n            // Canonical stats\n            forEachStatIndex(iStat => {\n                const statName = getCanonicalStatNameByIndex(iStat);\n                const dist = getDistributionByStatIndex(distributions, iStat);\n\n                const statBuckets = Array.from(dist.keys()).sort(ordinalNumberCompare);\n                \n                statBuckets.map(bucket => {\n                    const probability = dist.get(bucket) as number;\n                    return toCsvRow(componentIndex, component.profile.character, characterClass, lvl, statName, bucket, probability);\n                }).forEach(line => rows.push(line));\n            })\n\n            // Total\n            const totalLevelupDistribution = getDistributionByStatIndex(distributions, iTOTAL);\n            const totalLevelupBuckets = Array.from(totalLevelupDistribution.keys()).sort(ordinalNumberCompare);\n            const totalLevelupStatName = \"levelup-total\";\n            totalLevelupBuckets.map(bucket => {\n                const probability = totalLevelupDistribution.get(bucket) as number;\n                return toCsvRow(componentIndex, component.profile.character, characterClass, lvl, totalLevelupStatName, bucket, probability);\n            }).forEach(line => rows.push(line));\n\n            return rows;\n        });\n    });\n\n    const allData = [header, ...lines].join(\"\\n\");\n    return new Blob([allData], {type: 'text/csv;charset=utf-8'});\n}\n\n","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getClassDisplayName } from \"../data/CharacterClass\";\nimport { getCharacterDisplayName } from \"../data/CharacterName\";\nimport { AnalysisReport } from \"../model/PageManager\";\nimport { exportAnalysisReportToCsv } from \"../model/AnalysisReportExport\";\n\nexport interface ExportDataDialogProps\n{\n    open : boolean;\n    report : AnalysisReport;\n    onClose : () => void;\n}\n\ninterface ExportDataDialogState\n{\n}\n\nexport class ExportDataDialog extends React.Component<ExportDataDialogProps, ExportDataDialogState>\n{\n    private dataBlobUrl : string | null;\n    \n    constructor(props : ExportDataDialogProps)\n    {\n        super(props);\n        \n        this.state = {};\n\n        this.dataBlobUrl = null;\n    }\n\n    private async downloadDataBlob()\n    {\n        if (this.dataBlobUrl !== null)\n        {\n            this.clearDataBlob();\n        }\n\n        this.dataBlobUrl = URL.createObjectURL(exportAnalysisReportToCsv(this.props.report));\n\n        const aElem = document.createElement('a');\n        aElem.href = (this.dataBlobUrl as string);\n        aElem.target = \"_blank\";\n        aElem.download = \"analysis-report.csv\";\n        aElem.click();\n    }\n\n    private async clearDataBlob()\n    {\n        if (this.dataBlobUrl !== null)\n        {\n            URL.revokeObjectURL(this.dataBlobUrl);\n            this.dataBlobUrl = null;\n        }\n    }\n\n    public render() : JSX.Element\n    {\n        const closeHandler = async () => {\n            await this.clearDataBlob();\n            this.props.onClose();\n        };\n    \n        const profileStrings = this.props.report.components.map(c => c.profile).map((p, index) => {\n            const endClass = p.changes.length > 0 ? p.changes[p.changes.length - 1].class : undefined;\n    \n            return <Typography variant=\"body2\" key={`export-label-${index}`}>\n                {(index + 1).toString()}. {getCharacterDisplayName(p.character)} lvl. {p.startLevel.toString()} {getClassDisplayName(p.startClass)}\n                &nbsp;&#x2192;&nbsp;\n                lvl. {p.endLevel.toString()} {endClass !== undefined ? getClassDisplayName(endClass) : \"\"}\n            </Typography>;\n        });\n    \n        return (\n                <Dialog open={this.props.open} onClose={closeHandler}>\n                    <DialogTitle>\n                        Export Analysis Report\n                    </DialogTitle>\n                    <DialogContent style={{minWidth: 400, minHeight: 100}}>\n                        <Typography variant=\"subtitle1\">Exporting probability distributions for:</Typography>\n                        {profileStrings}\n                        <br style={{height: 16}}/>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.downloadDataBlob()}>Download</Button>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={closeHandler} color=\"default\">Close</Button>\n                    </DialogActions>\n                </Dialog>\n        );\n    }\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport * as React from \"react\";\nimport { getAppContext, IAppContextValue } from \"../model/AppContext\";\nimport { CharacterProfile, getCharacterProfileHash } from \"../model/CharacterProfile\";\nimport { AnalysisComponent, AnalysisReport, INVALID_PAGE_LISTENER_HANDLE, IPageManager, PageData } from \"../model/PageManager\";\nimport { GrowthResultAccumulator, StatDistributionsByLevel } from \"../sim/GrowthResultAccumulator\";\nimport { CharacterProfileBuilder, getGrowthProfileFromCharacterProfile } from \"./CharacterProfileBuilder\";\nimport { SERIES_COLOR_SCHEMES } from \"./ChartColorScheme\";\nimport { AnalysisReportDisplay, getReportMaxLevel, getReportMinLevel } from \"./AnalysisReportDisplay\";\nimport { LuckAnalysisReport } from \"./LuckAnalysisReport\";\nimport { LevelSelector } from \"./LevelSelector\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Container from \"@material-ui/core/Container\";\nimport { ExportDataDialog } from \"./ExportDataDialog\";\n\nexport interface AnalysisPageProps\n{\n    pageId : number;\n}\n\nexport interface AnalysisPageState\n{\n    resultsComputed : boolean;\n    results : StatDistributionsByLevel[] | null;\n    profileBlockExpansion : boolean[];\n    selectedReportLevel : number;\n    exportDataDialogOpen : boolean;\n}\n\nfunction getDefaultAnalysisPageState() : AnalysisPageState\n{\n    return {\n        resultsComputed : false,\n        results : null,\n        profileBlockExpansion : [],\n        selectedReportLevel : 1000,\n        exportDataDialogOpen : false,\n    }\n}\n\nfunction getMaxProfileCount() : number\n{\n    // However many colors we can show is how many profiles you can pack into the charts\n    return SERIES_COLOR_SCHEMES.length;\n}\n\n// TODO : Find more elegant way to do this.\nlet reportGenerationCounter : number = 0;\n\nfunction generateAnalysisReport(profiles: CharacterProfile[]) : AnalysisReport\n{\n    const accumulators = profiles.map(p => {\n        const growthProfile = getGrowthProfileFromCharacterProfile(p);\n        const mods = p.maxStatMods;\n        return new GrowthResultAccumulator(p.character, growthProfile, mods);\n    });\n\n    const distributions = accumulators.map(accum => {\n        accum.compute();\n        return accum.getDistributions();\n    });\n\n    const components : AnalysisComponent[] = distributions.map((distribution, index) => ({\n        profile : profiles[index],\n        result : distribution\n    }));\n\n    reportGenerationCounter++;\n\n    return {\n        components : components,\n        cacheToken : reportGenerationCounter\n    };\n}\n\nconst AddProfileButtonContainerStyle : React.CSSProperties = {\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n};\n\nconst AddProfileButtonStyle : React.CSSProperties = {\n    display: 'block',\n    flexBasis: 'auto',\n    flexGrow: 0,\n    flexShrink: 0\n}\n\n// A page contains multiple profiles and possibly the analyses for the outcomes.\n\nexport class AnalysisPage extends React.Component<AnalysisPageProps, AnalysisPageState>\n{\n    private listenerHandle : number;\n    private reportIterationCounter : number;\n\n    constructor(props : AnalysisPageProps)\n    {\n        super(props);\n        this.state = getDefaultAnalysisPageState();\n\n        this.listenerHandle = INVALID_PAGE_LISTENER_HANDLE;\n        this.reportIterationCounter = 0;\n    }\n\n    componentDidMount() : void\n    {\n        const pageManager = (this.context as IAppContextValue).pageManager;\n        this.attachListener(pageManager, this.props.pageId);\n    }\n\n    componentDidUpdate(prevProps : AnalysisPageProps, prevState : AnalysisPageState, snapshot : any) : void\n    {\n        const pageManager = (this.context as IAppContextValue).pageManager;\n        if (this.props.pageId !== prevProps.pageId)\n        {\n            this.detachListener(pageManager, prevProps.pageId);\n            this.attachListener(pageManager, this.props.pageId);\n\n            this.reconcilePageState(pageManager);\n        }\n    }\n\n    componentWillUnmount() : void\n    {\n        const pageManager = (this.context as IAppContextValue).pageManager;\n        this.detachListener(pageManager, this.props.pageId);\n    }\n\n    render() : JSX.Element\n    {\n        const pageManager = (this.context as IAppContextValue).pageManager;\n        const pageDataRef = pageManager.getPageData(this.props.pageId);\n\n        const onSelectedLevelChanged = (newSelectedLevel : number) => {\n            this.setState({selectedReportLevel: newSelectedLevel})\n        };\n\n        const exportDataButtonClicked = () => {\n            this.setState({exportDataDialogOpen : true});\n        };\n\n        const onExportDataDialogClosed = () => {\n            this.setState({exportDataDialogOpen : false});\n        };\n\n        let maybeAddProfileButton : JSX.Element | null = null;\n        if (pageDataRef.profiles.length < getMaxProfileCount())\n        {\n            maybeAddProfileButton = <Button \n                                    variant=\"contained\" \n                                    disableElevation \n                                    onClick={() => this.onAddProfileClicked()} \n                                    color=\"primary\" \n                                    style={AddProfileButtonStyle}>\n                                        Add Profile\n                                    </Button>;\n        }\n        else\n        {\n            maybeAddProfileButton = <Button \n                                    variant=\"contained\" \n                                    disableElevation\n                                    disabled\n                                    style={AddProfileButtonStyle}>\n                                        Max Profiles Added\n                                    </Button>;\n        }\n\n        const computeReportButtonColor = this.state.resultsComputed ? \"default\" : \"primary\";\n        const computeReportButton = <Button \n                                    variant=\"contained\" \n                                    disableElevation \n                                    color={computeReportButtonColor}\n                                    onClick={() => this.onGenerateReportClicked()}>\n                                        Generate Report\n                                    </Button>;\n\n        const profileBlock = <div>\n            {pageDataRef.profiles.map((characterProfile, index) => this.renderProfile(pageDataRef, characterProfile, index))}\n            <div style={AddProfileButtonContainerStyle}>{maybeAddProfileButton}</div>\n        </div>;\n\n        const rnjesusDisplay = (pageDataRef.report === null)\n            ? null\n            : <Accordion>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} id=\"rejesus_display\">\n                    <Typography variant=\"h6\" style={{flexBasis: \"33%\", flexShrink: 0, textAlign: \"start\"}}>\n                        RNJesus Luck Analysis\n                    </Typography>\n                    <Typography variant=\"h6\" style={{opacity: 0.5}}>click to open</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Container>\n                        <LuckAnalysisReport \n                            report={pageDataRef.report}\n                            reportIterationCounter={this.reportIterationCounter}\n                            selectedLevel={this.state.selectedReportLevel}/>\n                    </Container>\n                </AccordionDetails>\n            </Accordion>;\n\n        const reportBlock = pageDataRef.report === null\n            ? null\n            : <Card style={{padding: 16, marginTop: 16}}>\n                <Button style={{float: 'right'}} variant=\"contained\" color=\"default\" onClick={exportDataButtonClicked}>Export Data</Button>\n                <Typography variant=\"h6\" style={{textAlign: \"start\"}}>\n                    Individual Stat Breakdown\n                </Typography>\n                <ExportDataDialog open={this.state.exportDataDialogOpen} onClose={onExportDataDialogClosed} report={pageDataRef.report as AnalysisReport}/>\n                <AnalysisReportDisplay \n                    report={pageDataRef.report as AnalysisReport}\n                    selectedLevel={this.state.selectedReportLevel}/>\n            </Card>;\n\n        const levelSelector = pageDataRef.report === null\n            ? null\n            : <div style={{margin: 16}}>\n                <LevelSelector\n                    minLevel={getReportMinLevel(pageDataRef.report)}\n                    maxLevel={getReportMaxLevel(pageDataRef.report)}\n                    value={this.state.selectedReportLevel}\n                    customText=\"View results for level:\"\n                    labelStyle=\"inline\"\n                    onSelected={onSelectedLevelChanged}/>\n            </div>;\n\n        return <div style={{maxWidth: 1000}}>\n            {profileBlock}\n            <Card variant=\"outlined\" style={{margin: 8}}>\n                <CardContent style={{textAlign: \"start\"}}>\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                        <div style={{flexBasis: 'auto', flexShrink: 0, flexGrow: 0}}>\n                            <Typography variant=\"h5\" style={{textAlign: \"start\"}}>\n                                Analysis\n                            </Typography>\n                        </div>\n                        <div style={{flexBasis: 'auto', flexShrink: 0, flexGrow: 1, marginLeft: 24}}>\n                            {computeReportButton}\n                        </div>\n                    </div>\n                    {levelSelector}\n                    {rnjesusDisplay}\n                    {reportBlock}\n                </CardContent>\n            </Card>\n        </div>;\n    }\n\n    private onGenerateReportClicked() : void\n    {\n        const pageManager = (this.context as IAppContextValue).pageManager;\n        const pageDataRef = pageManager.getPageData(this.props.pageId);\n        const report = generateAnalysisReport(pageDataRef.profiles);\n        this.reportIterationCounter++;\n        \n        pageManager.updateAnalysis(this.props.pageId, report);\n\n        this.setState({\n            resultsComputed: true,\n            selectedReportLevel: getReportMaxLevel(report)\n        });\n    }\n\n    private onAddProfileClicked() : void\n    {\n        const pageManager = (this.context as IAppContextValue).pageManager;\n        pageManager.newProfile(this.props.pageId);\n        this.setState({resultsComputed: false});\n    }\n\n    private onRemoveProfileClicked(index : number)\n    {\n        const pageManager = (this.context as IAppContextValue).pageManager;\n        pageManager.deleteProfile(this.props.pageId, index);\n        this.setState({resultsComputed: false});\n    }\n\n    private profileChanged(newProfile : CharacterProfile, index : number)\n    {\n        const pageManager = (this.context as IAppContextValue).pageManager;\n        pageManager.updateProfile(this.props.pageId, index, newProfile);\n        this.setState({resultsComputed: false});\n    }\n\n    private renderProfile(pageDataRef : PageData, characterProfile : CharacterProfile, index : number)\n    {\n        // If last profile, do not allow delete, only edit.\n        const showDeleteButton = pageDataRef.profiles.length > 1;\n\n        return <CharacterProfileBuilder \n            key={index}\n            profile={characterProfile}\n            showDeleteButton={showDeleteButton}\n            onProfileChange={(newProfile) => this.profileChanged(newProfile, index)}\n            onDeleteClicked={() => this.onRemoveProfileClicked(index)} />;\n    }\n\n    private attachListener(pageManager : IPageManager, page : number) : void\n    {\n        this.listenerHandle = pageManager.addPageListener(page, (pageNumber, pageData) => {this.onPageUpdated(pageNumber, pageData)});\n    }\n\n    private detachListener(pageManager : IPageManager, page : number) : void\n    {\n        pageManager.removePageListener(page, this.listenerHandle);\n        this.listenerHandle = INVALID_PAGE_LISTENER_HANDLE;\n    }\n\n    private onPageUpdated(page : number, pageData : PageData) : void\n    {\n        this.forceUpdate();\n    }\n\n    private reconcilePageState(pageManager : IPageManager) : void\n    {\n        const pageData = pageManager.getPageData(this.props.pageId);\n\n        let newBlockExpansion = Array.from(this.state.profileBlockExpansion);\n        if (pageData.profiles.length > this.state.profileBlockExpansion.length)\n        {\n            const tailLength = pageData.profiles.length - this.state.profileBlockExpansion.length;\n            newBlockExpansion = newBlockExpansion.concat(Array<boolean>(tailLength).fill(false))\n        }\n        else if (pageData.profiles.length < this.state.profileBlockExpansion.length)\n        {\n            newBlockExpansion = newBlockExpansion.slice(0, pageData.profiles.length);\n        }\n\n        if (pageData.report !== null)\n        {\n            const profilesMatched : boolean = \n                pageData.profiles.length === pageData.report.components.length\n                && pageData.report.components\n                    .map(c => c.profile)\n                    .every((oldProfile, index) => {\n                        const newProfile = pageData.profiles[index];\n                        const hashNew = getCharacterProfileHash(newProfile.character, getGrowthProfileFromCharacterProfile(newProfile), newProfile.maxStatMods);\n                        const hashOld = getCharacterProfileHash(oldProfile.character, getGrowthProfileFromCharacterProfile(oldProfile), oldProfile.maxStatMods);\n                        return hashNew === hashOld;\n                    });\n\n            this.setState({\n                resultsComputed : profilesMatched,\n                results : pageData.report.components.map(component => component.result),\n                profileBlockExpansion : newBlockExpansion\n            });\n        }\n        else\n        {\n            this.setState({\n                resultsComputed : false,\n                results : null,\n                profileBlockExpansion : newBlockExpansion\n            });\n        }\n    }\n}\nAnalysisPage.contextType = getAppContext().Context;\n","export default __webpack_public_path__ + \"static/media/about.8a175884.md\";","export default __webpack_public_path__ + \"static/media/docs.8a175884.md\";","export default __webpack_public_path__ + \"static/media/faq.8a175884.md\";","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport Card from \"@material-ui/core/Card\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport AboutDocsAssetUrl from './docs/about.md';\nimport DocumentationAssetUrl from './docs/docs.md';\nimport FaqAssetUrl from './docs/faq.md';\n\nconst AboutDocsUrlSuffix = \"docs/about.md\";\nconst DocumentationUrlSuffix = \"docs/docs.md\";\nconst FaqUrlSuffix = \"docs/faq.md\"\n\nexport interface FaqEntryProps\n{\n    index : number;\n    question : string | JSX.Element;\n    answer : string | JSX.Element;\n}\n\nexport interface HeaderAndDocumentationProps\n{\n\n}\n\nconst LinksTrayStyle : React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 16\n};\n\nconst MenuIconStyle : React.CSSProperties = {\n    display: \"inline\",\n    marginBottom: -5,\n    marginLeft: 16,\n    paddingRight: 2\n};\n\nconst GithubPagesRegex = /(\\w+).github.io/i;\n\nexport function HeaderAndDocumentation(props : HeaderAndDocumentationProps) : JSX.Element\n{\n    const hostname = window.location.hostname;\n    const segmentsMatch = hostname.match(GithubPagesRegex);\n\n    let urlPrefix : string | undefined = undefined;\n    if (segmentsMatch !== null)\n    {\n        const gitUser = segmentsMatch[1];\n        urlPrefix = `https://github.com/${gitUser}/fe3hanalyzer/`;\n    }\n\n    const FaqUrl = urlPrefix === undefined ? FaqAssetUrl : urlPrefix + FaqUrlSuffix;\n    const DocumentationUrl = urlPrefix === undefined ? DocumentationAssetUrl : urlPrefix + DocumentationUrlSuffix;\n    const AboutDocsUrl = urlPrefix === undefined ? AboutDocsAssetUrl : urlPrefix + AboutDocsUrlSuffix;\n\n    return <div style={{display: 'flex', width: 1000, flexDirection: 'row'}}>\n        <Card style={{margin: 8, padding: 16, flexBasis: 'auto', flexGrow: 1, flexShrink: 1}}>\n            <Typography variant=\"h3\">\n                FE:3H Character Analyzer\n            </Typography>\n            <div style={LinksTrayStyle}>\n                <Link href={FaqUrl} underline=\"always\"><HelpOutlineIcon fontSize=\"small\" style={{...MenuIconStyle, marginLeft: 0}}/>FAQ</Link>\n                <Link href={DocumentationUrl} underline=\"always\"><MenuBookIcon fontSize=\"small\" style={MenuIconStyle}/>Documentation</Link>\n                <Link href={AboutDocsUrl} underline=\"always\"><InfoIcon fontSize=\"small\" style={MenuIconStyle}/>About</Link>\n            </div>\n        </Card>\n    </div>;\n}","/*\nCopyright 2021 knsley\n(https://github.com/knsley)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n*/\n\nimport React from 'react';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { CharacterName } from './data/CharacterName';\nimport { getDefaultStatModSetting, loadCharacterData } from './data/CharacterData';\nimport { getAppContext } from './model/AppContext';\nimport { CharacterProfile } from './model/CharacterProfile';\nimport { AnalysisPage } from './ui/AnalysisPage';\nimport { HeaderAndDocumentation } from './ui/HeaderAndDocumentation';\nimport { CharacterClass } from './data/CharacterClass';\nimport { loadClassData } from './data/ClassData';\n\ninterface AppProps\n{\n\n}\n\ninterface AppState\n{\n  profile : CharacterProfile;\n  loaded : boolean;\n}\n\nfunction getInitialProfile() : CharacterProfile\n{\n  return {\n    character : (0 as CharacterName),\n    maxStatMods : getDefaultStatModSetting(),\n    startLevel : 1,\n    startClass : CharacterClass.Commoner,\n    startStats : [0,0,0,0,0,0,0,0,0],\n    changes : [],\n    endLevel : 99,\n  }\n}\n\nclass App extends React.Component<AppProps, AppState> {\n\n  constructor(props : AppProps)\n  {\n    super(props);\n    this.state = {profile: getInitialProfile(), loaded : false};\n  }\n\n  componentDidMount() {\n    loadCharacterData().then(() => {\n      loadClassData().then(() => {\n        const appContext = getAppContext();\n        // test page #, more generally would expect to create a single page if no page, or load from store.\n        if (!appContext.currentValue.pageManager.hasPage(0))\n        {\n          appContext.currentValue.pageManager.createNewPage(0);\n        }\n\n        this.setState({loaded: true});\n      });\n    });\n  }\n\n  render()\n  {\n    const theme = createMuiTheme({\n      typography: {\n      },\n    });\n\n    if (this.state.loaded)\n    {\n      const AppContextObject = getAppContext();\n      const AppContext = AppContextObject.Context;\n\n      return (\n        <AppContext.Provider value={AppContextObject.currentValue}>\n          <ThemeProvider theme={theme}>\n            <div className=\"App\">\n              <HeaderAndDocumentation />\n              <AnalysisPage pageId={0}/>\n            </div>\n          </ThemeProvider>\n        </AppContext.Provider>\n      );\n    }\n    else\n    {\n      return <div>Loading...</div>;\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(console.log);\n"],"sourceRoot":""}